/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 00:17:48 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotAxis_ESTest extends PlotAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.xB = (double) 2;
      int int0 = plotYAxis0.scaleCoord(1.0);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(3, int0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualTickStepSize(true);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setUpperBounds(0.239);
      assertEquals(0.239, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      int int0 = plotXAxis0.scaleCoord(1.0E-6);
      assertEquals(1, int0);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      int int0 = plotYAxis0.scaleCoord((-1746.8658942503));
      assertEquals((-1745), int0);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("|KcvS(UB5sn6ic!!3");
      PlotXAxis plotXAxis0 = new PlotXAxis("|KcvS(UB5sn6ic!!3", linearAxisScale0, choiceFormat0, (-1));
      String string0 = plotXAxis0.lowerBoundsAsString();
      assertEquals("", string0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals((-1), plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis("]Z(4>C/WLN", linearAxisScale0, numberFormat0, (-97));
      plotYAxis0.aUB = 10.0;
      plotYAxis0.setAxisTickLimits();
      double double0 = plotYAxis0.getUpperBounds();
      assertEquals((-4.999999999999999E307), plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      
      PlotRunList plotRunList0 = new PlotRunList();
      plotYAxis0.setAxisBounds(plotRunList0);
      double double0 = plotYAxis0.getUpperBounds();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis plotYAxis1 = (PlotYAxis)plotYAxis0.clone();
      plotYAxis1.quantum = (double) 5;
      double double0 = plotYAxis1.getTickStepSize();
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisTickLimits();
      double double0 = plotYAxis0.getTickStepSize();
      assertEquals(Double.NaN, plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = new Locale("&FSubQEtL)nNia", "");
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("Ion 2 RADIUS", linearAxisScale0, numberFormat0, 673);
      NumberFormat numberFormat1 = plotXAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(673, plotXAxis0.getGridStyle());
      assertTrue(numberFormat1.isParseIntegerOnly());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis("]Z(4>C/WLN", linearAxisScale0, numberFormat0, (-97));
      DecimalFormat decimalFormat0 = (DecimalFormat)plotYAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals((-97), plotYAxis0.getGridStyle());
      assertEquals("-\u00A4", decimalFormat0.getNegativePrefix());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat("}&t(");
      PlotXAxis plotXAxis0 = new PlotXAxis("\uFFFD", linearAxisScale0, decimalFormat0, (-421));
      DecimalFormat decimalFormat1 = (DecimalFormat)plotXAxis0.getNumberFormat();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals((-421), plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals("}&t(", decimalFormat1.getPositivePrefix());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      
      PlotRunList plotRunList0 = new PlotRunList();
      plotYAxis0.setAxisBounds(plotRunList0);
      double double0 = plotYAxis0.getLowerBounds();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("_H<RL,d0[6EK[e?MZnX", linearAxisScale0, numberFormat0, 0);
      String string0 = plotXAxis0.getLabel();
      assertEquals(0, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertNotNull(string0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat("7Af/SI\"");
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, decimalFormat0, 27);
      String string0 = plotXAxis0.getLabel();
      assertEquals(27, plotXAxis0.getGridStyle());
      assertNotNull(string0);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("_H<RL,d0[6EK[e?MZnX", linearAxisScale0, numberFormat0, 0);
      int int0 = plotXAxis0.getGridStyle();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis((String) null, linearAxisScale0, decimalFormat0, 35);
      int int0 = plotXAxis0.getGridStyle();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.nf = null;
      // Undeclared exception!
      try { 
        plotYAxis0.upperBoundsAsString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("xjeyKP06.6");
      PlotXAxis plotXAxis0 = new PlotXAxis("xjeyKP06.6", linearAxisScale0, choiceFormat0, (-516));
      // Undeclared exception!
      try { 
        plotXAxis0.upperBoundsAsString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.scale = null;
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisTickLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun[] plotRunArray0 = new PlotRun[8];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.scale = null;
      // Undeclared exception!
      try { 
        plotYAxis0.scaleCoord(1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.nf = null;
      // Undeclared exception!
      try { 
        plotXAxis0.lowerBoundsAsString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("jahuwaldt.plot.PlotAxis");
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotAxis", linearAxisScale0, choiceFormat0, 1377);
      // Undeclared exception!
      try { 
        plotXAxis0.lowerBoundsAsString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      Rectangle rectangle0 = new Rectangle(2, 2);
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, jTabbedPane0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      BufferedImage bufferedImage0 = new BufferedImage(1, 2, 5);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JPanel jPanel0 = new JPanel();
      JScrollPane jScrollPane0 = new JScrollPane(jPanel0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        plotYAxis0.draw(graphics2D0, jPanel0, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualUpperBounds(true);
      plotYAxis0.setAxisTickLimits();
      assertEquals(Double.NEGATIVE_INFINITY, plotYAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      plotYAxis0.setSize(defaultCaret0);
      plotYAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualQuant = true;
      plotYAxis0.setAxisTickLimits();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setNumberFormat((NumberFormat) null);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      plotYAxis0.setNumberFormat(numberFormat0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setScale((PlotAxisScale) null);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setScale(linearAxisScale0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotXAxis plotXAxis0 = new PlotXAxis("c[5p8(8B;WJ='b)r", linearAxisScale0, (NumberFormat) null, (-2037));
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals((-2037), plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", (PlotAxisScale) null, decimalFormat0, 5);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(5, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setTickStepSize(0.4035);
      assertEquals(0.4035, plotYAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      String string0 = plotXAxis0.lowerBoundsAsString();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals("\u221E", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals((-1.7976931348623157E308), double0, 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      int int0 = plotXAxis0.scaleCoord((-1.0));
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0, int0);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      double double0 = plotYAxis0.getTickStepSize();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setGridStyle(614);
      assertEquals(614, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setLowerBounds(5);
      assertEquals(5.0, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setUpperBounds(1.7976931348623157E308);
      plotYAxis0.setAxisTickLimits();
      assertEquals(Double.POSITIVE_INFINITY, plotYAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotAxisScale plotAxisScale0 = plotYAxis0.getScale();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("'r", plotAxisScale0, numberFormat0, (-913));
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, double0, 0.01);
      assertEquals((-913), plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualLowerBounds(true);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setLabel("Fill in all values first");
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getLabel();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      // Undeclared exception!
      try { 
        plotYAxis0.setSize((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      PlotYAxis plotYAxis0 = new PlotYAxis("_H<RL,d0[6EK[e?MZnX", linearAxisScale0, numberFormat0, (-1101));
      int int0 = plotYAxis0.getGridStyle();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1101), int0);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      String string0 = plotYAxis0.upperBoundsAsString();
      assertEquals("-\u221E", string0);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }
}
