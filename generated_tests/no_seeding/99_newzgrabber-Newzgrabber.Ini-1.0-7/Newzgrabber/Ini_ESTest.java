/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 13:04:45 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Ini;
import Newzgrabber.Newzgrabber;
import java.awt.Dialog;
import java.awt.TextArea;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Ini_ESTest extends Ini_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Newzgrabber.ini");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ";.HneiyC$8}8W{BC");
      Ini.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Title", "AA[fj+u`JAx&P_|");
      Ini ini0 = new Ini(mockFile0, "AA[fj+u`JAx&P_|");
      String[] stringArray0 = new String[2];
      ini0.setProperty(stringArray0[1]);
      String string0 = ini0.getProperty();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ini ini0 = new Ini("", "");
      String string0 = ini0.getProperty();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      Ini ini0 = new Ini(file0, "'aUB");
      ini0.writeIni(linkedList0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/'aUB0'aUB");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "GyQ2%eUXEW=88nN))");
      ini0.getIniVector();
      assertEquals(25L, file0.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile("Title", "Title");
      Ini ini0 = new Ini(file0, "Title");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        ini0.writeIni(linkedList0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ini ini0 = new Ini("6U()eywTVt@", "6U()eywTVt@");
      LinkedList<TextArea> linkedList0 = new LinkedList<TextArea>();
      try { 
        ini0.writeIni(linkedList0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ini ini0 = new Ini((File) null, "T");
      // Undeclared exception!
      try { 
        ini0.readIni();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Ini ini0 = new Ini(file0, "E[G?vfv}xnS");
      try { 
        ini0.readIni();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ini ini0 = new Ini("[[z%]]", "[[z%]]");
      try { 
        ini0.readIni();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ini ini0 = new Ini((File) null, "b<Ks5<l-!^],/=n ");
      // Undeclared exception!
      try { 
        ini0.getIniVector();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ini ini0 = null;
      try {
        ini0 = new Ini((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Newzgrabber.verbose = true;
      Ini ini0 = null;
      try {
        ini0 = new Ini((File) null, "H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Ini", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = MockFile.createTempFile("Title", "Title");
      Ini ini0 = new Ini(file0, "Title");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ini0.writeIni(linkedList0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Title0Title");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-12);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ini0.readIni();
      assertEquals(12L, file0.length());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("[title]", "$:om");
      Ini ini0 = new Ini(mockFile0, "[title]");
      mockFile0.createNewFile();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ini0.writeIni(linkedList0);
      Ini ini1 = new Ini(mockFile0, "3rZ-u/g:l?e");
      ini1.writeIni(linkedList0);
      ini0.readIni();
      assertEquals(24L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = MockFile.createTempFile("Title", "Title");
      Ini ini0 = new Ini(file0, "Title");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.MODELESS;
      linkedList0.add(dialog_ModalityType0);
      // Undeclared exception!
      try { 
        ini0.writeIni(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.awt.Dialog$ModalityType cannot be cast to [Ljava.lang.String;
         //
         verifyException("Newzgrabber.Ini", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Title", "[title]");
      Ini ini0 = new Ini(mockFile0, "[title]");
      mockFile0.createNewFile();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ini0.writeIni(linkedList0);
      Ini ini1 = new Ini(mockFile0, "[title]");
      ini1.setProperty("Title");
      ini1.writeIni(linkedList0);
      ini0.writeIni(linkedList0);
      assertEquals(18L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      Ini ini0 = new Ini(file0, "'aUB");
      ini0.writeIni(linkedList0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/'aUB0'aUB");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "GyQ2%eUXEW=88nN))");
      ini0.writeIni(linkedList0);
      assertEquals(7L, file0.length());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("[[Title]", "`Ku");
      Ini ini0 = new Ini(mockFile0, "[off]");
      mockFile0.createNewFile();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      ini0.writeIni(linkedList1);
      linkedList0.add((Integer) null);
      // Undeclared exception!
      try { 
        ini0.writeIni(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Ini", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      File file0 = MockFile.createTempFile("Title", "Title");
      Ini ini0 = new Ini(file0, "Title");
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ini0.writeIni(linkedList0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Title0Title");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Title");
      ini0.getIniVector();
      assertEquals(14L, file0.length());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      Ini ini0 = new Ini(file0, "'aUB");
      ini0.writeIni(linkedList0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/'aUB0'aUB");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "GyQ2%eUXEW=88nN))");
      Hashtable hashtable0 = ini0.readIni();
      assertEquals(25L, file0.length());
      assertEquals(1, hashtable0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      LinkedList<Dialog.ModalityType> linkedList0 = new LinkedList<Dialog.ModalityType>();
      Ini ini0 = new Ini(file0, "'aUB");
      Ini ini1 = new Ini(file0, "_");
      ini1.writeIni(linkedList0);
      ini0.readIni();
      assertEquals(4L, file0.length());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("[title]", "$:om");
      Ini ini0 = new Ini(mockFile0, "[title]");
      try { 
        ini0.getIniVector();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      File file0 = MockFile.createTempFile("'aUB", "'aUB");
      Ini ini0 = new Ini(file0, "'aUB");
      ini0.readIni();
      Vector vector0 = ini0.getIniVector();
      assertEquals("[]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("VzT$clD*g5]PC4", "VzT$clD*g5]PC4");
      Ini ini0 = new Ini(file0, "VzT$clD*g5]PC4");
      String string0 = ini0.getProperty();
      assertEquals("VzT$clD*g5]PC4", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ini.main((String[]) null);
  }
}
