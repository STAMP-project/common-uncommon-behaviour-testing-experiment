/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 13:09:56 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.Sash;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeFurnitureGroup_ESTest extends HomeFurnitureGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(linkedList0, "?amV");
      homeFurnitureGroup1.setDepth((-255.7F));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      float float0 = (-2797.2F);
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("aGVV", "aGVV", "aGVV", (Content) null, (Content) null, (Content) null, 2313.03F, (-2797.2F), (-255.7F), (-2797.2F), true, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "aGVV", false, false, false, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.setY((-255.7F));
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup0.setModelMirrored(true);
      homeFurnitureGroup0.getPrice();
      homeFurnitureGroup2.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setVisible(true);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.setNameYOffset(1533.0F);
      float float0 = new Integer((-226));
      homeFurnitureGroup1.setWidth(58.335285F);
      homeFurnitureGroup1.setWidth(2.0F);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), (-3290.0F), (-3290.0F), false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setDepth((-1.0F));
      homeFurnitureGroup0.getIcon();
      homeFurnitureGroup0.isDoorOrWindow();
      homeFurnitureGroup0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.setName("?amV");
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup2.getCurrency();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, (-3290.0F));
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup0.setDepth(1.0F);
      homeFurnitureGroup1.containsPoint((-2399.9675F), (-111.6631F), (-255.7F));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-206), (-3290.0F), 0.0F, (-8.28F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-206));
      homeFurnitureGroup0.setModelMirrored(false);
      homeFurnitureGroup1.setElevation(8.28F);
      homeFurnitureGroup1.setWidth((-3290.0F));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      float[] floatArray2 = new float[3];
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setModelMirrored(true);
      Integer integer1 = new Integer((-226));
      Level level0 = new Level("", (-1.0F), 0.0F, 0.0F);
      Level level1 = level0.clone();
      homeFurnitureGroup0.setLevel(level1);
      homeFurnitureGroup0.setX((-3290.0F));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.clone();
      homeFurnitureGroup0.setColor(integer0);
      homeFurnitureGroup0.setAngle((-3297.2F));
      homeFurnitureGroup0.isDeformable();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), (-3290.0F), (-3290.0F), true, 30, 30, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "u*l");
      homeFurnitureGroup0.setModelMirrored(true);
      homeFurnitureGroup0.setColor(integer0);
      homeFurnitureGroup0.clone();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.isTopLeftPointAt((-2.4978414F), (-2.4978414F), (-226));
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.setDepth(0.0F);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'FWa<ZsZa@QUGe", propertyChangeListener0);
      homeDoorOrWindow0.removePropertyChangeListener(propertyChangeListenerProxy0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Integer integer1 = new Integer(4);
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup1.setWidth((-255.7F));
      homeFurnitureGroup1.setColor(integer0);
      homeFurnitureGroup1.isDoorOrWindow();
      homeFurnitureGroup0.setX(4);
      homeFurnitureGroup2.setHeight(1533.0F);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash(2061.4817F, (-3290.0F), 1533.0F, 2061.4817F, 2061.4817F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2061.4817F, 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = (float) (-226);
      float[] floatArray2 = new float[3];
      floatArray1[3] = 0.0F;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 2061.4817F, 2061.4817F, 2061.4817F, 2061.4817F, false, (-2797.2F), 2061.4817F, sashArray0, integer0, floatArray0, false, 738.7051F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setMovable(false);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.setWidth(0.0F);
      Integer integer1 = new Integer((-226));
      homeFurnitureGroup0.setColor(integer1);
      homeFurnitureGroup1.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), (-3290.0F), (-3290.0F), false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      Random.setNextRandom(30);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-1646.2714F), 1793.98F, (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, 0.0F, 0.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1793.98F, 2313.03F, 1533.0F, 1533.0F, 803.1054F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(0.0F, 0.0F, (-2797.2F), (-2102.556F), 0.0F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash((-1412.0F), (-3290.0F), 0.0F, (-255.7F), 106.7562F);
      sashArray0[4] = sash4;
      Integer integer0 = new Integer((-226));
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 803.1054F;
      floatArray1[1] = (-1412.0F);
      floatArray1[2] = 2313.03F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[5];
      floatArray2[0] = (-2797.2F);
      floatArray2[1] = (-3290.0F);
      floatArray2[2] = (-1.0F);
      floatArray2[3] = 803.1054F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[3];
      floatArray3[0] = (-2797.2F);
      floatArray3[1] = 0.0F;
      floatArray3[2] = 106.7562F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[2];
      floatArray4[0] = (-1412.0F);
      floatArray4[1] = 1793.98F;
      floatArray0[3] = floatArray4;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), 0.0F, 0.0F, false, (-2797.2F), 1793.98F, sashArray0, integer0, floatArray0, false, 728.5133F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "A|$3RA=]AGJY-|");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup0.setColor((Integer) null);
      homeFurnitureGroup1.isDoorOrWindow();
      homeFurnitureGroup1.getDepth();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(39, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getValueAddedTaxPercentage();
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(39, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      
      homeFurnitureGroup0.setWidth((-3290.0F));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      Sash[] sashArray1 = new Sash[2];
      sashArray1[0] = sash0;
      BigDecimal bigDecimal0 = new BigDecimal(1533.0F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", "mV", "mV", (Content) null, (Content) null, (Content) null, 2313.03F, (-1412.0F), (-255.7F), 0.0F, true, 3249.0F, (-255.7F), sashArray1, (float[][]) null, "mV", true, true, true, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow2 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow2);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.getHeight();
      homeFurnitureGroup0.setDepth((-2797.2F));
      homeFurnitureGroup1.getTexture();
      homeFurnitureGroup0.setTexture((HomeTexture) null);
      homeFurnitureGroup0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      
      sashArray0[3] = sash0;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3304.2786F), 1533.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-3304.2786F), sash2.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup1.isDoorOrWindow();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
      
      homeFurnitureGroup1.setAngle((-3297.175F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1.4972374F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setDepth((-3304.2786F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-3304.2786F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1.4972374F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setWidth((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-3304.2786F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1.4972374F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      String string0 = homeFurnitureGroup0.getCurrency();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(string0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean2 = homeFurnitureGroup0.isBackFaceShown();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertFalse(boolean2);
      
      float float0 = homeFurnitureGroup1.getWidth();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-3304.2786F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1.4972374F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals((-255.7F), float0, 0.01F);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup1.getValueAddedTaxPercentage();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-3304.2786F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1.4972374F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1533.0F, 0.0F, 4, true, true);
      catalogDoorOrWindow0.compareTo(catalogPieceOfFurniture0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      Level level0 = new Level("", 2.0F, 4, (-226));
      level0.clone();
      homeFurnitureGroup0.setLevel(level0);
      homeFurnitureGroup0.getIcon();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      Level level0 = new Level("", 0.0F, (-226), (-226));
      Level level1 = level0.clone();
      homeDoorOrWindow0.setLevel(level1);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setX(0.0F);
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getPoints();
      homeFurnitureGroup1.setWidth((-3297.2F));
      homeFurnitureGroup1.getModel();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "", "", (Content) null, (Content) null, (Content) null, (-1129.7542F), (-1129.7542F), (-255.7F), (-1129.7542F), true, (-255.7F), 0.0F, sashArray0, (float[][]) null, "?amV", true, false, false, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      Integer integer0 = new Integer((-222));
      // Undeclared exception!
      try { 
        homeFurnitureGroup0.setColor(integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setVisible(true);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup2.setDepth(347.73135F);
      homeFurnitureGroup2.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-68);
      byteArray0[3] = (byte) (-127);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.clone();
      homeFurnitureGroup0.getPoints();
      homeFurnitureGroup0.clone();
      homeFurnitureGroup0.setColor(integer0);
      homeFurnitureGroup0.setAngle((-3297.2F));
      homeFurnitureGroup0.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("=", "=", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (Content) null, 0.0F, (-226), (-100.0F), (-3297.2F), false, (-226), (-226), sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, false, false, bigDecimal0, bigDecimal0, "");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.setY((-1344.76F));
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "=");
      homeFurnitureGroup0.isDeformable();
      homeFurnitureGroup0.setWidth((-226));
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(linkedList0, "=");
      homeFurnitureGroup1.getModelRotation();
      homeFurnitureGroup0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup1.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-255.7F), (-255.7F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-255.7F), 1533.0F, (-255.7F), (-255.7F));
      Sash sash2 = new Sash((-255.7F), 2313.2397F, 1533.0F, 1533.0F, (-255.7F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-206), (-3297.175F), 1533.0F, (-8.28F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3297.175F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.setModelMirrored(true);
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup0.setModelMirrored(false);
      homeFurnitureGroup1.setElevation((float) integer1);
      homeFurnitureGroup0.setModelMirrored(false);
      homeFurnitureGroup2.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.setColor((Integer) null);
      homeFurnitureGroup1.getPrice();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, (-3290.0F));
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.clone();
      float float0 = new Float((-2797.2F));
      homeFurnitureGroup0.setAngle((-8.28F));
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup(linkedList0, (String) null);
      homeFurnitureGroup2.setAngle((-3290.0F));
      homeFurnitureGroup1.getModel();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), 0.0F, 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      Integer.sum((-221), (-221));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setVisible(true);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setWidth(58.335285F);
      homeFurnitureGroup0.setColor(integer0);
      homeFurnitureGroup1.setAngle(347.73135F);
      homeFurnitureGroup0.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), true, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup2.getTexture();
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      homeFurnitureGroup2.getModelRotation();
      homeFurnitureGroup1.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), true, 39, 39, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.containsPoint(39, (-3290.0F), 39);
      homeFurnitureGroup0.setDepth((-3290.0F));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      sashArray0[3] = sash1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, (-3290.0F));
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup0.setVisible(true);
      homeFurnitureGroup0.setDepth(1.0F);
      homeFurnitureGroup0.setY((-226));
      homeFurnitureGroup1.setWidth(1.0F);
      homeFurnitureGroup0.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3290.0F), (-3290.0F));
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Float float0 = new Float((double) 0.0F);
      homeFurnitureGroup1.setShininess(float0);
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      linkedList1.add((HomePieceOfFurniture) homeFurnitureGroup1);
      HomeFurnitureGroup homeFurnitureGroup3 = new HomeFurnitureGroup(linkedList1, "");
      homeFurnitureGroup0.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup2.getTexture();
      homeFurnitureGroup1.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-255.7F), (-255.7F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), 0.0F, (-255.7F), 0.0F, 0.0F);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, 2453.952F, 0.0F, (-1412.0F), 0.0F, false, (-8.28F), (-179.26F), sashArray0, integer1, (float[][]) null, false, 0.0F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup2.setDepth(0);
      homeFurnitureGroup0.setModelMirrored(true);
      homeFurnitureGroup1.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      catalogDoorOrWindow0.getCategory();
      catalogDoorOrWindow0.setCategory((FurnitureCategory) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup2.setWidth((-255.7F));
      homeFurnitureGroup1.getCurrency();
      homeFurnitureGroup2.intersectsRectangle(347.73135F, (-1412.0F), (-597.2465F), 3409.413F);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      homeDoorOrWindow0.setVisible(true);
      assertEquals(5, sashArray0.length);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(58.335285F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup2.setMovable(true);
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.getWidth();
      homeFurnitureGroup1.getHeight();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      homeFurnitureGroup0.setNameXOffset((-255.7F));
      homeFurnitureGroup0.setDepth((-255.7F));
      homeFurnitureGroup0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), true, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      Level level0 = new Level("", 0.0F, (-226), (-226));
      Level level1 = level0.clone();
      homeDoorOrWindow0.setLevel(level1);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getPoints();
      homeFurnitureGroup1.setWidth((-3297.2F));
      homeFurnitureGroup1.getModel();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Integer integer1 = new Integer((-2693));
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-1822.46F), (-1822.46F), (-1822.46F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-1822.46F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("uD", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "uD");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup1.setColor(integer0);
      homeFurnitureGroup1.isDoorOrWindow();
      homeFurnitureGroup0.isResizable();
      homeFurnitureGroup0.clone();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup((List<HomePieceOfFurniture>) null, "JG\"K[NfLMy@F{v8)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeFurnitureGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      float[] floatArray2 = new float[3];
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setModelMirrored(true);
      Integer integer1 = new Integer((-226));
      Level level0 = new Level("", (-1.0F), 0.0F, 0.0F);
      Level level1 = level0.clone();
      homeFurnitureGroup0.setLevel(level1);
      homeFurnitureGroup0.isMovable();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup2.getTexture();
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      homeFurnitureGroup2.setY((-6.8589816F));
      homeFurnitureGroup2.setY(136.2F);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(boolean1);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertEquals(2, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(3290.0F, float0, 0.01F);
      
      homeFurnitureGroup0.getModelRotation();
      homeFurnitureGroup0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      Integer integer0 = new Integer(4);
      Sash[] sashArray0 = new Sash[2];
      sashArray0[0] = sash0;
      BigDecimal bigDecimal0 = new BigDecimal(1533.0F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", "mV", "mV", (Content) null, (Content) null, (Content) null, 2313.03F, (-1412.0F), (-255.7F), 0.0F, true, 3249.0F, (-255.7F), sashArray0, (float[][]) null, "mV", true, true, true, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.getHeight();
      homeFurnitureGroup1.getTexture();
      homeFurnitureGroup0.getModelRotation();
      homeFurnitureGroup1.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-206), (-3297.175F), 1533.0F, (-1412.0F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3297.175F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup0.setDepth(4);
      homeFurnitureGroup2.setModelMirrored(false);
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup0.getDepth();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setMovable(false);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.setWidth(2313.03F);
      Integer integer1 = new Integer((-226));
      homeFurnitureGroup0.setColor(integer1);
      homeFurnitureGroup1.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup1.isTopRightPointAt(2610.6F, (-255.7F), (-3290.0F));
      homeFurnitureGroup1.setColor(integer0);
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup1.getModel();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-1412.0F), (-3290.0F), (-3290.0F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.setNameAngle(0.3926991F);
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup0.setDepth((-3297.2F));
      homeFurnitureGroup0.setModelMirrored(true);
      homeFurnitureGroup1.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-255.7F), (-255.7F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      Sash sash2 = new Sash((-255.7F), 2313.2397F, 1533.0F, 1533.0F, (-255.7F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u|s?Amtv6gEBJu");
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-206), (-3290.0F), 1533.0F, (-8.28F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeDoorOrWindow0.clone();
      linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup1);
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup0.clone();
      homeFurnitureGroup3.getHeight();
      homeFurnitureGroup0.getTexture();
      homeFurnitureGroup3.getModelRotation();
      homeFurnitureGroup0.setWidth((-927.7455F));
      homeFurnitureGroup0.getDepth();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-2797.2F), (-261.68008F), (-2797.2F), (-2797.2F), (-261.68008F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-2797.2F), (-3290.0F), 1533.0F, (-261.68008F), (-261.68008F));
      Integer integer0 = new Integer(2144729015);
      Integer integer1 = new Integer((-701));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("kcu2(a", (Content) null, (Content) null, 546.66077F, 921.8243F, 1156.515F, 546.66077F, false, 2783.0F, 2783.0F, sashArray0, integer1, (float[][]) null, false, (-8.28F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup2.clone();
      homeFurnitureGroup3.getHeight();
      homeFurnitureGroup3.setDepth((-8.28F));
      homeFurnitureGroup2.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      Sash sash2 = new Sash((-255.7F), (-3297.175F), 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup2.getTexture();
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      homeFurnitureGroup1.intersectsRectangle((-1412.0F), 0.0F, 0.3926991F, 119.51413F);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), (-41.887436F), 5.7256055F, false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      Level level0 = new Level("", (-3297.2F), (-226), (-226));
      Level level1 = level0.clone();
      homeDoorOrWindow0.setLevel(level1);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup1);
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup(linkedList0, "applicationSubFolder.Mac OS X");
      Integer integer1 = new Integer(1);
      homeFurnitureGroup1.setWidth(1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[0];
      Integer integer0 = new Integer(30);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), 0.0F, 0.0F, false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setColor(integer0);
      homeFurnitureGroup0.getValueAddedTaxPercentage();
      homeFurnitureGroup0.getPriceValueAddedTaxIncluded();
      Integer integer1 = new Integer((-1));
      homeFurnitureGroup0.setColor(integer1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      assertNotNull(list0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      Sash[] sashArray1 = new Sash[2];
      assertFalse(sashArray1.equals((Object)sashArray0));
      
      sashArray1[0] = sash0;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", "mV", "mV", (Content) null, (Content) null, (Content) null, 2313.03F, (-1412.0F), (-255.7F), 0.0F, true, 3249.0F, (-255.7F), sashArray1, (float[][]) null, "mV", true, true, false, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertEquals(2, sashArray1.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertEquals(2, sashArray1.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray1.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("mV", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals("mV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(3249.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-706.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow1.getName());
      assertNotSame(sashArray1, sashArray0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray1.length);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("mV", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals("mV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(3249.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-706.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow1.getName());
      assertNotSame(sashArray1, sashArray0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertFalse(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertEquals(0.0F, float0, 0.01F);
      
      homeFurnitureGroup0.setDepth((-2797.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertFalse(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float[][] floatArray0 = homeFurnitureGroup0.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(2313.03F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(2313.03F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup0.setColor(integer1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setColor(integer1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup1.isDoorOrWindow();
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
      
      HomeTexture homeTexture0 = homeFurnitureGroup0.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setMovable(false);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(2313.03F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2313.03F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup0.setColor(integer1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3290.0F), (-3290.0F));
      assertNotNull(sash0);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      Integer integer1 = new Integer((-3918));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-3918), (int)integer1);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.48524F), (-226), (-226), (-226), true, (-1.0F), (-3918), sashArray0, integer1, (float[][]) null, false, (-3297.175F), false);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.48524F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3918.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.48524F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3918.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3918.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-127.74262F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.48524F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      Level level0 = new Level("com.eteks.sweethome3d.tools.OperatingSystem$1", (-2463.1055F), (-226), 0.5F);
      assertNotNull(level0);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.5F, level0.getHeight(), 0.01F);
      assertEquals((-2463.1055F), level0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level0.getName());
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.5F, level0.getHeight(), 0.01F);
      assertEquals((-2463.1055F), level0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level0.getName());
      assertEquals((-2463.1055F), level1.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals(0.5F, level1.getHeight(), 0.01F);
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level1.getName());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      level1.setElevation((-3290.0F));
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.5F, level0.getHeight(), 0.01F);
      assertEquals((-2463.1055F), level0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level0.getName());
      assertTrue(level1.isVisible());
      assertEquals(0.5F, level1.getHeight(), 0.01F);
      assertEquals((-3290.0F), level1.getElevation(), 0.01F);
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level1.getName());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeDoorOrWindow0.setLevel(level1);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(5, sashArray0.length);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.48524F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3918.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3516.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3918.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-127.74262F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.48524F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.5F, level0.getHeight(), 0.01F);
      assertEquals((-2463.1055F), level0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level0.getName());
      assertTrue(level1.isVisible());
      assertEquals(0.5F, level1.getHeight(), 0.01F);
      assertEquals((-3290.0F), level1.getElevation(), 0.01F);
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", level1.getName());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.48524F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3918.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3516.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3918.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-127.74262F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.48524F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(226.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-226.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float[][] floatArray0 = homeFurnitureGroup1.getPoints();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(4, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(226.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-226.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer2 = new Integer(4);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals(4, (int)integer2);
      
      homeFurnitureGroup1.setWidth(3.4028235E38F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(226.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(3.4028235E38F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-226.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Content content0 = homeFurnitureGroup0.getModel();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setModelMirrored(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(226.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-226.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertEquals(226.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(3.4028235E38F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-226.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(boolean1);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3290.0F, float0, 0.01F);
      
      boolean boolean2 = homeFurnitureGroup0.isBackFaceShown();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(2313.03F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(2313.03F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup0.setColor(integer1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNotNull(list0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[0];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), 3648.897F, 3648.897F, false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      
      int int0 = Integer.compare(30, 30);
      assertEquals(0, int0);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3648.897F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(3648.897F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3648.897F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(3648.897F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Z:ds&FgYnV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      homeFurnitureGroup0.setNameXOffset(3.4028235E38F);
      assertEquals(1, linkedList0.size());
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(3648.897F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(3648.897F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("Z:ds&FgYnV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(3648.897F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setNameVisible(false);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      boolean boolean1 = homeFurnitureGroup1.isDoorOrWindow();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
      
      float float1 = homeFurnitureGroup1.getWidth();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(0.0F, float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setHeight(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(0.0F, float0, 0.01F);
      
      String string0 = homeFurnitureGroup2.getStaircaseCutOutShape();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(string0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-2797.2F), (-2797.2F), (-2797.2F), 347.73135F, 1533.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(347.73135F, sash2.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(17);
      assertNotNull(integer0);
      assertEquals(17, (int)integer0);
      
      int int0 = Integer.sum((-221), (-221));
      assertEquals((-442), int0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), (-255.7F), (-8.28F), true, 17, 17, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      homeDoorOrWindow0.setVisible(true);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(58.335285F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setColor(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(17, (int)homeFurnitureGroup0.getColor());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setAngle((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(17, (int)homeFurnitureGroup0.getColor());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(1.9106007F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash sash0 = new Sash(0.0F, 0.0F, (-1412.0F), 559.1522F, 0.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals(559.1522F, sash0.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(996);
      assertNotNull(integer0);
      assertEquals(996, (int)integer0);
      
      LinkedList linkedList1 = (LinkedList)linkedList0.clone();
      assertNotNull(linkedList1);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      
      Sash[] sashArray0 = new Sash[5];
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 2894.7F, 0.0F, (-3290.0F), 996, false, (-3477.5042F), 559.1522F, sashArray0, integer0, (float[][]) null, false, 996, false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3477.5042F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2894.7F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(996.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(559.1522F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(996.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(996, (int)catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3477.5042F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2894.7F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(996.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(559.1522F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(996.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(996, (int)catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3477.5042F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(1447.35F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(559.1522F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2894.7F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(996, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(996.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(996.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3477.5042F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2894.7F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(996.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(559.1522F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(996.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(996, (int)catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3477.5042F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(1447.35F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(559.1522F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2894.7F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(996, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(996.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(996.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "MOVABLE");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(1447.35F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(2894.7F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals("MOVABLE", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(996.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertEquals((-996.0F), float0, 0.01F);
      
      Integer integer1 = new Integer(3);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(3, (int)integer1);
      
      HomeFurnitureGroup homeFurnitureGroup3 = (HomeFurnitureGroup)homeFurnitureGroup2.clone();
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(2894.7F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup3.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals("MOVABLE", homeFurnitureGroup3.getName());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(1447.35F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(2894.7F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals("MOVABLE", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(996.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup3);
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(2894.7F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup3.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals("MOVABLE", homeFurnitureGroup3.getName());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(1447.35F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(2894.7F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals("MOVABLE", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(996.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertTrue(boolean1);
      
      float[][] floatArray0 = homeFurnitureGroup1.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      boolean boolean2 = homeFurnitureGroup1.isTexturable();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(996.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(1447.35F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-996.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2894.7F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(996.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertTrue(boolean2);
      
      homeFurnitureGroup0.setElevation((-3477.5042F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertEquals(2, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2894.7F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-996.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1447.35F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("MOVABLE", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-3477.5042F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-3477.5042F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), (-41.887436F), 5.7256055F, false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(boolean0);
      
      Level level0 = new Level("", (-3297.2F), (-226), (-226));
      assertNotNull(level0);
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      assertTrue(level1.isVisible());
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeDoorOrWindow0.setLevel(level1);
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(5, sashArray0.length);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3291.4744F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      assertTrue(level1.isVisible());
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertTrue(boolean1);
      
      float float0 = homeFurnitureGroup0.getDepth();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertEquals(0.0F, float0, 0.01F);
      
      boolean boolean2 = homeFurnitureGroup1.containsPoint((-1.0F), 4, 0.0F);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), 3.4028235E38F, 1773.44F, 1523.398F, true, 1773.44F, (-255.7F), sashArray0, (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(0, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(1523.398F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(0, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(1523.398F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1773.44F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(1523.398F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1523.398F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(0, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(1523.398F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(1773.44F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertEquals(1.7014117E38F, homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertEquals(1523.398F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(1523.398F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow2 = new HomeDoorOrWindow(homeDoorOrWindow1);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertEquals(0, sashArray0.length);
      assertNotNull(homeDoorOrWindow2);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(1523.398F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(1773.44F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertEquals(1.7014117E38F, homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertEquals(1523.398F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(1523.398F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getColor());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertFalse(homeDoorOrWindow2.isBackFaceShown());
      assertEquals(3.4028235E38F, homeDoorOrWindow2.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow2.getCatalogId());
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(1523.398F, homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow2.getName());
      assertEquals(1523.398F, homeDoorOrWindow2.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow2.isMovable());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertEquals(1.7014117E38F, homeDoorOrWindow2.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow2.getDescription());
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isResizable());
      assertEquals((-127.85F), homeDoorOrWindow2.getX(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow2.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow2.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow2.getWidth(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow2));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(0, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(1523.398F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1773.44F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(1773.44F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertEquals(1.7014117E38F, homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertEquals(1523.398F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(1523.398F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(1773.44F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "1&/<v.lbDZr$['9%A");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(1523.398F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("1&/<v.lbDZr$['9%A", homeFurnitureGroup0.getName());
      assertEquals(1523.398F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1773.44F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(1523.398F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("1&/<v.lbDZr$['9%A", homeFurnitureGroup0.getName());
      assertEquals(1523.398F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1773.44F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      
      BigDecimal bigDecimal1 = homeFurnitureGroup0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(1523.398F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("1&/<v.lbDZr$['9%A", homeFurnitureGroup0.getName());
      assertEquals(1523.398F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1773.44F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((short)100, bigDecimal1.shortValue());
      assertEquals((byte)100, bigDecimal1.byteValue());
      assertNotSame(bigDecimal1, bigDecimal0);
      
      boolean boolean1 = homeFurnitureGroup0.isTexturable();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(1523.398F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("1&/<v.lbDZr$['9%A", homeFurnitureGroup0.getName());
      assertEquals(1523.398F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1773.44F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      Float float0 = new Float((double) 2.0F);
      assertNotNull(float0);
      assertEquals(2.0F, (float)float0, 0.01F);
      
      LightSource lightSource0 = new LightSource((-255.7F), 3039.5674F, 3039.5674F, 4, float0);
      assertNotNull(lightSource0);
      assertEquals((-255.7F), lightSource0.getX(), 0.01F);
      assertEquals(3039.5674F, lightSource0.getY(), 0.01F);
      assertEquals(4, lightSource0.getColor());
      assertEquals(2.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(3039.5674F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(4, (-1929.9222F), 4, 1);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(1, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals(4.0F, lightSource1.getX(), 0.01F);
      assertEquals(4.0F, lightSource1.getZ(), 0.01F);
      assertEquals((-1929.9222F), lightSource1.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(3123.921F, (-694.1677F), (-1054.2891F), (-1659), float0);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-694.1677F), lightSource2.getY(), 0.01F);
      assertEquals((-1054.2891F), lightSource2.getZ(), 0.01F);
      assertEquals((-1659), lightSource2.getColor());
      assertEquals(3123.921F, lightSource2.getX(), 0.01F);
      assertEquals(2.0F, lightSource2.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(1, 4, 3.4028235E38F, 1);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(1.0F, lightSource3.getX(), 0.01F);
      assertEquals(4.0F, lightSource3.getY(), 0.01F);
      assertEquals(1, lightSource3.getColor());
      assertEquals(3.4028235E38F, lightSource3.getZ(), 0.01F);
      assertNull(lightSource3.getDiameter());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(0.0F, (-3162.5F), (-661.0F), 1333, float0);
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertNotNull(lightSource4);
      assertEquals(0.0F, lightSource4.getX(), 0.01F);
      assertEquals(1333, lightSource4.getColor());
      assertEquals((-3162.5F), lightSource4.getY(), 0.01F);
      assertEquals(2.0F, lightSource4.getDiameter(), 0.01F);
      assertEquals((-661.0F), lightSource4.getZ(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1659), (-1054.2891F), 3.4028235E38F, (-99));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals((-1054.2891F), lightSource5.getY(), 0.01F);
      assertEquals(3.4028235E38F, lightSource5.getZ(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals((-99), lightSource5.getColor());
      assertEquals((-1659.0F), lightSource5.getX(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      Float float1 = new Float((-1.0F));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals((-1.0F), (float)float1, 0.01F);
      
      LightSource lightSource6 = new LightSource((-2439.6824F), (-694.1677F), 3123.921F, 1333, float1);
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(lightSource6);
      assertEquals((-1.0F), lightSource6.getDiameter(), 0.01F);
      assertEquals((-694.1677F), lightSource6.getY(), 0.01F);
      assertEquals(1333, lightSource6.getColor());
      assertEquals((-2439.6824F), lightSource6.getX(), 0.01F);
      assertEquals(3123.921F, lightSource6.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      Float float2 = new Float((-453.8207777));
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertNotNull(float2);
      assertEquals((-453.82077F), (float)float2, 0.01F);
      
      LightSource lightSource7 = new LightSource(2.0F, (-1.0F), (-1568.3201F), 1, float2);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertNotNull(lightSource7);
      assertEquals((-1.0F), lightSource7.getY(), 0.01F);
      assertEquals(1, lightSource7.getColor());
      assertEquals((-453.82077F), lightSource7.getDiameter(), 0.01F);
      assertEquals(2.0F, lightSource7.getX(), 0.01F);
      assertEquals((-1568.3201F), lightSource7.getZ(), 0.01F);
      
      lightSourceArray0[7] = lightSource7;
      BigDecimal bigDecimal0 = new BigDecimal((-694.1677F));
      assertNotNull(bigDecimal0);
      assertEquals((byte)74, bigDecimal0.byteValue());
      assertEquals((short) (-694), bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight("?amV", "WIDTH", "WIDTH", (Content) null, (Content) null, (Content) null, 2.0F, 3039.5674F, 3039.5674F, 2.0F, false, lightSourceArray0, "?amV", (float[][]) null, "?amV", false, false, true, bigDecimal0, bigDecimal0, "");
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)74, bigDecimal0.byteValue());
      assertEquals((short) (-694), bigDecimal0.shortValue());
      assertEquals(3039.5674F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("WIDTH", catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(3039.5674F, catalogLight0.getHeight(), 0.01F);
      assertEquals("?amV", catalogLight0.getCreator());
      assertEquals("?amV", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isMovable());
      assertEquals(2.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(2.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("?amV", catalogLight0.getId());
      assertEquals("WIDTH", catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDeformable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((byte)74, bigDecimal0.byteValue());
      assertEquals((short) (-694), bigDecimal0.shortValue());
      assertEquals(3039.5674F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("WIDTH", catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(3039.5674F, catalogLight0.getHeight(), 0.01F);
      assertEquals("?amV", catalogLight0.getCreator());
      assertEquals("?amV", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isMovable());
      assertEquals(2.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(2.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("?amV", catalogLight0.getId());
      assertEquals("WIDTH", catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(2.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(3039.5674F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("WIDTH", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("WIDTH", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(2.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(2.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("?amV", homeLight0.getStaircaseCutOutShape());
      assertEquals("?amV", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(1519.7837F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(3039.5674F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      HomeLight homeLight1 = (HomeLight)homeLight0.clone();
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight1);
      assertEquals((byte)74, bigDecimal0.byteValue());
      assertEquals((short) (-694), bigDecimal0.shortValue());
      assertEquals(3039.5674F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("WIDTH", catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(3039.5674F, catalogLight0.getHeight(), 0.01F);
      assertEquals("?amV", catalogLight0.getCreator());
      assertEquals("?amV", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isMovable());
      assertEquals(2.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(2.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("?amV", catalogLight0.getId());
      assertEquals("WIDTH", catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(2.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(3039.5674F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("WIDTH", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("WIDTH", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(2.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(2.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("?amV", homeLight0.getStaircaseCutOutShape());
      assertEquals("?amV", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(1519.7837F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(3039.5674F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(1.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertEquals(2.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isVisible());
      assertEquals("?amV", homeLight1.getStaircaseCutOutShape());
      assertEquals(2.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertEquals("WIDTH", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isDeformable());
      assertEquals(1519.7837F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(3039.5674F, homeLight1.getDepth(), 0.01F);
      assertEquals("WIDTH", homeLight1.getName());
      assertEquals(2.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("?amV", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(3039.5674F, homeLight1.getHeight(), 0.01F);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(8, lightSourceArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)74, bigDecimal0.byteValue());
      assertEquals((short) (-694), bigDecimal0.shortValue());
      assertEquals(3039.5674F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("WIDTH", catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(3039.5674F, catalogLight0.getHeight(), 0.01F);
      assertEquals("?amV", catalogLight0.getCreator());
      assertEquals("?amV", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isMovable());
      assertEquals(2.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(2.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("?amV", catalogLight0.getId());
      assertEquals("WIDTH", catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(2.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(3039.5674F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("WIDTH", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("WIDTH", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(2.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(2.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("?amV", homeLight0.getStaircaseCutOutShape());
      assertEquals("?amV", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(1519.7837F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(3039.5674F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(1.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertEquals(2.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isVisible());
      assertEquals("?amV", homeLight1.getStaircaseCutOutShape());
      assertEquals(2.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertEquals("WIDTH", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isDeformable());
      assertEquals(1519.7837F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(3039.5674F, homeLight1.getDepth(), 0.01F);
      assertEquals("WIDTH", homeLight1.getName());
      assertEquals(2.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("?amV", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(3039.5674F, homeLight1.getHeight(), 0.01F);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean0);
      
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal1 = new BigDecimal((-255.7F));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal1, bigDecimal1, "?amV");
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertTrue(boolean1 == boolean0);
      assertEquals(2, sashArray0.length);
      assertEquals(2, linkedList0.size());
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean1);
      
      boolean boolean2 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray0.length);
      assertEquals(3, linkedList0.size());
      assertEquals((short) (-255), bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertTrue(boolean2);
      
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 0.0F, 0.0F, (-3290.0F), (-3290.0F), false, 1006.131F, (-2273.925F), sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1006.131F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-2273.925F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1006.131F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-2273.925F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1006.131F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2273.925F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1006.131F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-2273.925F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1006.131F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2273.925F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(homeFurnitureGroup0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(linkedList0.contains(homePieceOfFurniture0));
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals((-3290.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(3290.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      boolean boolean1 = linkedList0.add(homePieceOfFurniture0);
      assertTrue(boolean1 == boolean0);
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertEquals(2, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals((-3290.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(3290.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(boolean1);
      
      homeFurnitureGroup0.setDepth((-2273.925F));
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertEquals(2, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2273.925F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-215));
      assertNotNull(integer0);
      assertEquals((-215), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-215), (-3297.2F), 0.0F, (-215), false, (-215), (-215), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-215), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-215.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-215), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-215.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-215.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-215.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-215), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-215.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-107.5F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-215.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-215.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-215), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-215.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-215.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-215.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-215.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-215), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-215.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-107.5F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-215.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-215.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(215.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-215.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(215.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-215.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(215.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setY(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(215.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-215.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      Integer integer1 = new Integer((-215));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-215), (int)integer1);
      
      homeFurnitureGroup0.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-215), (int)homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(215.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-215.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-215.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[7];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-1412.0F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3297.2F), true);
      assertEquals(7, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(7, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("Application Data", (Content) null, (Content) null, (-3297.2F), (-226), 1.0F, 58.335285F, false, 906.0F, 0.0F, sashArray0, integer0, (float[][]) null, true, 1.0F, true);
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertEquals(7, sashArray0.length);
      assertNotNull(catalogDoorOrWindow1);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertTrue(catalogDoorOrWindow1.isDeformable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getDescription());
      assertNull(catalogDoorOrWindow1.getId());
      assertEquals(0.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(58.335285F, catalogDoorOrWindow1.getElevation(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow1.getColor());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertTrue(catalogDoorOrWindow1.isTexturable());
      assertEquals(1.0F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals(906.0F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals("Application Data", catalogDoorOrWindow1.getName());
      assertNull(catalogDoorOrWindow1.getCreator());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.equals((Object)catalogDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(7, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getName());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow1.getY(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-3297.2F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.equals((Object)catalogDoorOrWindow1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(7, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNotSame(catalogDoorOrWindow0, catalogDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Application Data");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals("Application Data", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals("Application Data", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup1.setModelMirrored(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals("Application Data", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup2.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals("Application Data", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals("Application Data", homeFurnitureGroup3.getName());
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      
      homeFurnitureGroup3.setElevation((-8.28F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals("Application Data", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals("Application Data", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals("Application Data", homeFurnitureGroup3.getName());
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(boolean1);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertEquals(2, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(3290.0F, float0, 0.01F);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getValueAddedTax();
      assertNull(bigDecimal0);
      assertEquals(2, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup3.isMovable());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      
      float[][] floatArray0 = homeFurnitureGroup2.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup1.isBackFaceShown();
      assertFalse(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(2.4978414F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertEquals(2.4978414F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3290.0F), 1533.0F, (-2797.2F), (-2067.2246F), (-3290.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = (-3290.0F);
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow1.getColor());
      assertNull(homeDoorOrWindow1.getDescription());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweeAhome3d.model%HomeFurnitureGroup");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      HomeTexture homeTexture0 = homeFurnitureGroup1.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      String string0 = homeFurnitureGroup0.getCatalogId();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(string0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("com.eteks.sweeAhome3d.model%HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setWidth(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setColor(integer0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(4, (int)homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setAngle(347.73135F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.1561618F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(4, (int)homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getPriceValueAddedTaxIncluded();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.1561618F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(4, (int)homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      Content content0 = homeFurnitureGroup0.getModel();
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(boolean1 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setWidth((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setX(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      boolean boolean2 = homeFurnitureGroup0.isAtLevel((Level) null);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-1646.2714F), 1793.98F, (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals(1793.98F, sash0.getStartAngle(), 0.01F);
      assertEquals((-1646.2714F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, 2700.6658F, 2700.6658F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(2700.6658F, sash1.getStartAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(2700.6658F, sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1793.98F, 2313.03F, 1533.0F, 1533.0F, 803.1054F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1793.98F, sash2.getXAxis(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(803.1054F, sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(0.0F, 0.0F, (-2797.2F), (-2102.556F), 0.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(0.0F, sash3.getXAxis(), 0.01F);
      assertEquals((-2102.556F), sash3.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash3.getWidth(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      
      sashArray0[3] = sash3;
      Sash sash4 = new Sash((-1412.0F), (-3290.0F), 0.0F, (-1.0F), 106.7562F);
      assertFalse(sash4.equals((Object)sash3));
      assertFalse(sash4.equals((Object)sash2));
      assertFalse(sash4.equals((Object)sash0));
      assertFalse(sash4.equals((Object)sash1));
      assertNotNull(sash4);
      assertEquals((-1.0F), sash4.getStartAngle(), 0.01F);
      assertEquals((-3290.0F), sash4.getYAxis(), 0.01F);
      assertEquals(0.0F, sash4.getWidth(), 0.01F);
      assertEquals(106.7562F, sash4.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash4.getXAxis(), 0.01F);
      
      sashArray0[4] = sash4;
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 803.1054F;
      floatArray1[1] = (-1412.0F);
      floatArray1[2] = 2313.03F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[5];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[0] = (-2797.2F);
      floatArray2[1] = (-3290.0F);
      floatArray2[2] = (-1.0F);
      floatArray2[3] = 803.1054F;
      floatArray2[4] = (-3290.0F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[3];
      assertFalse(floatArray3.equals((Object)floatArray2));
      assertFalse(floatArray3.equals((Object)floatArray1));
      
      floatArray3[0] = (-2797.2F);
      floatArray3[1] = 0.0F;
      floatArray3[2] = 106.7562F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[2];
      assertFalse(floatArray4.equals((Object)floatArray1));
      assertFalse(floatArray4.equals((Object)floatArray3));
      assertFalse(floatArray4.equals((Object)floatArray2));
      
      floatArray4[0] = (-1412.0F);
      floatArray4[1] = 1793.98F;
      floatArray0[3] = floatArray4;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-1.0F), 2700.6658F, 2700.6658F, false, (-2797.2F), 1793.98F, sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1793.98F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1793.98F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-0.5F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2700.6658F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(1793.98F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2700.6658F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(2700.6658F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1793.98F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(2700.6658F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-0.5F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2700.6658F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(1793.98F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2700.6658F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(2700.6658F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "A|$3RA=]AGJY-|");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(2700.6658F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2700.6658F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("A|$3RA=]AGJY-|", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2700.6658F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(2700.6658F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2700.6658F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("A|$3RA=]AGJY-|", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2700.6658F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(2700.6658F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(2700.6658F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals("A|$3RA=]AGJY-|", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(2700.6658F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(2700.6658F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2700.6658F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("A|$3RA=]AGJY-|", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(2700.6658F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(2700.6658F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(2700.6658F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals("A|$3RA=]AGJY-|", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(2700.6658F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(2700.6658F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      boolean boolean1 = homeFurnitureGroup1.intersectsRectangle((-1412.0F), 0.0F, 0.3926991F, 119.51413F);
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 660.784F, 30, 1635.1816F, 0.0F, false, 2.0F, 0.0F, sashArray0, integer0, (float[][]) null, false, (-817.21893F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-817.21893F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(660.784F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1635.1816F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-817.21893F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(660.784F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1635.1816F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(660.784F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(15.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1635.1816F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(330.392F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-817.21893F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(660.784F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1635.1816F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(2.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(660.784F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(15.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1635.1816F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(330.392F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1635.1816F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(660.784F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(15.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(30.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(330.392F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      
      homeFurnitureGroup0.setX((-4914.83F));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1635.1816F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(660.784F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(15.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(30.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-4914.83F), homeFurnitureGroup0.getX(), 0.01F);
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1635.1816F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(660.784F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(15.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(30, (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(30.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-4914.83F), homeFurnitureGroup0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(boolean0);
      
      long long0 = Integer.toUnsignedLong(4);
      assertEquals(4L, long0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float[][] floatArray0 = homeFurnitureGroup0.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setVisible(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(boolean1 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup2.setWidth(4);
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(4.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setWidth((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean2 = homeFurnitureGroup1.isDoorOrWindow();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean2);
      
      homeFurnitureGroup0.setX(4);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(4.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      homeFurnitureGroup0.setX((-4471.922F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-4471.922F), homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3297.175F), 1533.0F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup2.setWidth((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup2.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      Content content0 = homeFurnitureGroup0.getModel();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setHeight(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setHeight(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), true, 39, 39, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      boolean boolean1 = homeFurnitureGroup0.isDoorOrWindow();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(boolean1);
      
      homeFurnitureGroup0.setDepth(39);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(39.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      
      sashArray0[3] = sash0;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals(347.73135F, sash2.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("IKAkQkXoeA<Yz", (Content) null, (Content) null, (-6.8589816F), 347.73135F, 0.0F, true, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("IKAkQkXoeA<Yz", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(347.73135F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals((-6.8589816F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      
      int int0 = catalogDoorOrWindow0.compareTo(catalogPieceOfFurniture0);
      assertEquals(5, sashArray0.length);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("IKAkQkXoeA<Yz", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(347.73135F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals((-6.8589816F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1), int0);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(0);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertNotNull(integer1);
      assertEquals(0, (int)integer1);
      
      Integer integer2 = new Integer(0);
      assertFalse(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      
      homeFurnitureGroup0.setColor(integer2);
      assertFalse(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup1.isDoorOrWindow();
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      homeFurnitureGroup2.setAngle(0.0F);
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0, (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-1412.0F), (-3290.0F), (-3290.0F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setY((-1412.0F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setNameAngle((-3290.0F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup0.setDepth((-3297.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3297.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setModelMirrored(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3297.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      Content content0 = homeFurnitureGroup1.getPlanIcon();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3297.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.389101F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3290.0F), 1533.0F, (-2797.2F), (-2067.2246F), (-3290.0F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash2.getXAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = (-3290.0F);
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 4454.724F, (-4050.7268F), "<[cQxvv>C:E1\"'Ul0 %");
      assertNotNull(catalogTexture0);
      assertEquals("", catalogTexture0.getName());
      assertEquals("<[cQxvv>C:E1\"'Ul0 %", catalogTexture0.getCreator());
      assertFalse(catalogTexture0.isModifiable());
      assertEquals((-4050.7268F), catalogTexture0.getHeight(), 0.01F);
      assertEquals("", catalogTexture0.getId());
      assertEquals(4454.724F, catalogTexture0.getWidth(), 0.01F);
      
      HomeTexture homeTexture0 = homeFurnitureGroup1.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 4454.724F, (-4050.9F), "<[cQxvv>C:E1\"'Ul0 %");
      assertNotNull(catalogTexture0);
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(4454.724F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getId());
      assertEquals((-4050.9F), catalogTexture0.getHeight(), 0.01F);
      assertEquals("<[cQxvv>C:E1\"'Ul0 %", catalogTexture0.getCreator());
      assertEquals("", catalogTexture0.getName());
      
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      assertNotNull(homeTexture0);
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(4454.724F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getId());
      assertEquals((-4050.9F), catalogTexture0.getHeight(), 0.01F);
      assertEquals("<[cQxvv>C:E1\"'Ul0 %", catalogTexture0.getCreator());
      assertEquals("", catalogTexture0.getName());
      assertEquals((-4050.9F), homeTexture0.getHeight(), 0.01F);
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(4454.724F, homeTexture0.getWidth(), 0.01F);
      assertEquals("", homeTexture0.getName());
      
      homeFurnitureGroup1.setTexture(homeTexture0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(4454.724F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getId());
      assertEquals((-4050.9F), catalogTexture0.getHeight(), 0.01F);
      assertEquals("<[cQxvv>C:E1\"'Ul0 %", catalogTexture0.getCreator());
      assertEquals("", catalogTexture0.getName());
      assertEquals((-4050.9F), homeTexture0.getHeight(), 0.01F);
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(4454.724F, homeTexture0.getWidth(), 0.01F);
      assertEquals("", homeTexture0.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(boolean1 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(4);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(4, (int)integer1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(1412.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setWidth((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setColor(integer0);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      boolean boolean2 = homeFurnitureGroup1.isDoorOrWindow();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-1412.0F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(4, (int)homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertTrue(boolean2);
      
      homeFurnitureGroup0.setX(4);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(4.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3290.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, (-3290.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals(347.73135F, sash2.getStartAngle(), 0.01F);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup0.setVisible(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setDepth(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup1.containsPoint((-2399.9675F), (-111.6631F), (-255.7F));
      assertFalse(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertFalse(boolean1);
      
      homeFurnitureGroup0.setWidth((-8.28F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[7];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-1412.0F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), (-3297.2F), (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3297.2F), true);
      assertEquals(7, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(7, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3297.2F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(7, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3297.2F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup0.setDepth((-3297.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-2797.2F), (-2797.2F), (-2797.2F), 347.73135F, 1533.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getEndAngle(), 0.01F);
      assertEquals(347.73135F, sash2.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer(17);
      assertNotNull(integer0);
      assertEquals(17, (int)integer0);
      
      int int0 = Integer.sum((-221), (-221));
      assertEquals((-442), int0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), (-255.7F), (-8.28F), true, 17, 17, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setVisible(true);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(17, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(17.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(17.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(17.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(17, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup0.setY(0.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setWidth(58.335285F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup0.setColor(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(17, (int)homeFurnitureGroup0.getColor());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      homeFurnitureGroup1.setAngle(347.73135F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(17, (int)homeFurnitureGroup0.getColor());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(2.1561618F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), (-41.887436F), 5.7256055F, false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(boolean0);
      
      Level level0 = new Level("", (-3297.2F), (-226), (-226));
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals("", level1.getName());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeDoorOrWindow0.setLevel(level1);
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(5, sashArray0.length);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3291.4744F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals("", level1.getName());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertTrue(boolean1 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(2, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3291.4744F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, false);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1, linkedList0.size());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setModelMirrored(false);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      Level level0 = new Level("", (-1.0F), 0.0F, 0.0F);
      assertNotNull(level0);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals(0.0F, level1.getHeight(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeFurnitureGroup0.setLevel(level1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-256.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals(0.0F, level1.getHeight(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup2.setY(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup2.setY(136.2F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(136.2F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, 116.0015F, 3.4028235E38F, (-2.4978414F), true, true, integer0, (float[][]) null, false, (-1.0F), false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-2.4978414F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-226), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(116.0015F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      
      int int0 = catalogDoorOrWindow0.compareTo(catalogPieceOfFurniture0);
      assertEquals(5, sashArray0.length);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-2.4978414F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-226), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(116.0015F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0, int0);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(2.4978414F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 2.0F, 1209.5854F, false);
      assertNotNull(catalogTexture0);
      assertEquals("", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertNull(catalogTexture0.getId());
      assertEquals(2.0F, catalogTexture0.getWidth(), 0.01F);
      assertEquals(1209.5854F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      assertNotNull(homeTexture0);
      assertEquals("", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertNull(catalogTexture0.getId());
      assertEquals(2.0F, catalogTexture0.getWidth(), 0.01F);
      assertEquals(1209.5854F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      assertEquals(1209.5854F, homeTexture0.getHeight(), 0.01F);
      assertEquals("", homeTexture0.getName());
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(2.0F, homeTexture0.getWidth(), 0.01F);
      
      homeFurnitureGroup2.setTexture(homeTexture0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(2.4978414F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-2.4978414F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertNull(catalogTexture0.getId());
      assertEquals(2.0F, catalogTexture0.getWidth(), 0.01F);
      assertEquals(1209.5854F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      assertEquals(1209.5854F, homeTexture0.getHeight(), 0.01F);
      assertEquals("", homeTexture0.getName());
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(2.0F, homeTexture0.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(2.4978414F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertFalse(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals((-2.4978414F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      
      float float0 = homeFurnitureGroup3.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(2.4978414F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertFalse(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals((-2.4978414F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertEquals(2.4978414F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth(2.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(2.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-255.7F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      Sash sash2 = new Sash((-255.7F), 2313.2397F, 1533.0F, 1533.0F, (-255.7F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2313.2397F, sash2.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-206), (-3290.0F), 1533.0F, (-8.28F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-206.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1533.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-206.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1533.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-103.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(1533.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-206.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-206.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1533.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-103.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(1533.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-206.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setNameXOffset((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(1533.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(1533.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(1533.0F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-206));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-206.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup0.setModelMirrored(false);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setElevation(1533.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(1533.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(1533.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(1533.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-206.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup0.setModelMirrored(false);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setWidth(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(1533.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer(2142476917);
      assertNotNull(integer0);
      assertEquals(2142476917, (int)integer0);
      
      Integer integer1 = new Integer((-226));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 2142476917, 2.0F, 325.462F, 2142476917, false, (-1421.0F), 0.3926991F, sashArray0, integer1, (float[][]) null, false, 2142476917, false);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(325.462F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1421.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(325.462F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1421.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1.07123846E9F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(325.462F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1421.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(325.462F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1421.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(2.14247693E9F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1.07123846E9F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(2.14247693E9F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(325.462F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1421.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.07123846E9F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(384.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.07123846E9F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(384.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(2.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(384.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(1.07123846E9F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer2 = new Integer((-703));
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals((-703), (int)integer2);
      
      homeFurnitureGroup0.setColor(integer2);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.07123846E9F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(384.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-703), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setAngle((-3297.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.07123846E9F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(384.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-703), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(2.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(1.4723351F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(384.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(1.07123846E9F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup1.isDeformable();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.07123846E9F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(384.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-703), (int)homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(2.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(1.4723351F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(384.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(1.07123846E9F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(1.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(2.14247693E9F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setModelMirrored(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      Level level0 = new Level("", (-1.0F), 0.0F, 2313.03F);
      assertNotNull(level0);
      assertEquals("", level0.getName());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(2313.03F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals("", level0.getName());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(2313.03F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(2313.03F, level1.getHeight(), 0.01F);
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeFurnitureGroup0.setLevel(level1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-256.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", level0.getName());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals(2313.03F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(2313.03F, level1.getHeight(), 0.01F);
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray1;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1, linkedList0.size());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setModelMirrored(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(255.7F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup3.getColor());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertTrue(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(255.7F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup3.isMovable());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(255.7F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3290.0F), (-3290.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash2.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup3 = new HomeFurnitureGroup(linkedList0, "");
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals("", homeFurnitureGroup3.getName());
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      
      homeFurnitureGroup3.setHeight(2544.9336F);
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals("", homeFurnitureGroup3.getName());
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertEquals(2544.9336F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setHeight(8.28F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3290.0F), (-3290.0F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      assertEquals((-3290.0F), sash2.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup3 = new HomeFurnitureGroup(linkedList0, "");
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals("", homeFurnitureGroup3.getName());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      
      homeFurnitureGroup1.setElevation((-2797.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup3.setHeight((-3304.2786F));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals((-3304.2786F), homeFurnitureGroup3.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals("", homeFurnitureGroup3.getName());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setHeight((-1412.0F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup3.getFurniture();
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertNotNull(list0);
      assertEquals(1, linkedList0.size());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals((-3304.2786F), homeFurnitureGroup3.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertEquals("", homeFurnitureGroup3.getName());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      
      Content content0 = homeFurnitureGroup1.getPlanIcon();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      float float0 = (-3290.0F);
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), true, 39, 39, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(boolean1);
      
      // Undeclared exception!
      try { 
        homeFurnitureGroup0.setDepth(float0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(2313.03F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(2313.03F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup0.setColor(integer1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(2313.03F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      
      Integer integer1 = Integer.getInteger("?amV");
      assertNull(integer1);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      
      homeFurnitureGroup0.setModelMirrored(false);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(39, (int)homeFurnitureGroup0.getColor());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getValueAddedTaxPercentage();
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(39, (int)homeFurnitureGroup0.getColor());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      
      System.setCurrentTimeMillis(39);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-3297.2F), 0.0F, 0.0F, (-1412.0F), true, (-1196.4F), (-456.96F), sashArray0, integer1, (float[][]) null, true, 0.0F, true);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1196.4F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-456.96F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1196.4F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-456.96F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-456.96F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1196.4F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1196.4F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-456.96F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-456.96F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1196.4F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-1412.0F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-456.96F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-1648.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-3297.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-226), (int)homeDoorOrWindow1.getColor());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-1196.4F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1196.4F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-456.96F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-1412.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-456.96F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-1196.4F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      Integer integer2 = new Integer(2923);
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)integer0));
      assertNotNull(integer2);
      assertEquals(2923, (int)integer2);
      
      homeFurnitureGroup0.setColor(integer2);
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)integer0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(2923, (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      homeFurnitureGroup0.setAngle(0.0F);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(2923, (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(2923, (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(boolean1);
      
      boolean boolean2 = homeFurnitureGroup0.isDoorOrWindow();
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-1412.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1412.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(2923, (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash0;
      Integer integer0 = new Integer(5);
      assertNotNull(integer0);
      assertEquals(5, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-1.0F), (-72.0F), 231.0F, (-2797.2F), false, (-2797.2F), (-72.0F), sashArray0, integer0, (float[][]) null, false, 231.0F, true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(231.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(5, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(231.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-72.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(231.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(5, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(231.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-72.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-0.5F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(5, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(231.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-2797.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(5, sashArray0.length);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(231.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(5, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(231.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-72.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-0.5F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(5, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(231.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-2797.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(231.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(5, (int)catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(231.0F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-72.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-0.5F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(5, (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(231.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-2797.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "^RX%T");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2797.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2797.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float[][] floatArray0 = homeFurnitureGroup1.getPoints();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(4, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2797.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Integer integer1 = new Integer(5);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(5, (int)integer1);
      
      homeFurnitureGroup1.setWidth((-3477.5042F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2797.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-2797.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-2797.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals((-3477.5042F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      Content content0 = homeFurnitureGroup0.getModel();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2797.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-2797.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setElevation((-255.7F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      Content content1 = homeFurnitureGroup0.getPlanIcon();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNull(content1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(2797.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("^RX%T", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(2, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      homeFurnitureGroup0.setDepth((-255.7F));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-255.7F), homeFurnitureGroup0.getDepth(), 0.01F);
      
      Content content0 = homeFurnitureGroup0.getPlanIcon();
      assertNull(content0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-255.7F), homeFurnitureGroup0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      homeFurnitureGroup0.setModelMirrored(true);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      Level level0 = new Level("", (-1.0F), 0.0F, 0.0F);
      assertNotNull(level0);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals(0.0F, level1.getHeight(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeFurnitureGroup0.setLevel(level1);
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-256.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.0F), level0.getElevation(), 0.01F);
      assertEquals((-1.0F), level1.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals(0.0F, level1.getFloorThickness(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals(0.0F, level1.getHeight(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-256.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      BigInteger bigInteger0 = BigInteger.ZERO;
      assertNotNull(bigInteger0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("=", "=", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (Content) null, 0.0F, (-226), (-100.0F), (-3297.2F), false, (-226), (-226), sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, false, false, bigDecimal0, bigDecimal0, "");
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow1);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("=", catalogDoorOrWindow1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-100.0F), catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getDescription());
      assertEquals("=", catalogDoorOrWindow1.getId());
      assertEquals("", catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("=", catalogDoorOrWindow1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-100.0F), catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getDescription());
      assertEquals("=", catalogDoorOrWindow1.getId());
      assertEquals("", catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-100.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("=", homeDoorOrWindow0.getName());
      assertEquals("=", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("=", catalogDoorOrWindow1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-100.0F), catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getDescription());
      assertEquals("=", catalogDoorOrWindow1.getId());
      assertEquals("", catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-100.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("=", homeDoorOrWindow0.getName());
      assertEquals("=", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow1.getCurrency());
      assertEquals("=", homeDoorOrWindow1.getName());
      assertEquals((-226.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isDeformable());
      assertEquals("=", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals((-100.0F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-3297.2F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertNotSame(catalogDoorOrWindow1, catalogDoorOrWindow0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      
      homeDoorOrWindow0.setY((-1344.76F));
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(5, sashArray0.length);
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("=", catalogDoorOrWindow1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-100.0F), catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getDescription());
      assertEquals("=", catalogDoorOrWindow1.getId());
      assertEquals("", catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-100.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1344.76F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("=", homeDoorOrWindow0.getName());
      assertEquals("=", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNotSame(catalogDoorOrWindow1, catalogDoorOrWindow0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigInteger0.byteValue());
      assertEquals((short)0, bigInteger0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("=", catalogDoorOrWindow1.getName());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow1.isMovable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-100.0F), catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow1.getDescription());
      assertEquals("=", catalogDoorOrWindow1.getId());
      assertEquals("", catalogDoorOrWindow1.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals((-3297.2F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((-3297.2F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-100.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1344.76F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("=", homeDoorOrWindow0.getName());
      assertEquals("=", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNotSame(catalogDoorOrWindow1, catalogDoorOrWindow0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "=");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertFalse(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(boolean1);
      
      homeFurnitureGroup0.setWidth((-226));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isDeformable());
      assertEquals((-3297.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals("=", homeFurnitureGroup1.getName());
      assertEquals(3297.2F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float[][] floatArray0 = homeFurnitureGroup1.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isDeformable());
      assertEquals((-3297.2F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isTexturable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals("=", homeFurnitureGroup1.getName());
      assertEquals(3297.2F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      BigDecimal bigDecimal1 = homeFurnitureGroup0.getPriceValueAddedTaxIncluded();
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertNotNull(bigDecimal1);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals("", homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3297.2F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals("=", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3297.2F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-226.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-3297.2F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDeformable());
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), (-3290.0F), (-3290.0F), false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3290.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-3290.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(boolean1);
      
      // Undeclared exception!
      try { 
        homeFurnitureGroup0.setAngle(30);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      FurnitureCategory furnitureCategory0 = catalogDoorOrWindow0.getCategory();
      assertEquals(2, sashArray0.length);
      assertNull(furnitureCategory0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      catalogDoorOrWindow0.setCategory((FurnitureCategory) null);
      assertEquals(2, sashArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(2, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      Integer integer0 = new Integer((-222));
      assertNotNull(integer0);
      assertEquals((-222), (int)integer0);
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-222), (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      BigDecimal bigDecimal1 = homeFurnitureGroup0.getPrice();
      assertNotNull(bigDecimal1);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-222), (int)homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.661F), (-3290.661F), (-3290.661F), false, 39, 39, sashArray0, integer0, (float[][]) null, false, (-3290.661F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.661F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.661F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.661F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-3290.661F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.661F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1645.3304F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.661F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.661F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.661F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-3290.661F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-3290.661F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.661F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1645.3304F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-3290.661F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(39.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.661F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.661F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3290.661F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      
      homeFurnitureGroup0.setColor(integer0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.661F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.661F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(39, (int)homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3290.661F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-3290.661F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-3290.661F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(3290.661F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-255.7F), (-255.7F), (-255.7F), true, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertEquals(2, sashArray0.length);
      assertNotNull(bigDecimal1);
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals((byte)102, bigDecimal1.byteValue());
      assertEquals((short) (-154), bigDecimal1.shortValue());
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(2, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertNotSame(bigDecimal0, bigDecimal1);
      assertTrue(boolean0);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertTrue(boolean1 == boolean0);
      assertEquals(2, sashArray0.length);
      assertEquals(2, linkedList0.size());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertNotSame(bigDecimal0, bigDecimal1);
      assertTrue(boolean1);
      
      boolean boolean2 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(2, sashArray0.length);
      assertEquals(3, linkedList0.size());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertNotSame(bigDecimal0, bigDecimal1);
      assertTrue(boolean2);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals("?amV", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.move((-1560.6084F), (-2638.5F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-1560.6084F), homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals("?amV", homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals((-2638.5F), homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals("?amV", homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals("?amV", homeFurnitureGroup2.getCurrency());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals((-255.7F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(255.7F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setVisible(true);
      assertEquals(5, sashArray0.length);
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setWidth(58.335285F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup2.setMovable(true);
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup2.isTexturable();
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(58.335285F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getColor());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals("", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3290.0F), (-3290.0F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3297.175F), sash1.getWidth(), 0.01F);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, (-3290.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash2.getEndAngle(), 0.01F);
      assertEquals(347.73135F, sash2.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup2.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup2.setDepth(1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(1.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      
      HomeTexture homeTexture0 = homeFurnitureGroup1.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertNull(homeTexture0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      
      homeFurnitureGroup3.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(1.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup3.intersectsRectangle((-255.7F), (-8.28F), 8.28F, (-1412.0F));
      assertFalse(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(1.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getDescription());
      assertTrue(homeFurnitureGroup3.isResizable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[0];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), 0.0F, 0.0F, false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getPriceValueAddedTaxIncluded();
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(2, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(2, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals("?amV", homeFurnitureGroup1.getName());
      assertEquals("?amV", homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals("?amV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("?amV", homeFurnitureGroup0.getCurrency());
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertEquals(255.7F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-255.7F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(0.0F, 1533.0F, (-2797.2F), (-2067.2246F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getWidth(), 0.01F);
      assertEquals((-2067.2246F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      sashArray0[4] = sashArray0[0];
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      float[][] floatArray0 = new float[4][6];
      float[] floatArray1 = new float[5];
      floatArray1[3] = 2313.03F;
      float[] floatArray2 = new float[3];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[1] = 0.0F;
      floatArray0[2] = floatArray2;
      floatArray0[3] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-2797.2F), (-255.7F), sashArray0, integer0, floatArray0, false, 728.5133F, true);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(728.5133F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup1.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertEquals(255.7F, float0, 0.01F);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup1.getValueAddedTax();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-255.7F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-255.7F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(255.7F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-255.7F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(255.7F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = homeFurnitureGroup2.clone();
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup3.isMovable();
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup3.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertNull(homeFurnitureGroup3.getShininess());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertTrue(homeFurnitureGroup3.isVisible());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertEquals("mV", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(8.28F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNull(homeFurnitureGroup2.getColor());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3290.0F), (-3290.0F));
      assertNotNull(sash0);
      assertEquals((-3290.0F), sash0.getStartAngle(), 0.01F);
      assertEquals((-1412.0F), sash0.getWidth(), 0.01F);
      assertEquals((-3290.0F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      Integer integer1 = new Integer((-3918));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-3918), (int)integer1);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-72.0F), (-3297.175F), 1238.3639F, true, (-3290.0F), (-1412.0F), sashArray0, integer1, (float[][]) null, true, (-1430.0F), true);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1238.3639F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1430.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1238.3639F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1430.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1238.3639F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1238.3639F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1430.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1238.3639F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-1412.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3918), (int)homeDoorOrWindow1.getColor());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-36.0F), homeDoorOrWindow1.getY(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow2 = homeDoorOrWindow1.clone();
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow2);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1238.3639F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1430.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1238.3639F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-1412.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3918), (int)homeDoorOrWindow1.getColor());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-36.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow2.getCurrency());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals((-3918), (int)homeDoorOrWindow2.getColor());
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals((-3297.175F), homeDoorOrWindow2.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isResizable());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertNull(homeDoorOrWindow2.getShininess());
      assertEquals(1238.3639F, homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow2.getDescription());
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getName());
      assertEquals(1238.3639F, homeDoorOrWindow2.getElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertEquals((-113.0F), homeDoorOrWindow2.getX(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow2.getCatalogId());
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertTrue(homeDoorOrWindow2.isBackFaceShown());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow2));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow2));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-3297.175F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-72.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1238.3639F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3918), (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1430.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-3918), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1412.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-72.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-36.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-3290.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(1238.3639F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-1412.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-72.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-3297.175F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(1238.3639F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-3290.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3918), (int)homeDoorOrWindow1.getColor());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-36.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow2);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1238.3639F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1238.3639F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1238.3639F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1238.3639F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-1238.3639F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(1238.3639F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setColor((Integer) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1238.3639F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1238.3639F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup0.setAngle((-72.0F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1238.3639F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1238.3639F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3.3982236F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      boolean boolean1 = homeFurnitureGroup0.isDeformable();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1238.3639F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1238.3639F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1238.3639F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(3.3982236F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[0];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), 3648.897F, 3648.897F, false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3648.897F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(3648.897F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(3648.897F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(3648.897F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3648.897F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(3648.897F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(3648.897F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      homeFurnitureGroup0.setWidth((-3290.0F));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      
      boolean boolean1 = homeFurnitureGroup0.isResizable();
      assertTrue(boolean1 == boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(boolean1);
      
      String string0 = homeFurnitureGroup0.getCatalogId();
      assertNull(string0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(3648.897F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(3648.897F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-3290.0F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Integer integer0 = new Integer(39);
      assertNotNull(integer0);
      assertEquals(39, (int)integer0);
      
      Sash[] sashArray0 = new Sash[1];
      Sash sash0 = new Sash((-1.0F), 2410.7F, 460.684F, 0.0F, (-1.0F));
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-1.0F), sash0.getEndAngle(), 0.01F);
      assertEquals(2410.7F, sash0.getYAxis(), 0.01F);
      assertEquals((-1.0F), sash0.getXAxis(), 0.01F);
      assertEquals(460.684F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-226.0F), (-1404.0F), 276.92526F, true, (-4151.7363F), (-1.0F), sashArray0, integer0, (float[][]) null, false, (-1568.3201F), false);
      assertEquals(1, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(276.92526F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-1404.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1568.3201F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4151.7363F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(1, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(276.92526F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-1404.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1568.3201F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4151.7363F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1404.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(276.92526F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(276.92526F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-4151.7363F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(1, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-226.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(276.92526F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(39.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-1404.0F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-1568.3201F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(39, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4151.7363F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-226.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1404.0F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(276.92526F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(276.92526F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(39.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(39, (int)homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(19.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-4151.7363F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(276.92526F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(276.92526F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-276.92526F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) null);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertTrue(boolean1);
      
      // Undeclared exception!
      try { 
        homeFurnitureGroup0.setDepth((-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeFurnitureGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), (-41.887436F), 5.7256055F, false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(boolean0);
      
      Level level0 = new Level("", (-3297.2F), (-226), (-226));
      assertNotNull(level0);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      
      Level level1 = level0.clone();
      assertFalse(level1.equals((Object)level0));
      assertNotNull(level1);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      homeDoorOrWindow0.setLevel(level1);
      assertFalse(level0.equals((Object)level1));
      assertFalse(level1.equals((Object)level0));
      assertEquals(5, sashArray0.length);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-3291.4744F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(5.7256055F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-226.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-226.0F), level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals((-3297.2F), level0.getElevation(), 0.01F);
      assertTrue(level1.isVisible());
      assertEquals((-226.0F), level1.getFloorThickness(), 0.01F);
      assertEquals((-226.0F), level1.getHeight(), 0.01F);
      assertEquals("", level1.getName());
      assertEquals((-3297.2F), level1.getElevation(), 0.01F);
      assertNotSame(level0, level1);
      assertNotSame(level1, level0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-5.725586F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeFurnitureGroup1);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertTrue(boolean1 == boolean0);
      assertEquals(2, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-5.725586F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5.725586F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(5.725586F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow1.getColor());
      assertEquals((-226.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(5.725586F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(5.725586F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      
      boolean boolean2 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(3, linkedList0.size());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-41.887436F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(5.7256055F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5.725586F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(5.725586F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-3297.2F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow1.getColor());
      assertEquals((-226.0F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getDescription());
      assertEquals((-226.0F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-41.887436F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(5.725586F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(5.725586F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals((-226.0F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-1648.6F), homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertTrue(boolean2);
      
      HomeFurnitureGroup homeFurnitureGroup2 = new HomeFurnitureGroup(linkedList0, "_9q@[");
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(3, linkedList0.size());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals("_9q@[", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(5.725586F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      
      Integer integer1 = new Integer((-226));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-226), (int)integer1);
      
      homeFurnitureGroup2.setColor(integer1);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(3, linkedList0.size());
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals((-226), (int)homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals("_9q@[", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(5.725586F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup2.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setColor(integer1);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup1.getValueAddedTaxPercentage();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertNull(bigDecimal0);
      assertEquals(3, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals((-5.725586F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(5.725586F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals((-226), (int)homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-5.725586F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("", homeFurnitureGroup1.getName());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals(5.725586F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      assertNotNull(sash0);
      assertEquals((-3297.2F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getStartAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getEndAngle(), 0.01F);
      assertEquals((-3297.2F), sash0.getXAxis(), 0.01F);
      assertEquals((-3297.2F), sash0.getWidth(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-3297.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-3297.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2.4978414F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-2.4978414F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2.4978414F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-1648.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-3297.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup1.setElevation(0.5F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.5F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.5F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.5F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(2.4978414F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2.4978414F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2.4978414F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(2.4978414F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.5F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertEquals(2.4978414F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.5F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertNull(homeFurnitureGroup2.getShininess());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup2.isMovable());
      assertEquals("", homeFurnitureGroup2.getName());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(2.4978414F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertEquals(2.4978414F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      float float0 = (-255.7F);
      Sash[] sashArray0 = new Sash[5];
      BigDecimal bigDecimal0 = new BigDecimal((-255.7F));
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", false, false, false, bigDecimal0, bigDecimal0, "?amV");
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow1.getCurrency());
      assertEquals((-127.85F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals((-255.7F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals("?amV", homeDoorOrWindow1.getCatalogId());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertFalse(homeDoorOrWindow1.isResizable());
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertEquals("?amV", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short) (-255), bigDecimal0.shortValue());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("?amV", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("?amV", catalogDoorOrWindow0.getCreator());
      assertEquals("?amV", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-255.7F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-255.7F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("?amV", catalogDoorOrWindow0.getCurrency());
      assertEquals("?amV", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("?amV", homeDoorOrWindow0.getName());
      assertEquals("?amV", homeDoorOrWindow0.getDescription());
      assertEquals((-255.7F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?amV", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("?amV", homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-127.85F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-127.85F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-255.7F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-8.28F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow0.getColor());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(4, (int)homeDoorOrWindow0.getColor());
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      
      float float0 = homeFurnitureGroup2.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertNull(homeFurnitureGroup2.getColor());
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup1.setDepth((-226));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup1.containsPoint(1407.0F, 0.5F, 1477.2F);
      assertTrue(boolean1 == boolean0);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-255.7F), (-255.7F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getWidth(), 0.01F);
      assertEquals((-255.7F), sash0.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-255.7F), 2313.03F, (-3297.175F), (-3297.175F), (-2797.2F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash1.getWidth(), 0.01F);
      assertEquals(2313.03F, sash1.getYAxis(), 0.01F);
      assertEquals((-2797.2F), sash1.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      Sash sash2 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-255.7F), (-255.7F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-255.7F), sash2.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash2.getXAxis(), 0.01F);
      assertEquals((-3297.175F), sash2.getYAxis(), 0.01F);
      assertEquals((-1412.0F), sash2.getWidth(), 0.01F);
      assertEquals((-255.7F), sash2.getEndAngle(), 0.01F);
      
      Integer integer0 = new Integer((-226));
      assertNotNull(integer0);
      assertEquals((-226), (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-2797.2F), 0.0F, 0.0F, true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-2797.2F), true);
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1398.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(5, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals((-226), (int)catalogDoorOrWindow0.getColor());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-226.0F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-2797.2F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertEquals((-2797.2F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-226.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2797.2F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-226.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-226), (int)homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-226.0F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-113.0F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1398.6F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals((-226.0F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals("", homeFurnitureGroup2.getName());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup3 = new HomeFurnitureGroup(linkedList0, "");
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertNotNull(homeFurnitureGroup3);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertNull(homeFurnitureGroup3.getDescription());
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      
      homeFurnitureGroup3.setHeight((-3304.2786F));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup3.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup3.getShininess());
      assertNull(homeFurnitureGroup3.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup3.getNameYOffset(), 0.01F);
      assertEquals("", homeFurnitureGroup3.getName());
      assertFalse(homeFurnitureGroup3.isNameVisible());
      assertNull(homeFurnitureGroup3.getDescription());
      assertEquals((-3304.2786F), homeFurnitureGroup3.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup3.isModelMirrored());
      assertTrue(homeFurnitureGroup3.isDoorOrWindow());
      assertFalse(homeFurnitureGroup3.isBackFaceShown());
      assertNull(homeFurnitureGroup3.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup3.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup3.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup3.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup3.getColor());
      assertEquals(0.0F, homeFurnitureGroup3.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup3.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup3.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup3.isMovable());
      assertEquals(0.0F, homeFurnitureGroup3.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup3.isVisible());
      assertEquals(0.0F, homeFurnitureGroup3.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup3.isResizable());
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup3, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setHeight((-1412.0F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup3));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertEquals("", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-1412.0F), homeFurnitureGroup1.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNull(homeFurnitureGroup1.getShininess());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup3);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(30);
      assertNotNull(integer0);
      assertEquals(30, (int)integer0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 30, (-3290.0F), 0.0F, 0.0F, false, 30, 30, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      assertEquals(4, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(30.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isModifiable());
      assertEquals(30, (int)catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals((-3290.0F), catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(30.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3290.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(30.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(30.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(30, (int)homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(30.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(15.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1645.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(boolean0);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      
      homeFurnitureGroup0.setDepth((-1.0F));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      
      BigDecimal bigDecimal0 = homeFurnitureGroup0.getPrice();
      assertNull(bigDecimal0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      assertNotNull(sash0);
      assertEquals((-255.7F), sash0.getYAxis(), 0.01F);
      assertEquals((-255.7F), sash0.getEndAngle(), 0.01F);
      assertEquals((-2797.2F), sash0.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash0.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-255.7F), sash1.getEndAngle(), 0.01F);
      assertEquals((-255.7F), sash1.getStartAngle(), 0.01F);
      assertEquals(1533.0F, sash1.getWidth(), 0.01F);
      assertEquals((-3297.175F), sash1.getXAxis(), 0.01F);
      assertEquals((-3290.0F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(1533.0F, sash2.getStartAngle(), 0.01F);
      assertEquals((-255.7F), sash2.getXAxis(), 0.01F);
      assertEquals((-2797.2F), sash2.getEndAngle(), 0.01F);
      assertEquals(1533.0F, sash2.getWidth(), 0.01F);
      assertEquals(2313.03F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals((-1412.0F), sash3.getWidth(), 0.01F);
      assertEquals(1533.0F, sash3.getEndAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getXAxis(), 0.01F);
      assertEquals(347.73135F, sash3.getStartAngle(), 0.01F);
      assertEquals((-3297.175F), sash3.getYAxis(), 0.01F);
      
      Integer integer0 = new Integer(4);
      assertNotNull(integer0);
      assertEquals(4, (int)integer0);
      
      Sash[] sashArray1 = new Sash[2];
      assertFalse(sashArray1.equals((Object)sashArray0));
      
      sashArray1[0] = sash0;
      sashArray1[1] = sash0;
      BigDecimal bigDecimal0 = new BigDecimal(161.2238);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-95), bigDecimal0.byteValue());
      assertEquals((short)161, bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", "mV", "mV", (Content) null, (Content) null, (Content) null, 2313.03F, (-1412.0F), (-255.7F), 0.0F, true, 3249.0F, (-255.7F), sashArray1, (float[][]) null, "mV", true, true, true, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertEquals(2, sashArray1.length);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte) (-95), bigDecimal0.byteValue());
      assertEquals((short)161, bigDecimal0.shortValue());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertEquals(2, sashArray1.length);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte) (-95), bigDecimal0.byteValue());
      assertEquals((short)161, bigDecimal0.shortValue());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertEquals(2, sashArray1.length);
      assertNotNull(homeDoorOrWindow1);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(3249.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals("mV", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("mV", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals("mV", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals((byte) (-95), bigDecimal0.byteValue());
      assertEquals((short)161, bigDecimal0.shortValue());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(sashArray1, sashArray0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(sashArray1.equals((Object)sashArray0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(2, sashArray1.length);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(3249.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(1156.515F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals("mV", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("mV", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals("mV", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-1412.0F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(1, linkedList0.size());
      assertEquals((byte) (-95), bigDecimal0.byteValue());
      assertEquals((short)161, bigDecimal0.shortValue());
      assertEquals("mV", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogDoorOrWindow0.getCurrency());
      assertEquals(3249.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("mV", catalogDoorOrWindow0.getCreator());
      assertEquals("mV", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-255.7F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2313.03F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("mV", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-1412.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-255.7F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1412.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-255.7F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2313.03F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(3249.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getDescription());
      assertEquals(1156.515F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("mV", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-706.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(sashArray1, sashArray0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertTrue(boolean0);
      
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      assertFalse(sashArray0.equals((Object)sashArray1));
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(catalogDoorOrWindow1);
      assertTrue(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("mV", catalogDoorOrWindow1.getName());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isTexturable());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow1.getCreationDate());
      assertNull(catalogDoorOrWindow1.getId());
      assertNull(catalogDoorOrWindow1.getDescription());
      assertTrue(catalogDoorOrWindow1.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDeformable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow1.getColor());
      assertNull(catalogDoorOrWindow1.getCreator());
      assertTrue(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow2 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      assertFalse(sashArray0.equals((Object)sashArray1));
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertEquals(5, sashArray0.length);
      assertNotNull(homeDoorOrWindow2);
      assertTrue(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("mV", catalogDoorOrWindow1.getName());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isTexturable());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow1.getCreationDate());
      assertNull(catalogDoorOrWindow1.getId());
      assertNull(catalogDoorOrWindow1.getDescription());
      assertTrue(catalogDoorOrWindow1.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDeformable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow1.getColor());
      assertNull(catalogDoorOrWindow1.getCreator());
      assertTrue(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow2.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(4, (int)homeDoorOrWindow2.getColor());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isBackFaceShown());
      assertEquals(4.0F, homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow2.getElevation(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow2.getDescription());
      assertNull(homeDoorOrWindow2.getCatalogId());
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow2.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getHeight(), 0.01F);
      assertEquals("mV", homeDoorOrWindow2.getName());
      
      boolean boolean1 = linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow2);
      assertFalse(sashArray0.equals((Object)sashArray1));
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertTrue(boolean1 == boolean0);
      assertEquals(5, sashArray0.length);
      assertEquals(2, linkedList0.size());
      assertTrue(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals("mV", catalogDoorOrWindow1.getName());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isTexturable());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertEquals(1392409281320L, (long)catalogDoorOrWindow1.getCreationDate());
      assertNull(catalogDoorOrWindow1.getId());
      assertNull(catalogDoorOrWindow1.getDescription());
      assertTrue(catalogDoorOrWindow1.isMovable());
      assertEquals(4.0F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-8.28F), catalogDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDeformable());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertTrue(catalogDoorOrWindow1.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertEquals((-226.0F), catalogDoorOrWindow1.getWidth(), 0.01F);
      assertEquals((-3290.0F), catalogDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(4, (int)catalogDoorOrWindow1.getColor());
      assertNull(catalogDoorOrWindow1.getCreator());
      assertTrue(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertEquals((-3290.0F), catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow2.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals((-3290.0F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(4, (int)homeDoorOrWindow2.getColor());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isBackFaceShown());
      assertEquals(4.0F, homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow2.getElevation(), 0.01F);
      assertEquals((-8.28F), homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow2.getDescription());
      assertNull(homeDoorOrWindow2.getCatalogId());
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isResizable());
      assertEquals((-113.0F), homeDoorOrWindow2.getX(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals((-226.0F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals((-1645.0F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getHeight(), 0.01F);
      assertEquals("mV", homeDoorOrWindow2.getName());
      assertNotSame(sashArray0, sashArray1);
      assertNotSame(catalogDoorOrWindow1, catalogDoorOrWindow0);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow0);
      assertTrue(boolean1);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup2);
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      float float0 = homeFurnitureGroup0.getHeight();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(2, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertEquals(8.28F, float0, 0.01F);
      
      homeFurnitureGroup0.setDepth((-2797.2F));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(2, linkedList0.size());
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      HomeTexture homeTexture0 = homeFurnitureGroup2.getTexture();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup2));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup2.equals((Object)homeFurnitureGroup0));
      assertNull(homeTexture0);
      assertEquals(2, linkedList0.size());
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertEquals(0.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getCurrency());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals("mV", homeFurnitureGroup1.getName());
      assertEquals(8.28F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertTrue(homeFurnitureGroup2.isMovable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup2.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup2.getDescription());
      assertEquals(0.0F, homeFurnitureGroup2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup2.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup2.isModelMirrored());
      assertFalse(homeFurnitureGroup2.isBackFaceShown());
      assertNull(homeFurnitureGroup2.getCurrency());
      assertEquals((-8.28F), homeFurnitureGroup2.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup2.isDoorOrWindow());
      assertFalse(homeFurnitureGroup2.isNameVisible());
      assertTrue(homeFurnitureGroup2.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup2.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup2.getColor());
      assertEquals(0.0F, homeFurnitureGroup2.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup2.getY(), 0.01F);
      assertEquals(8.28F, homeFurnitureGroup2.getHeight(), 0.01F);
      assertEquals("mV", homeFurnitureGroup2.getName());
      assertNull(homeFurnitureGroup2.getShininess());
      assertNull(homeFurnitureGroup2.getCatalogId());
      assertTrue(homeFurnitureGroup2.isVisible());
      assertEquals(0.0F, homeFurnitureGroup2.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup2.isResizable());
      assertNull(homeFurnitureGroup2.getStaircaseCutOutShape());
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup2);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup2, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setTexture((HomeTexture) null);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(2, linkedList0.size());
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
      
      float[][] floatArray0 = homeFurnitureGroup0.getModelRotation();
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup2));
      assertEquals(3, floatArray0.length);
      assertNotNull(floatArray0);
      assertEquals(2, linkedList0.size());
      assertEquals((-2797.2F), homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals((-8.28F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-8.28F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("mV", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup2);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F), (-3297.2F));
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, (-226), (-3297.2F), 0.0F, (-2.4978414F), false, (-226), (-226), sashArray0, integer0, (float[][]) null, false, (-3297.2F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      Level level0 = new Level("", (-2.4978414F), (-226), (-226));
      Level level1 = level0.clone();
      level1.setElevation(0.3926991F);
      level1.setFloorThickness(0.0F);
      homeDoorOrWindow0.setLevel(level1);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup1.intersectsRectangle(1.0F, (-464.1F), 2809.2F, (-2.4978414F));
      homeFurnitureGroup1.getPoints();
      homeFurnitureGroup1.setWidth((-3297.2F));
      homeFurnitureGroup1.getModel();
      assertEquals((-3297.2F), homeFurnitureGroup1.getWidth(), 0.01F);
      
      homeFurnitureGroup0.setColor(integer0);
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, (-255.7F), (-255.7F), (-255.7F), (-255.7F), false, (-255.7F), (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, true, bigDecimal0, bigDecimal0, "?amV");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      Integer integer0 = new Integer((-3141));
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(list0, (String) null);
      Integer integer1 = new Integer((-3141));
      homeFurnitureGroup1.setColor(integer1);
      assertFalse(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isVisible());
      
      homeFurnitureGroup0.getPrice();
      assertFalse(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup2.getTexture();
      homeFurnitureGroup1.setTexture((HomeTexture) null);
      homeFurnitureGroup2.setY(1.0F);
      homeFurnitureGroup2.setY(136.2F);
      homeFurnitureGroup2.getValueAddedTaxPercentage();
      assertEquals((-226.0F), homeFurnitureGroup1.getDepth(), 0.01F);
      
      homeFurnitureGroup0.setAngle(0.0F);
      assertEquals(8.28F, homeFurnitureGroup0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setNameYOffset(1.0F);
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.getPoints();
      Integer integer1 = new Integer(4);
      homeFurnitureGroup1.setColor(integer0);
      homeFurnitureGroup0.getModelRotation();
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      assertEquals(1, list0.size());
      
      homeFurnitureGroup1.isResizable();
      assertTrue(homeFurnitureGroup1.isMovable());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-2797.2F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-2797.2F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[3] = sash0;
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 4, (-3290.0F), 0.0F, (-1412.0F), false, 4, 4, sashArray0, integer0, (float[][]) null, false, (-3290.0F), false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.clone();
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.setColor((Integer) null);
      homeFurnitureGroup1.setAngle((-255.7F));
      homeFurnitureGroup1.isDeformable();
      homeFurnitureGroup1.setWidth(4);
      homeFurnitureGroup1.clone();
      assertEquals(1.9106007F, homeFurnitureGroup1.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      Integer integer0 = new Integer(39);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 39, (-3290.0F), (-3290.0F), (-3290.0F), true, 39, 39, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.setDepth((-3290.0F));
      assertEquals((-3290.0F), homeFurnitureGroup0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[0];
      Integer integer0 = new Integer((-847));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (Content) null, (Content) null, 3097.98F, (-3290.0F), 3097.98F, 0.0F, false, 0.0F, (-3290.0F), sashArray0, integer0, (float[][]) null, false, 302.5663F, false);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      float float0 = (-1637.73F);
      LightSource[] lightSourceArray0 = new LightSource[1];
      LightSource lightSource0 = new LightSource(3097.98F, 0.0F, (-1.0F), (-847));
      lightSourceArray0[0] = lightSource0;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight("4xG7Mj", "", "4xG7Mj", (Content) null, (Content) null, (Content) null, (-3290.0F), (-1637.73F), 302.5663F, 0.0F, false, lightSourceArray0, (float[][]) null, "4xG7Mj", false, false, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isTopRightPointAt(0.0F, 0.0F, 2.0F);
      HomeLight homeLight1 = homeLight0.clone();
      linkedList0.add((HomePieceOfFurniture) homeLight1);
      Level level0 = new Level("", 911.42F, 302.5663F, (-847));
      level0.clone();
      homeDoorOrWindow0.setLevel(level0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "4xG7Mj");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash sash0 = new Sash((-255.7F), (-255.7F), (-2797.2F), (-3297.175F), (-255.7F));
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = new BigDecimal(1533.0F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?amV", "?amV", "?amV", (Content) null, (Content) null, (Content) null, 2313.03F, (-1412.0F), (-255.7F), (-2797.2F), true, 3249.0F, (-255.7F), sashArray0, (float[][]) null, "?amV", true, true, false, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.setY((-3290.0F));
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow1);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "?amV");
      homeFurnitureGroup0.setWidth((-3297.2F));
      homeFurnitureGroup0.getModelRotation();
      homeFurnitureGroup0.clone();
      assertEquals((-3297.2F), homeFurnitureGroup0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), (-3297.175F), 1533.0F);
      Integer integer0 = new Integer((-226));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 1965.0392F, (-8.28F), true, (-226), (-226), sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup2.setWidth((-255.7F));
      homeFurnitureGroup0.getModel();
      homeFurnitureGroup1.setHeight(1.0F);
      homeFurnitureGroup1.setHeight(1.0F);
      assertEquals(1.0F, homeFurnitureGroup1.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = new Sash((-3297.175F), (-255.7F), (-2797.2F), (-2797.2F), (-255.7F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-3297.175F), (-3290.0F), 1533.0F, (-255.7F), (-255.7F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-255.7F), 2313.03F, 1533.0F, 1533.0F, (-2797.2F));
      sashArray0[3] = sash2;
      Sash sash3 = new Sash((-3297.175F), (-3297.175F), (-1412.0F), 347.73135F, 1533.0F);
      Integer integer0 = new Integer(4);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("mV", (Content) null, (Content) null, (-226), (-3290.0F), 0.0F, (-8.28F), true, 4, 4, sashArray0, integer0, (float[][]) null, true, (-3290.0F), true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      linkedList0.add((HomePieceOfFurniture) homeDoorOrWindow0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "mV");
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      HomeFurnitureGroup homeFurnitureGroup2 = homeFurnitureGroup1.clone();
      homeFurnitureGroup2.getHeight();
      homeFurnitureGroup1.setDepth((-226));
      homeFurnitureGroup0.setModelMirrored(true);
      homeFurnitureGroup1.getPlanIcon();
      assertTrue(homeFurnitureGroup0.isModelMirrored());
  }
}
