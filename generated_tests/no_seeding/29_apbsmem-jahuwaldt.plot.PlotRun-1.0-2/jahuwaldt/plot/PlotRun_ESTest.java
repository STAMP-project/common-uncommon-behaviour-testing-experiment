/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 11:11:49 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.CircleSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.RTriangle1Symbol;
import jahuwaldt.plot.Triangle1Symbol;
import jahuwaldt.plot.Triangle2Symbol;
import jahuwaldt.plot.Triangle3Symbol;
import jahuwaldt.plot.XSymbol;
import java.awt.Color;
import java.time.temporal.ChronoField;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotRun_ESTest extends PlotRun_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[5];
      PlotDatum plotDatum0 = new PlotDatum(4.9E-324, 4.9E-324, false);
      plotDatumArray0[0] = plotDatum0;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      // Undeclared exception!
      try { 
        plotRun0.setLineColor(color0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1362.98, false);
      plotRun0.add(0, (Object) plotDatum0);
      assertEquals(1, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      int int0 = plotRun0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, (PlotSymbol) null);
      plotRun0.set(1, (Object) null);
      assertEquals(9, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      Object object0 = plotRun0.remove(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[3];
      Triangle2Symbol triangle2Symbol0 = new Triangle2Symbol();
      PlotDatum plotDatum0 = new PlotDatum(3941.7758234935204, 3941.7758234935204, false, triangle2Symbol0);
      plotDatumArray0[1] = plotDatum0;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      PlotDatum plotDatum1 = (PlotDatum)plotRun0.remove(1);
      assertEquals(0.0, plotDatum1.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      double[] doubleArray0 = new double[19];
      doubleArray0[1] = (-20.0);
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, xSymbol0);
      double double0 = plotRun0.getMinY();
      assertEquals(19, plotRun0.size());
      assertEquals((-20.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[5];
      PlotDatum plotDatum0 = new PlotDatum(4.9E-324, 4.9E-324, false);
      plotDatumArray0[0] = plotDatum0;
      plotDatumArray0[1] = plotDatumArray0[0];
      plotDatumArray0[2] = plotDatumArray0[0];
      XSymbol xSymbol0 = new XSymbol();
      plotDatumArray0[3] = plotDatum0;
      PlotDatum plotDatum1 = new PlotDatum((-1174.6), (-1.0), false, xSymbol0);
      plotDatumArray0[4] = plotDatum1;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      double double0 = plotRun0.getMinX();
      assertEquals((-1174.6), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      Object object0 = plotRun0.get(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[3];
      Triangle2Symbol triangle2Symbol0 = new Triangle2Symbol();
      PlotDatum plotDatum0 = new PlotDatum(3941.7758234935204, 3941.7758234935204, false, triangle2Symbol0);
      plotDatumArray0[0] = plotDatum0;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      Object object0 = plotRun0.get(0);
      assertEquals(3, plotRun0.size());
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRun0.set(17, (Object) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 17, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      ChronoField chronoField0 = ChronoField.PROLEPTIC_MONTH;
      // Undeclared exception!
      try { 
        plotRun0.set(1, chronoField0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.time.temporal.ChronoField cannot be cast to jahuwaldt.plot.PlotDatum
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRun0.remove((-1125));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[20];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      // Undeclared exception!
      try { 
        plotRun0.getMinY();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[2];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      // Undeclared exception!
      try { 
        plotRun0.getMinX();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[6];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      // Undeclared exception!
      try { 
        plotRun0.getMaxY();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      // Undeclared exception!
      try { 
        plotRun0.getMaxX();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRun0.get((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRun0.add(1074, (Object) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1074, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotRun plotRun0 = null;
      try {
        plotRun0 = new PlotRun((PlotDatum[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotRun plotRun0 = null;
      try {
        plotRun0 = new PlotRun((Collection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[5];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      int int0 = plotRun0.size();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      double[] doubleArray0 = new double[2];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, triangle3Symbol0);
      PlotRun plotRun1 = (PlotRun)plotRun0.clone();
      assertNotSame(plotRun1, plotRun0);
      assertEquals(2, plotRun0.size());
      assertEquals(2, plotRun1.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer0.getTextNonSelectionColor();
      plotRun0.setLineColor(color0);
      assertEquals(0, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[5];
      PlotDatum plotDatum0 = new PlotDatum(4.9E-324, 4.9E-324, false);
      plotDatumArray0[0] = plotDatum0;
      plotDatumArray0[1] = plotDatum0;
      plotDatumArray0[2] = plotDatumArray0[0];
      XSymbol xSymbol0 = new XSymbol();
      plotDatumArray0[3] = plotDatumArray0[2];
      plotDatumArray0[4] = plotDatumArray0[3];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      plotRun0.setPlotSymbol(xSymbol0);
      assertEquals(5, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, rTriangle1Symbol0);
      double double0 = plotRun0.getMaxY();
      assertEquals(1, plotRun0.size());
      assertEquals(4.9E-324, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Triangle2Symbol triangle2Symbol0 = new Triangle2Symbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, triangle2Symbol0);
      double double0 = plotRun0.getMinY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(2, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      double double0 = plotRun0.getMinY();
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Triangle2Symbol triangle2Symbol0 = new Triangle2Symbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, triangle2Symbol0);
      double double0 = plotRun0.getMaxX();
      assertEquals(2, plotRun0.size());
      assertEquals(4.9E-324, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      double double0 = plotRun0.getMinX();
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<PlotDatum> linkedList0 = new LinkedList<PlotDatum>();
      PlotDatum plotDatum0 = new PlotDatum(3262.3112162671, 4065.0353367359703, true, (PlotSymbol) null);
      linkedList0.addLast(plotDatum0);
      PlotRun plotRun0 = new PlotRun(linkedList0);
      assertEquals(1, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrayList<ChronoField> arrayList0 = new ArrayList<ChronoField>();
      ChronoField chronoField0 = ChronoField.EPOCH_DAY;
      arrayList0.add(chronoField0);
      PlotRun plotRun0 = new PlotRun(arrayList0);
      assertEquals(0, plotRun0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[0];
      PlotRun plotRun0 = null;
      try {
        plotRun0 = new PlotRun(doubleArray0, doubleArray1, true, triangle1Symbol0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      XSymbol xSymbol0 = new XSymbol();
      PlotRun plotRun0 = null;
      try {
        plotRun0 = new PlotRun(doubleArray0, (double[]) null, true, xSymbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      double[] doubleArray0 = new double[2];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, triangle3Symbol0);
      double double0 = plotRun0.getMinX();
      assertEquals(2, plotRun0.size());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotRun plotRun0 = null;
      try {
        plotRun0 = new PlotRun((double[]) null, (double[]) null, true, circleSymbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      // Undeclared exception!
      try { 
        plotRun0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      plotRun0.clear();
      assertFalse(linkedHashSet0.contains(plotRun0));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArrayList<ChronoField> arrayList0 = new ArrayList<ChronoField>();
      PlotRun plotRun0 = new PlotRun(arrayList0);
      PlotRun plotRun1 = new PlotRun(plotRun0);
      assertTrue(plotRun1.equals((Object)plotRun0));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArrayList<ChronoField> arrayList0 = new ArrayList<ChronoField>();
      PlotRun plotRun0 = new PlotRun(arrayList0);
      Iterator iterator0 = plotRun0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayList<ChronoField> arrayList0 = new ArrayList<ChronoField>();
      PlotRun plotRun0 = new PlotRun(arrayList0);
      // Undeclared exception!
      try { 
        plotRun0.remove(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      PlotRun plotRun0 = new PlotRun(linkedHashSet0);
      // Undeclared exception!
      try { 
        plotRun0.add((-1), (Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to jahuwaldt.plot.PlotDatum
         //
         verifyException("jahuwaldt.plot.PlotRun", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ArrayList<ChronoField> arrayList0 = new ArrayList<ChronoField>();
      PlotRun plotRun0 = new PlotRun(arrayList0);
      // Undeclared exception!
      try { 
        plotRun0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRun0.set((-1), (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
