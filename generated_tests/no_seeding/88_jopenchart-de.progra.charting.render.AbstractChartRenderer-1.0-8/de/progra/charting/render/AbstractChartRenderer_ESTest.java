/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 13:36:32 GMT 2019
 */

package de.progra.charting.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.PointToPixelTranslator;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.BarChartRenderer;
import de.progra.charting.render.PieChartRenderer;
import de.progra.charting.render.PlotChartRenderer;
import de.progra.charting.render.RadarChartRenderer;
import de.progra.charting.render.RowColorModel;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.text.DecimalFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChartRenderer_ESTest extends AbstractChartRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "9~^1+(YoVUZkEgi%x'j", "");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(objectChartDataModel0);
      pieChartRenderer0.setCoordSystem(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "E^R[x+_~P", "9~^1+(YoVUZkEgi%x'j");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, editableChartDataModel0);
      EditableChartDataModel editableChartDataModel1 = new EditableChartDataModel();
      pieChartRenderer0.setChartDataModel(editableChartDataModel1);
      assertEquals(0.0, editableChartDataModel1.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<RxV~SZ", "E<RxV~SZ");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      AffineTransform affineTransform0 = pieChartRenderer0.getTransform(6041);
      assertNull(affineTransform0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<Rx+_~Z", "9~^1+(YoVUZkEgi%x'j");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      PointToPixelTranslator pointToPixelTranslator0 = coordSystem0.getPointToPixelTranslator((-1326));
      pieChartRenderer0.setPointToPixelTranslator(pointToPixelTranslator0);
      PointToPixelTranslator pointToPixelTranslator1 = pieChartRenderer0.getPointToPixelTranslator();
      assertSame(pointToPixelTranslator1, pointToPixelTranslator0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<Rx+_~Z", "E<Rx+_~Z");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      CoordSystem coordSystem1 = pieChartRenderer0.getCoordSystem();
      assertTrue(coordSystem1.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      PlotChartRenderer plotChartRenderer0 = new PlotChartRenderer(coordSystem0, editableChartDataModel0);
      CoordSystem coordSystem1 = plotChartRenderer0.getCoordSystem();
      assertEquals(15, coordSystem1.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, (ChartDataModel) null);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(objectChartDataModel0);
      objectChartDataModel0.setManualScale(true);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<RxV~SZ", "E<RxV~SZ");
      defaultChartDataModel0.setAutoScale(true);
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertFalse(chartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<Rx+_~Z", "9~^1+(YoVUZkEgi%x'j");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      defaultChartDataModel0.setMinimumColumnValue(20);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertEquals(0, chartDataModel0.getDataSetNumber());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMinimumColumnValue((-4304.490412));
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (DecimalFormat) null, false, false, true);
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, editableChartDataModel0);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertEquals((-4304.490412), chartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setMaximumColumnValue(1.5707963267948966);
      BarChartRenderer barChartRenderer0 = new BarChartRenderer((CoordSystem) null, objectChartDataModel0);
      ChartDataModel chartDataModel0 = barChartRenderer0.getChartDataModel();
      assertFalse(chartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMaximumColumnValue((-1088.2895849));
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[][] intArray0 = new int[2][1];
      String[] stringArray0 = new String[2];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(intArray0, intArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "9~^1+(YoVUZkEgi%x'j", "9~^1+(YoVUZkEgi%x'j");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, objectChartDataModel0);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertFalse(chartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      Rectangle rectangle0 = pieChartRenderer0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "E<Rx+_~Z", "9~^1+(YoVUZkEgi%x'j");
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(coordSystem0, defaultChartDataModel0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      pieChartRenderer0.setBounds(rectangle0);
      Rectangle rectangle1 = pieChartRenderer0.getBounds();
      assertEquals(0, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      Rectangle rectangle0 = new Rectangle(2035, (-1552));
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      pieChartRenderer0.setBounds(rectangle0);
      Rectangle rectangle1 = pieChartRenderer0.getBounds();
      assertEquals((-776.0), rectangle1.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Rectangle rectangle0 = new Rectangle(1, 1, 1, 1);
      pieChartRenderer0.setBounds(rectangle0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      pieChartRenderer0.renderChart(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      // Undeclared exception!
      try { 
        pieChartRenderer0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        pieChartRenderer0.renderChart(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(defaultChartDataModel0);
      RowColorModel rowColorModel0 = pieChartRenderer0.getRowColorModel();
      assertNull(rowColorModel0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      PointToPixelTranslator pointToPixelTranslator0 = pieChartRenderer0.getPointToPixelTranslator();
      assertNull(pointToPixelTranslator0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      BarChartRenderer barChartRenderer0 = new BarChartRenderer((CoordSystem) null, objectChartDataModel0);
      Dimension dimension0 = barChartRenderer0.getPreferredSize();
      assertEquals(Integer.MIN_VALUE, dimension0.height);
      assertEquals(Integer.MIN_VALUE, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      RowColorModel rowColorModel0 = RowColorModel.getInstance(editableChartDataModel0);
      pieChartRenderer0.setRowColorModel(rowColorModel0);
      assertEquals(0, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer((ChartDataModel) null);
      // Undeclared exception!
      try { 
        radarChartRenderer0.getTransform(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(editableChartDataModel0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Rectangle rectangle0 = new Rectangle(1, 1);
      pieChartRenderer0.setBounds(rectangle0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      pieChartRenderer0.render(graphics2D0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer((ChartDataModel) null);
      CoordSystem coordSystem0 = radarChartRenderer0.getCoordSystem();
      assertNull(coordSystem0);
  }
}
