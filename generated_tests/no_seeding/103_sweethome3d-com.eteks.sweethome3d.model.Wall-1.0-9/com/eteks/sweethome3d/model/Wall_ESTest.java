/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 18:36:43 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.model.Wall;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Wall_ESTest extends Wall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), 2.0F);
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Wall wall0 = new Wall(2131.37F, 2131.37F, 0.0F, 2131.37F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float(2.0F);
      Wall wall1 = new Wall((-1.0F), 2462.3F, 1371.1F, 1603.0F, (-1.9946282F));
      wall1.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      Float float1 = new Float((-1334.0404));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(2066);
      wall0.getHeight();
      wall1.setYEnd((-2060.278F));
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(0.0F, 2.0F, 4136.5522F, 1106.414F);
      wall0.setWallAtEnd(wall0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("- {O$d<[Q", (PropertyChangeListener) null);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Wall wall0 = new Wall((-1726.2351F), 92.0F, 92.0F, 1181.4F, 1181.4F);
      wall0.containsWallEndAt(92.0F, 92.0F, (-1175.0294F));
      wall0.intersectsRectangle(3970.0F, 92.0F, (-97.449F), (-17.7722F));
      wall0.setXStart(3970.0F);
      Wall wall1 = new Wall(1181.4F, 1181.4F, (-1726.2351F), 1181.4F, 92.0F, (-17.7722F));
      Float float0 = new Float(1181.4F);
      wall1.setArcExtent(float0);
      wall1.getYArcCircleCenter();
      try { 
        Float.valueOf("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Wall wall0 = new Wall((-2476.0F), 899.79F, 308.0F, 308.0F, 899.79F);
      wall0.getYArcCircleCenter();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
      Integer integer0 = new Integer(141);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Wall wall0 = new Wall(8.66155F, 8.66155F, 14.047F, 14.047F, 14.047F);
      wall0.containsPoint(8.66155F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall0);
      Float.sum(14.047F, 14.047F);
      Float float0 = new Float((double) 14.047F);
      wall1.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.getLeftSideColor();
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 3567.116F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(0.01F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.getRightSideTexture();
      Wall wall2 = wall1.getWallAtStart();
      wall2.getWallAtStart();
      wall2.getLeftSideColor();
      wall1.setYEnd(0.01F);
      wall2.getWallAtEnd();
      wall1.getPoints();
      wall0.getLevel();
      wall1.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Wall wall0 = new Wall((-0.23082232F), 13.057834F, (-0.23082232F), 13.057834F, (-0.23082232F), (-1322.608F));
      wall0.containsWallStartAt((-0.23082232F), 13.057834F, (-0.23082232F));
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(13.057834F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-0.23082232F));
      wall0.getLeftSideShininess();
      wall0.isTrapezoidal();
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall0.intersectsRectangle(13.057834F, (-621.0801F), 0.0F, 0.0F);
      Wall wall2 = new Wall((-1322.608F), 1064.228F, 1999.8364F, 1.0F, (-621.0801F));
      Integer integer0 = new Integer((-1886));
      wall2.setRightSideColor(integer0);
      wall2.getRightSideColor();
      wall2.getLeftSideColor();
      wall2.getPoints();
      wall2.getLevel();
      wall2.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), (-793.628F), (-793.628F), 1.0F, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      wall0.getPoints();
      wall0.isTrapezoidal();
      wall0.getPoints();
      Wall wall1 = wall0.clone();
      wall0.getPoints();
      wall1.getPoints();
      Float float0 = new Float(1394.2827677720409);
      Float.max((-2104.9F), 1.0F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
      wall1.setHeightAtEnd(float0);
      wall0.getPattern();
      wall0.getLeftSideTexture();
      wall1.setLeftSideTexture((HomeTexture) null);
      wall0.getHeightAtEnd();
      wall1.getPattern();
      wall0.isTrapezoidal();
      wall0.getRightSideColor();
      wall1.getHeightAtEnd();
      wall1.getYArcCircleCenter();
      wall1.setArcExtent((Float) null);
      Integer integer0 = new Integer((-217));
      Integer.compare(13, 13);
      wall1.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      Integer integer0 = new Integer(734);
      wall1.setLeftSideColor(integer0);
      wall0.containsWallStartAt((-6771.0F), 3444, (-1.0F));
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Wall wall0 = new Wall((-791.9307F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-791.9307F), (-791.9307F), (-791.9307F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2528.6204162296085));
      Float.sum((-1.0F), 2.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle((-1.0F), 2.0F, (-1.0F), (-791.9307F));
      wall1.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 1.0F, 0.0F, 1.0F, 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("X_START", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "X_START", "`Mi)g,p(", object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 3567.116F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      Float.min(0.0F, 257);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(0.0F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.getRightSideTexture();
      wall1.intersectsRectangle(0.0F, (-1212.5947F), 1494.75F, (-1.0F));
      wall1.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)123;
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-67);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=6L7");
      Wall wall0 = new Wall(2.0F, 0.0F, 2.0F, 0.0F, 9.566072F, (-1322.608F));
      wall0.containsWallStartAt(2.0F, 0.0F, 2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(9.566072F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess(9.566072F);
      Object object0 = new Object();
      wall0.getLength();
      wall0.getLeftSideColor();
      Float float0 = new Float((float) (byte)7);
      wall0.setHeight(float0);
      wall0.setYStart((-996.55F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-1212.5947F));
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.setXEnd(2.0F);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(2.0F, (-1.0F), (-329.952F), 2.0F);
      wall0.getRightSideColor();
      Wall wall1 = wall0.getWallAtStart();
      wall1.getLeftSideColor();
      wall1.setYEnd(3317.3906F);
      wall0.getWallAtEnd();
      wall1.getWallAtEnd();
      wall1.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Wall wall0 = new Wall(1701.2389F, 1701.2389F, (-85.006F), 1701.2389F, 1701.2389F);
      wall0.setYEnd(1701.2389F);
      try { 
        Integer.valueOf("W||)SwJ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"W||)SwJ\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      float float0 = 0.15182696F;
      Integer integer0 = new Integer(257);
      Float float1 = new Float(0.01F);
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      wall0.containsWallEndAt(410.73563F, 7.0F, 225.0F);
      MockURL.getFtpExample();
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Float float0 = new Float((double) 225.0F);
      Float.sum(0.0F, 0.0F);
      Float.sum(225.0F, 410.73563F);
      wall0.setHeight(float0);
      wall0.setYStart((-2480.486F));
      wall0.getRightSideColor();
      Integer integer0 = new Integer((-1017));
      wall0.setLeftSideColor(integer0);
      wall0.getArcExtent();
      wall0.getYEnd();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, (-793.628F), 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.move((-1175.0294F), 3602.11F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("HLKPpBKC", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("ELEVATION", propertyChangeListenerProxy0);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("HLKPpBKC", propertyChangeListenerProxy1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("HLKPpBKC", "#Ssb", "!ggz]", object2);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object1, "", "", propertyChangeEvent0);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      float float0 = 410.73563F;
      float float1 = 225.0F;
      float float2 = (-2504.265F);
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      String string0 = ">S{,";
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      float float3 = 0.0F;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        resourceURLContent0.getJAREntryName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Content isn't a JAR entry
         //
         verifyException("com.eteks.sweethome3d.tools.URLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(3444);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(2.0F, (-6771.0F), (-1110.4281F));
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2215.4038F, (-1366.7802F));
      wall0.setThickness((-1366.7802F));
      wall0.getLeftSideColor();
      Integer.getInteger("Y(<:7s]A6,x+", (Integer) null);
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      MockURL.getFtpExample();
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Float float0 = new Float((double) 225.0F);
      Float.sum(0.0F, 0.0F);
      Float.sum(225.0F, 410.73563F);
      wall0.setHeight(float0);
      wall0.setYStart((-2480.486F));
      wall0.getRightSideColor();
      Integer integer0 = new Integer((-1017));
      wall0.setLeftSideColor(integer0);
      wall0.getHeightAtEnd();
      wall0.setThickness(0.0F);
      wall0.getArcExtent();
      wall0.getHeight();
      wall0.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Wall wall0 = new Wall(5543.7F, 5543.7F, 1370.64F, 1370.64F, (-78.970535F), 5543.7F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$.", propertyChangeListener0);
      Object object0 = new Object();
      wall0.setYEnd(5543.7F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "com.eteks.sweethome3d.tools.ResourceURLContent", object0, wall0);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getYStart();
      wall0.getStartPointToEndPointDistance();
      Wall wall1 = new Wall(1370.64F, (-1924.0F), 1.0F, 1.0F, (-78.970535F));
      wall0.setWallAtStart(wall1);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Wall wall2 = new Wall(0.0F, 1925.12F, 0.0F, 0.01F, (-1.0F), 1925.12F);
      wall2.getLevel();
      wall1.isAtLevel((Level) null);
      wall2.getLeftSideShininess();
      wall2.getArcExtent();
      wall2.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 2.0F);
      wall0.containsPoint((-3323.9617F), 14.047F, 2.0F);
      wall0.setXStart(14.047F);
      wall0.getLeftSideColor();
      wall0.move(2.0F, (-3323.9617F));
      Wall wall1 = wall0.clone();
      wall0.getXArcCircleCenter();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      wall1.addPropertyChangeListener((PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall$Property", propertyChangeListenerProxy0);
      Object object0 = new Object();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Object object1 = new Object();
      wall1.getLength();
      wall0.getLeftSideColor();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "", propertyChangeListenerProxy1, (Object) null);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Wall wall0 = new Wall(5543.7F, 5543.7F, 1370.64F, 1370.64F, (-78.970535F), 5543.7F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$.", propertyChangeListener0);
      Object object0 = new Object();
      wall0.setYEnd(5543.7F);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("m6+nP4%jt-Bk", propertyChangeListenerProxy0);
      Object object1 = new Object();
      Wall wall1 = wall0.clone();
      wall1.getLevel();
      wall0.setLevel((Level) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy1);
      wall0.setYStart(5543.7F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Wall wall0 = new Wall((-791.93884F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = wall0.clone();
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 2.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle((-1.0F), 2.0F, (-1.0F), (-791.93884F));
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint(2.0F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setHeight(float0);
      wall1.containsWallEndAt(1590.0F, 1590.0F, 2.0F);
      wall0.setWallAtStart(wall0);
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, 682.45F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Wall wall1 = new Wall(2.0F, (-4419.0F), (-1061.1775F), (-1.0F), 1661.4194F, 0.0F);
      wall1.containsWallStartAt(0.0F, 0.1F, (-1322.608F));
      wall1.setLeftSideShininess((-1061.1775F));
      Wall wall2 = wall0.clone();
      wall2.setLeftSideShininess((-1212.948F));
      wall2.setWallAtEnd(wall0);
      wall0.setLeftSideShininess(0.1F);
      wall1.getLeftSideShininess();
      wall2.setXEnd(632.53754F);
      wall1.getLevel();
      wall0.intersectsRectangle(14.047F, (-1212.948F), 0.1F, 0.1F);
      wall0.setLevel((Level) null);
      wall0.getHeight();
      wall2.setHeight((Float) null);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      Wall wall1 = new Wall((-1212.5947F), 1137.959F, (-1212.5947F), 1137.959F, (-2697.8657F));
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall0.getXEnd();
      wall0.setXEnd(2.0F);
      wall1.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1369.1987F), (-1212.5947F), (-1.0F));
      wall1.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall1.containsPoint(272.0F, 0.0F, 1.0F);
      Wall.Property.values();
      wall1.containsWallStartAt((-3944.1F), 1137.959F, 1.0F);
      wall0.getYStart();
      Wall.Property.valueOf("X_END");
      Integer integer0 = new Integer(2693);
      wall0.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Float float0 = new Float(9.566072F);
      Wall wall0 = new Wall(2.0F, 700.397F, (-1024), 700.397F, (-1024), (-1.0F));
      wall0.getThickness();
      wall0.getArcExtent();
      Integer integer0 = new Integer((-1197));
      wall0.getLeftSideColor();
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float(2.0F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer((byte)7);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(0.1F, (-728.3816F), 0.1F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      float float0 = 700.397F;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      float float1 = 1346.35F;
      Wall wall0 = new Wall(1480.0F, 1346.35F, (-737.998F), (-2036.884F), 699.397F, 1168.0F);
      Integer integer0 = new Integer(2093);
      wall0.setLeftSideColor(integer0);
      Float float2 = new Float((-4455.0F));
      wall0.setArcExtent(float2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.intersectsRectangle((-1.0F), (-1865.134F), (-3322.9995F), 2.0F);
      wall0.getWallAtStart();
      Wall wall1 = new Wall(16.047F, 697, (-1.0F), (-274.5919F), (-1.0F));
      wall1.setWallAtEnd((Wall) null);
      wall0.getRightSideColor();
      Wall wall2 = new Wall(1.0F, 1.0F, 75.62347F, (-1.0F), 3422.24F, 1493.0F);
      wall2.getLeftSideColor();
      wall0.containsPoint(1075.018F, 3422.24F, 1.0F);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 2.0F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess((-3322.9995F));
      wall0.getLeftSideColor();
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float0 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float0);
      wall1.containsPoint(1201.4902F, 14.047F, 1201.4902F);
      wall0.getLevel();
      wall1.setXStart(0.0F);
      wall1.setThickness(520.5F);
      Float float1 = new Float((double) (-3322.9995F));
      wall0.setArcExtent(float0);
      wall1.getPoints();
      wall0.setLeftSideShininess(2.0F);
      wall0.intersectsRectangle(0.0F, 0.1F, 341.77F, 520.5F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.getThickness();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Wall wall0 = new Wall((-1726.2351F), 92.0F, 92.0F, 1181.4F, 1181.4F);
      wall0.containsWallEndAt(92.0F, 92.0F, (-1175.0294F));
      wall0.intersectsRectangle(3970.0F, 92.0F, (-97.449F), (-17.7722F));
      wall0.setXStart(3970.0F);
      wall0.getWallAtStart();
      try { 
        Float.valueOf(":U;u:HU");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Wall wall0 = new Wall(700.397F, 700.397F, (-1657.5886F), 1168.0F, 1480.0F, 193.101F);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      wall0.move((-1.0F), 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("HEIGHT", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall1 = wall0.clone();
      wall1.getXEnd();
      wall1.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, (-2548.4F), 0.0F);
      Integer integer0 = Integer.valueOf(33);
      wall0.setRightSideColor(integer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      wall0.containsWallEndAt(0.0F, (-1547.3464F), 2.0F);
      wall0.getLength();
      Wall.Property.values();
      wall0.getYStart();
      wall0.setXEnd((-1547.3464F));
      wall0.getYArcCircleCenter();
      wall0.getStartPointToEndPointDistance();
      wall0.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 1255.78F, 0.0F, (-1406.049F), (-1.0F));
      Float float0 = new Float(1255.78F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(1297);
      Integer integer1 = new Integer(1297);
      wall0.setLeftSideColor(integer1);
      wall0.containsWallStartAt(2.0F, 0.1F, 0.0F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Wall wall0 = new Wall(822.156F, 822.156F, 822.156F, (-312.05F), 822.156F);
      wall0.getXArcCircleCenter();
      wall0.setThickness(4210.79F);
      Wall.Property.values();
      wall0.getRightSideTexture();
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Wall wall0 = new Wall(1701.2389F, (-518.1267F), (-85.006F), 1701.2389F, 1.0F);
      wall0.setYEnd((-518.1267F));
      wall0.getWallAtStart();
      try { 
        Integer.valueOf("W||)SwJ");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"W||)SwJ\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      int int0 = 257;
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      wall0.getYArcCircleCenter();
      try { 
        Float.valueOf("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      wall0.getPoints();
      wall1.setLeftSideShininess(0.01F);
      wall0.intersectsRectangle(0.01F, 0.0F, 0.0F, 0.01F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.getThickness();
      wall0.getArcExtent();
      wall0.getThickness();
      Integer integer1 = new Integer(2987);
      wall0.setRightSideColor(integer1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, 23.665842F, (-1212.5947F));
      Float float0 = new Float(23.665842F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.setThickness(0.0F);
      wall0.containsWallStartAt(23.665842F, 23.665842F, 697);
      wall0.getYStart();
      wall0.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 3593.791F);
      Integer integer0 = new Integer(257);
      wall0.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      wall0.getPoints();
      Wall wall1 = new Wall(0.01F, 0.81916296F, 257, 6392.254F, (-8.142178F), 0.0F);
      wall0.getLevel();
      wall1.isTrapezoidal();
      wall0.getLeftSideShininess();
      Wall.Property.values();
      wall1.getHeight();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      List<Wall> list1 = Wall.clone(list0);
      Wall.clone(list1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Integer integer0 = new Integer((-1024));
      Float float0 = new Float(9.566072F);
      Float float1 = new Float(14.047F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.removeFirstOccurrence(float1);
      Wall.clone((List<Wall>) linkedList0);
      Wall wall0 = new Wall(2.0F, 700.397F, (-1024), 700.397F, 0.01F, (-1.0F));
      wall0.getThickness();
      wall0.getArcExtent();
      Integer integer1 = new Integer((-1024));
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("z&!Gd+N^I,z{!o9g#", "", resourceURLContent0, (-1.0F), (-980.25F), "NhASzJS`eP/g");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Wall wall0 = new Wall((-791.9307F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-791.9307F), (-791.9307F), (-791.9307F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 2.0F);
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle((-1.0F), 2.0F, (-1.0F), (-791.9307F));
      wall0.getRightSideColor();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint((-3323.9617F), 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.getLeftSideColor();
      Wall wall1 = wall0.clone();
      wall0.getXArcCircleCenter();
      Object object0 = new Object();
      wall1.setLeftSideColor((Integer) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Object object1 = new Object();
      wall1.getLength();
      wall0.getLeftSideColor();
      wall0.setYStart((-2056.0603F));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(0.0F, 2.0F, 0.0F, 1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint(0.0F, 0.0F, 0.0F);
      Wall.Property.values();
      Level level0 = new Level("`FP6T", (-28.84F), (-793.628F), (-1.0F));
      wall0.isAtLevel(level0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float1 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float1);
      Float.sum(682.45F, (-3322.9995F));
      Float float2 = new Float((double) (-903.78174F));
      wall1.setArcExtent(float2);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      float float3 = new Float(14.047F);
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle((-903.78174F), (-3322.9995F), (-3322.9995F), (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.containsPoint((-503.2296F), 14.047F, (-903.78174F));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.sum((-276.085F), (-3322.9995F));
      wall0.getHeight();
      wall1.setArcExtent((Float) null);
      wall0.setThickness(682.45F);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.intersectsRectangle(3422.24F, (-1968.6575F), 2.0F, 2.0F);
      Wall wall2 = wall0.getWallAtStart();
      wall1.setWallAtEnd(wall2);
      wall1.getRightSideColor();
      wall2.getLeftSideColor();
      wall1.containsPoint(3422.24F, 0.0F, (-401.18F));
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), 2.0F);
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.getLevel();
      wall0.setXStart(Float.POSITIVE_INFINITY);
      wall0.setThickness(Float.POSITIVE_INFINITY);
      Wall wall1 = wall0.clone();
      wall1.move(0.0F, (-1.0F));
      wall0.getLeftSideColor();
      Integer integer0 = new Integer(2145662602);
      Integer integer1 = Integer.getInteger("FLOOR_THICKNESS", 2);
      wall1.setLeftSideColor(integer1);
      wall0.getPoints();
      wall0.setWallAtEnd(wall1);
      wall1.getPoints();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-67);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=6L7");
      Wall wall0 = new Wall(2.0F, 0.0F, 2.0F, 0.0F, 9.566072F, (-1322.608F));
      Wall wall1 = wall0.clone();
      wall1.containsWallStartAt(2.0F, 0.0F, 2.0F);
      wall0.setWallAtEnd(wall1);
      wall0.setLeftSideShininess((-1322.608F));
      wall1.setLeftSideShininess(9.566072F);
      wall1.setWallAtEnd(wall0);
      wall0.setLeftSideShininess(9.566072F);
      wall0.getLeftSideShininess();
      wall1.setXEnd(9.566072F);
      wall1.getLevel();
      wall0.intersectsRectangle((-1322.608F), 2265.0F, (-1726.2351F), (-1.0F));
      wall0.setLevel((Level) null);
      wall1.setRightSideShininess(2265.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
      wall1.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Wall wall0 = new Wall((-791.9307F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-791.9307F), (-791.9307F), (-791.9307F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 2.0F);
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle((-1.0F), 2.0F, (-1.0F), (-791.9307F));
      wall0.getRightSideColor();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.move(272.0F, 830.7097F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y_START", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "com.eteks.sweethome3d.tools.TemporaryURLContent", wall1, "com.eteks.sweethome3d.tools.TemporaryURLContent");
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      Wall wall2 = new Wall(2.0F, 1107.076F, 1107.076F, 408.0F, 830.7097F);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy0, "com.eteks.sweethome3d.tools.TemporaryURLContent", "Y_START", wall2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      wall2.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getYStart();
      wall0.getStartPointToEndPointDistance();
      Wall wall3 = new Wall(2.0F, 0.0F, 54.86727F, (-753.08105F), 0.1F);
      wall0.setWallAtStart(wall1);
      wall2.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Wall wall0 = new Wall((-1328.3313F), (-1328.3313F), (-1328.3313F), (-1328.3313F), 1218.1F, 1999.7F);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint(2.0F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(3422.24F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float1 = new Float((-3235.5F));
      Float float2 = new Float((double) 2.0F);
      wall1.setHeightAtEnd(float2);
      Float.sum(682.45F, 0.1F);
      Float float3 = new Float(3.141592653589793);
      Float float4 = new Float((-1212.948F));
      wall1.setArcExtent(float4);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtEnd();
      wall0.getXEnd();
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-734.0F), 3422.24F, 0.0F, 3422.24F);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.setRightSideShininess(14.047F);
      Wall wall3 = wall0.getWallAtStart();
      wall3.getLevel();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.intersectsRectangle(321.01794F, 1106.414F, (-98.21626F), (-98.21626F));
      Wall wall1 = new Wall(1.0F, (-1.0F), (-1.0F), (-1.0F), 1.0F, 1810.0F);
      wall0.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Wall wall2 = wall0.getWallAtEnd();
      wall2.containsPoint((-1.0F), (-1.0F), (-793.628F));
      Wall.Property.values();
      wall0.getXArcCircleCenter();
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(3422.24F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float1 = new Float(2.0F);
      wall1.setHeightAtEnd(float1);
      Float.sum(2.0F, 0.1F);
      Float float2 = new Float(3.141592653589793);
      Float float3 = new Float((-1212.948F));
      wall1.setArcExtent(float3);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtEnd();
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-734.0F), 3422.24F, 0.0F, 3422.24F);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.setRightSideShininess(2.0F);
      Wall wall3 = wall0.getWallAtStart();
      wall3.getLevel();
      wall3.getLength();
      wall1.getRightSideShininess();
      wall3.getLength();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float1 = new Float(14.047F);
      wall1.setHeightAtEnd(float1);
      Float.sum(682.45F, (-3322.9995F));
      Float float2 = new Float((double) 14.047F);
      wall1.setArcExtent(float2);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall0.intersectsRectangle(14.047F, 0.054654844F, 0.0F, (-1129.318F));
      Wall wall3 = wall0.getWallAtStart();
      wall0.setWallAtEnd(wall2);
      wall3.getRightSideColor();
      wall3.getLeftSideColor();
      wall1.containsPoint((-1968.6575F), 0.054654844F, (-3322.9995F));
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2215.4038F, (-1366.7802F));
      wall0.getLeftSideColor();
      Integer.getInteger("Y(<:7s]A6,x+", (Integer) null);
      wall0.setRightSideColor((Integer) null);
      wall0.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Wall wall0 = new Wall((-25.0482F), (-25.0482F), 0.0F, (-25.0482F), 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      wall1.setWallAtStart(wall0);
      Wall wall2 = wall1.clone();
      wall2.getXStart();
      wall2.getXEnd();
      wall1.getLeftSideTexture();
      wall0.intersectsRectangle(0.0F, (-5037.8594F), 122.7882F, 3593.791F);
      wall0.setWallAtEnd(wall1);
      Wall wall3 = wall2.clone();
      wall3.getRightSideColor();
      wall3.getLeftSideColor();
      wall2.containsPoint(0.0F, (-4184.4697F), 0.01F);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2215.4038F, (-1366.7802F));
      wall0.setLeftSideShininess((-2582.85F));
      wall0.getLeftSideShininess();
      wall0.isTrapezoidal();
      wall0.getHeight();
      wall0.setHeight((Float) null);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float0 = new Float((-1.0F));
      wall0.setHeightAtEnd((Float) null);
      wall1.containsPoint((-730.269F), 830.7097F, 2463.3F);
      wall1.getLevel();
      wall0.setXStart((-3216.0F));
      wall1.setThickness(0.0F);
      wall0.move(2136.226F, 830.7097F);
      wall1.getLeftSideColor();
      Integer integer0 = new Integer(2145662602);
      wall1.setLeftSideColor(integer0);
      wall1.getPoints();
      wall1.setWallAtEnd(wall1);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      wall0.getLeftSideShininess();
      wall1.getPoints();
      wall1.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, (byte)7, (byte)7, 9.566072F, (-1323.0F));
      wall0.containsWallStartAt((byte)7, (byte)7, (byte)7);
      wall0.setLeftSideShininess((-1323.0F));
      wall0.setLeftSideShininess(9.566072F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess(9.566072F);
      wall0.getLeftSideShininess();
      wall0.getPoints();
      wall0.setRightSideShininess((byte)7);
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), 2.0F);
      Float float0 = new Float((-1.0F));
      Wall wall1 = wall0.clone();
      wall1.setThickness(2.0F);
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      wall0.getWallAtEnd();
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Wall wall0 = new Wall(1479.3907F, 1479.3907F, 2.0F, 2.0F, 1168.0F, 0.0F);
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      float float0 = 0.0F;
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float1 = new Float(0.01F);
      wall0.setArcExtent(float1);
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(0.01F);
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1107.076F);
      Wall wall1 = new Wall(0.0F, 0.0F, 0.0F, (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      Float float1 = new Float((double) 0.0F);
      Float.sum(0.0F, 1107.076F);
      Float.sum((-793.628F), 729.7601F);
      wall0.setHeight(float1);
      wall0.setYStart((-1940.0881F));
      wall0.getRightSideColor();
      Integer integer0 = new Integer(33);
      wall0.setLeftSideColor(integer0);
      wall0.getHeightAtEnd();
      wall1.setThickness(351.06F);
      wall0.getLevel();
      wall0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Wall wall0 = new Wall((-791.9307F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-791.9307F), (-791.9307F), (-791.9307F), 3319.5F, 3319.5F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum(3319.5F, 2.0F);
      wall0.setThickness(262.0F);
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("o6* v>", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Integer integer0 = new Integer(697);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Integer.divideUnsigned(697, 697);
      wall0.setLeftSideColor(integer0);
      wall0.setRightSideShininess((-1.0F));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float(0.0);
      wall0.setArcExtent(float0);
      wall0.getYStart();
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setHeightAtEnd(float0);
      wall0.getHeightAtEnd();
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Integer integer0 = new Integer((-1024));
      Float float0 = new Float(9.566072F);
      Float float1 = new Float(14.047F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      Wall wall0 = new Wall(2.0F, 700.397F, (-1024), (-2753.482F), 0.01F, (-1.0F));
      Wall wall1 = wall0.clone();
      wall1.getThickness();
      wall0.getArcExtent();
      wall0.getThickness();
      Integer integer1 = new Integer(2987);
      wall0.getLeftSideColor();
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 0.0F, 3358.0F, 3358.0F);
      Float float0 = new Float(0.0F);
      Float float1 = new Float(5.0897264E7);
      wall0.setArcExtent(float1);
      Integer integer0 = new Integer((-2075));
      Integer integer1 = new Integer(697);
      wall0.setLeftSideColor(integer1);
      wall0.containsWallStartAt((-2075), (-2075), 697);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Level level0 = new Level((String) null, 0.0F, 0.0F, (-2127.0F));
      level0.setFloorThickness((-793.628F));
      wall0.setLevel(level0);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(2155.0F, 682.45F, 0.0F, 0.0F);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.595F));
      Float float0 = new Float((-1.0F));
      Wall wall1 = new Wall(1930.5953F, 2851.578F, (-1212.595F), 2.0F, 2851.578F);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall0.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle((-1.0F), 2.0F, 2.0F, 2.0F);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.getPoints();
      wall2.setRightSideShininess(4764.0F);
      wall0.getLevel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Integer integer0 = new Integer((-556));
      Integer integer1 = new Integer((-556));
      wall2.setLeftSideColor(integer1);
      wall2.setRightSideShininess(4764.0F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(23.665842F, (-1.0F), 697);
      wall0.getLeftSideTexture();
      wall0.getPattern();
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Wall wall0 = new Wall((-865.398F), 0.1F, 700.397F, 888.0F, (-865.398F), 1615.569F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$.", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("$.", propertyChangeListenerProxy0);
      Object object0 = new Object();
      wall0.setYEnd(651.8247F);
      Object object1 = new Object();
      Object object2 = new Object();
      Wall wall1 = wall0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "$.", object2, wall1);
      propertyChangeEvent0.setPropagationId(object2);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("$.", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getYStart();
      wall0.getStartPointToEndPointDistance();
      Wall wall2 = new Wall((-78.970535F), 700.397F, 1696.0127F, 9.566072F, 888.0F);
      wall1.setWallAtStart(wall0);
      wall2.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float0 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, (-3322.9995F));
      Float float1 = new Float((double) (-903.78174F));
      Float.min(3422.24F, 682.45F);
      wall1.setArcExtent(float1);
      wall0.setThickness(3.0F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall2.getXStart();
      wall1.getXEnd();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle((-903.78174F), 3.0F, 1032.8253F, (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.containsPoint((-503.2296F), 14.047F, 0.0F);
      wall1.containsWallEndAt(0.0F, 1032.8253F, (-1.0F));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(2.0F, (-1.0F), 697);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      float float0 = 410.73563F;
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      MockURL.getFtpExample();
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Float float1 = new Float((double) 225.0F);
      wall0.setHeightAtEnd(float1);
      Float.sum((-2504.265F), 2550.4336F);
      Float float2 = new Float(1046.262871);
      Float float3 = new Float(1545.7191F);
      wall0.setArcExtent(float3);
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      Wall wall2 = wall1.getWallAtEnd();
      wall0.getXEnd();
      wall2.getLeftSideTexture();
      float float4 = (-3630.33F);
      wall1.intersectsRectangle(46.1687F, (-3630.33F), 643.73F, 1545.7191F);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      float float0 = (-1.0F);
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float1 = new Float((-1.0F));
      Float.sum(9.0F, 1730.4796F);
      Float float2 = new Float((double) (-1.0F));
      float float3 = (-1212.948F);
      Float float4 = new Float(0.0F);
      wall0.setArcExtent(float2);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getWallAtEnd();
      wall0.getLeftSideTexture();
      float float5 = (-2084.0F);
      // Undeclared exception!
      try { 
        wall1.intersectsRectangle((-654.017F), 2.0F, (-2084.0F), 3202.7083F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float0 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, (-3322.9995F));
      Float float1 = new Float((double) (-903.78174F));
      wall1.setArcExtent(float1);
      Float.sum(3162.82F, (-3216.0F));
      Float.sum(3162.82F, 1.0F);
      wall0.setHeight(float0);
      wall0.setYStart(2.0F);
      wall0.getRightSideColor();
      Integer integer0 = new Integer(18);
      Wall wall2 = wall0.clone();
      wall2.setLeftSideColor((Integer) null);
      wall1.getHeightAtEnd();
      wall1.setThickness((-3216.0F));
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, (-793.628F), 0.0F, 1106.414F);
      wall1.setWallAtEnd(wall0);
      wall0.getLeftSideColor();
      wall0.setLeftSideColor((Integer) null);
      wall0.getPoints();
      wall1.setWallAtEnd(wall0);
      wall1.getPoints();
      wall1.getLeftSideShininess();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 830.7097F, 0.0F, 830.7097F, (-1.0F));
      wall0.getArcExtent();
      wall0.setWallAtStart(wall0);
      wall0.setHeightAtEnd((Float) null);
      wall0.getLevel();
      wall0.setXStart(830.7097F);
      wall0.setThickness((-1.0F));
      wall0.move(2136.226F, 830.7097F);
      wall0.setLeftSideColor((Integer) null);
      wall0.containsWallStartAt(2809.2139F, 2136.226F, 1102.2533F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F);
      wall0.getPoints();
      Level level0 = new Level("WALL_AT_END", 1.0F, 0.1F, (-2011.3608F));
      level0.setElevation(0.0F);
      wall0.setLevel(level0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("h_Yk!", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setLeftSideShininess(1.0F);
      Float float0 = new Float(0.0);
      Wall wall1 = new Wall(0.01F, 0.1F, 663.5F, 100.0F, 0.0F, 0.01F);
      Level level1 = wall0.getLevel();
      wall0.isAtLevel(level1);
      wall0.getLeftSideShininess();
      wall1.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      float float0 = (-592.6736F);
      Wall wall0 = new Wall(666.2706F, 3375.82F, 3375.82F, 3375.82F, (-592.6736F));
      Wall wall1 = wall0.clone();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float1 = (-774.99744F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LEFT_SIDE_TEXTURE");
      float float2 = 0.0F;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-774.99744F), 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall1.setRightSideTexture(homeTexture0);
      wall0.setLeftSideShininess(666.2706F);
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-1.0F), 0.0F, (-1.0F), 0.0F);
      wall0.getArcExtent();
      wall0.setWallAtStart(wall0);
      wall0.setHeightAtEnd((Float) null);
      wall0.getLevel();
      wall0.setXStart(0.0F);
      wall0.setThickness(1.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall0.getWallAtStart();
      wall0.setWallAtStart(wall2);
      wall0.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(249.311F, (-1.0F), (-1123.58F), (-1.0F));
      wall2.getRightSideColor();
      wall2.getLeftSideColor();
      wall2.getPoints();
      wall1.getLevel();
      wall1.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-1212.5947F));
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.setXEnd(2.0F);
      wall0.getXStart();
      Wall wall1 = new Wall((-242.1F), 13.057834F, 2.0F, 13.057834F, 0.0F);
      Float float0 = new Float(0.0F);
      Float float1 = new Float((double) 13.057834F);
      wall1.setArcExtent(float1);
      wall0.setWallAtEnd(wall1);
      wall0.setArcExtent(float0);
      wall1.getWallAtEnd();
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.setWallAtEnd(wall0);
      wall1.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      wall0.containsPoint(2.0F, 415.9638F, 110.71896F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall wall1 = wall0.clone();
      linkedList0.push(wall0);
      linkedList0.add(wall1);
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
      wall0.getThickness();
      Wall wall2 = wall0.clone();
      wall2.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.setRightSideShininess((-1.0F));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(3422.24F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float1 = new Float(2.0F);
      wall1.setHeightAtEnd(float1);
      Float.sum(2.0F, 0.1F);
      Float float2 = new Float((double) 2.0F);
      Float float3 = new Float((-1212.948F));
      wall1.setArcExtent(float3);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtEnd();
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-734.0F), 3422.24F, 2.0F, 3422.24F);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.setRightSideShininess(2.0F);
      Wall wall3 = wall0.getWallAtStart();
      wall3.getLevel();
      Wall wall4 = wall2.getWallAtStart();
      wall4.setHeight(float2);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1107.076F);
      Wall wall1 = new Wall(0.0F, 0.0F, 0.0F, (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1107.076F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, 0.0F, 0.0F, 1107.076F);
      wall1.setWallAtEnd(wall0);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint(0.0F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setThickness(0.0F);
      wall0.containsWallStartAt(23.665842F, (-1.0F), 697);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(2.0F, 2.0F, 2.0F, 1106.414F);
      Wall wall1 = wall0.clone();
      wall1.setYEnd(0.0F);
      wall0.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.containsPoint(30.30592F, 0.0F, (-793.628F));
      Wall.Property.values();
      Float float1 = new Float(1.0F);
      wall1.setHeightAtEnd(float1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1331.0007F), (-1.0F), (-1.0F));
      Float float0 = new Float((double) (-1.0F));
      Float.max((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall1.setXStart((-1.0F));
      wall0.getRightSideTexture();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(8);
      Integer integer1 = new Integer(697);
      wall0.setLeftSideColor(integer1);
      wall0.containsWallStartAt((-140.85144F), (-1.0F), (-767.3F));
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float0 = new Float((-1.0F));
      wall0.setHeightAtEnd((Float) null);
      wall1.containsPoint((-730.269F), 830.7097F, 2463.3F);
      wall1.getLevel();
      wall0.setXStart((-3216.0F));
      wall1.setThickness(0.0F);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall0.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.054654844F, (-1968.6575F), 1895.49F, 1.0F);
      Wall wall2 = wall0.getWallAtStart();
      wall1.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall2.getLeftSideColor();
      wall2.containsPoint((-1.0F), 0.0F, (-2584.8376F));
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 39.4F, 510.07425F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall(2.0F, 0.0F, (-1.0F), 510.07425F, 0.0F);
      Float float0 = new Float(0.0);
      Float.sum((-1212.5947F), 2.0F);
      wall0.setArcExtent(float0);
      wall1.setThickness((-353.4426F));
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall1.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall1.setXEnd((-1086.0563F));
      wall1.intersectsRectangle((-404.948F), 1106.414F, (-1.0F), (-1.0F));
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Wall wall0 = new Wall(2015.7291F, 2015.7291F, 2015.7291F, 2015.7291F, 0.0F);
      wall0.setYStart(2015.7291F);
      Float float0 = new Float(2015.7291F);
      Float.max(0.0F, 0.0F);
      Level level0 = new Level("*@6", 2966.9358F, (-1.0F), 2618.9727F);
      Level level1 = level0.clone();
      wall0.setLevel(level1);
      Float.min(2015.7291F, 2194.9602F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1331.0007F), (-1.0F), (-1.0F));
      Float float0 = new Float((double) (-1.0F));
      Float.max((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall0.getRightSideTexture();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      wall1.setLeftSideShininess((-1415.0104F));
      wall0.getLeftSideShininess();
      Wall wall2 = wall1.clone();
      wall2.setXEnd(1633.0033F);
      wall2.intersectsRectangle(0.0F, 0.0F, (-1.0F), (-1331.0007F));
      wall1.getHeight();
      wall2.setYStart((-1331.0007F));
      Float float1 = new Float(1.0E-10);
      Float.sum((-1.0F), 2415.1243F);
      wall1.setHeight(float1);
      wall1.isTrapezoidal();
      Wall.Property.values();
      wall2.getRightSideTexture();
      wall0.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint(2.0F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall0);
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, 682.45F);
      Float float1 = new Float((double) 14.047F);
      wall1.setArcExtent(float1);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle(14.047F, 2.0F, 2.0F, (-1.0026615F));
      wall0.getRightSideColor();
      wall2.getLeftSideColor();
      wall1.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent((Float) null);
      Integer integer0 = new Integer(697);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.setLeftSideColor(integer0);
      wall0.containsWallStartAt(2.0F, (-1.0F), 697);
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Wall wall0 = new Wall(57.47F, 57.47F, (-1212.5947F), 1209.7F, (-793.628F));
      Float float0 = new Float(0.1F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor((Integer) null);
      wall0.containsPoint(697, 697, (-1212.5947F));
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-1212.5947F));
      Float float0 = new Float(2.0F);
      wall0.setArcExtent(float0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("o6* v>", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.setRightSideShininess((-1.0F));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      Float float1 = new Float(145.13020734559632);
      wall1.setHeight(float1);
      Integer integer0 = new Integer(697);
      Integer integer1 = new Integer(697);
      Integer.compare(697, 4);
      wall1.setLeftSideColor(integer1);
      wall1.getWallAtEnd();
      wall1.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float1 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float1);
      Float.sum(682.45F, (-3322.9995F));
      Float float2 = new Float((double) (-903.78174F));
      wall1.setArcExtent(float2);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall0.getLeftSideTexture();
      wall1.intersectsRectangle((-2640.5496F), 3267.753F, (-1022.82F), 1.0F);
      Wall wall2 = wall0.getWallAtStart();
      wall1.setWallAtEnd(wall0);
      wall2.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint(0.0F, 14.047F, 1.0F);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, (-1.0F));
      wall0.getArcExtent();
      wall0.setWallAtStart(wall0);
      wall0.setHeightAtEnd((Float) null);
      wall0.getLevel();
      wall0.setXStart(0.0F);
      wall0.setLeftSideShininess(2463.3F);
      wall0.getLeftSideShininess();
      wall0.intersectsRectangle((-1212.5947F), 0.0F, 2463.3F, (-1726.2351F));
      wall0.getHeight();
      Wall wall1 = wall0.clone();
      wall1.getArcExtent();
      wall0.setHeight((Float) null);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Wall wall0 = new Wall(2487.806F, (-1212.5947F), 2487.806F, 2487.806F, 1.0F);
      Integer integer0 = new Integer(1074);
      wall0.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, (-1212.5947F), 2.0F, (-1.0F), (-1212.5947F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1368.0803F), (-1212.5947F), (-1.0F));
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.setYStart((-1.0F));
      wall0.move(1743.444F, 0.0F);
      Integer integer0 = new Integer((-1163));
      wall0.setLeftSideColor((Integer) null);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.containsWallStartAt(2.0F, (-279.1791F), 1.0F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      float float0 = 2.0F;
      float float1 = 682.45F;
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint(1700.435F, 1700.435F, (-4161.8022F));
      wall0.setXStart(2.0F);
      wall0.getLeftSideColor();
      wall0.move(1700.435F, 1700.435F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      wall1.getWallAtStart();
      wall1.setWallAtEnd((Wall) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("EXBt=:$WoCA^OE", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("EXBt=:$WoCA^OE", propertyChangeListenerProxy1);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(")", "EXBt=:$WoCA^OE", (Object) null, ")");
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-86);
      byteArray0[5] = (byte) (-67);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=6L7");
      Wall wall0 = new Wall(2.0F, 0.0F, 2.0F, 0.0F, 9.566072F, (-1322.608F));
      wall0.containsWallStartAt(2.0F, 0.0F, 2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(9.566072F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess(9.566072F);
      wall0.setXEnd((byte)13);
      wall0.getLevel();
      wall0.intersectsRectangle((-1322.608F), 2265.0F, (-1726.2351F), (-1.0F));
      wall0.setLevel((Level) null);
      wall0.setRightSideShininess(2265.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
      wall0.isTrapezoidal();
      Random.setNextRandom((byte)125);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Wall wall0 = new Wall(700.397F, 700.397F, (-1657.5886F), 1168.0F, 1480.0F, 193.101F);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      wall0.move((-1.0F), 0.0F);
      wall0.intersectsRectangle((-1.0F), (-1657.5886F), (-793.628F), (-6269.0117F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.push(wall0);
      linkedList0.add(wall0);
      Wall.clone((List<Wall>) linkedList0);
      wall0.getThickness();
      wall0.getArcExtent();
      wall0.getHeightAtEnd();
      wall0.containsWallStartAt(0.01F, 0.01F, 1168.0F);
      wall0.containsWallStartAt((-793.628F), 451.64487F, 1168.0F);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(3422.24F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float1 = new Float(2.0F);
      wall1.setHeightAtEnd(float1);
      wall1.move(2.0F, 2.0F);
      Float.sum(2.0F, 0.1F);
      Float float2 = new Float((double) 2.0F);
      Float float3 = new Float((-1212.948F));
      wall1.setArcExtent(float3);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtEnd();
      wall2.setRightSideColor((Integer) null);
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-734.0F), 3422.24F, 2.0F, 3422.24F);
      wall0.getRightSideColor();
      wall0.containsWallStartAt(3422.24F, (-2219.92F), (-734.0F));
      wall1.getLevel();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      MockURL.getFtpExample();
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Float float0 = new Float((double) 225.0F);
      Float.sum(0.0F, 0.0F);
      Float.sum(225.0F, 410.73563F);
      wall0.setHeight(float0);
      wall0.setYStart((-2480.486F));
      wall0.getRightSideColor();
      Integer integer0 = new Integer((-1017));
      Integer.sum((-1017), (-1017));
      wall0.setLeftSideColor(integer0);
      wall0.getHeightAtEnd();
      wall0.setThickness(0.0F);
      wall0.getArcExtent();
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3567.116F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(0.01F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.getRightSideTexture();
      wall1.intersectsRectangle(0.0F, (-1212.5947F), 1494.75F, (-1.0F));
      wall1.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Wall wall0 = new Wall((-0.23082232F), 13.057834F, (-0.23082232F), 13.057834F, (-0.23082232F), (-1322.608F));
      wall0.containsWallStartAt((-0.23082232F), 13.057834F, (-0.23082232F));
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(13.057834F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-0.23082232F));
      wall0.getLeftSideShininess();
      wall0.intersectsRectangle((-1322.608F), (-0.23082232F), (-1726.2351F), (-1.0F));
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-1366.7802F));
      wall0.getLeftSideColor();
      Integer.getInteger("Y(<:7s]A6,x+", (Integer) null);
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Wall wall0 = new Wall((-0.23082232F), 13.057834F, (-0.23082232F), 13.057834F, (-0.23082232F), (-1322.608F));
      wall0.containsWallStartAt((-0.23082232F), 13.057834F, (-0.23082232F));
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(13.057834F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-0.23082232F));
      wall0.getLeftSideShininess();
      Float float0 = new Float((double) (-1322.608F));
      wall0.setHeightAtEnd(float0);
      wall0.isTrapezoidal();
      Float float1 = wall0.getHeight();
      wall0.setHeight(float1);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Wall wall0 = new Wall(862.9F, 13.057834F, 862.9F, 1672.0F, (-0.23082232F), 862.9F);
      Float float0 = new Float((double) 862.9F);
      Float float1 = new Float((double) (-0.23082232F));
      wall0.setArcExtent(float1);
      Wall wall1 = wall0.clone();
      wall0.getRightSideTexture();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      wall0.getLength();
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getThickness();
      Float float2 = new Float(1662.6306F);
      wall0.getThickness();
      Integer integer0 = new Integer((-2829));
      wall1.getHeight();
      wall1.isTrapezoidal();
      wall1.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, (-793.628F), 0.0F, 1106.414F);
      wall1.setWallAtEnd(wall0);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint((-793.628F), 0.0F, 0.0F);
      Wall.Property.values();
      wall0.getHeightAtEnd();
      wall0.clone();
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float1 = new Float(14.047F);
      wall1.setHeightAtEnd(float1);
      Float.sum(682.45F, (-3322.9995F));
      Float float2 = new Float((double) 14.047F);
      wall1.setArcExtent(float2);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle(14.047F, (-3322.9995F), (-3322.9995F), (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.containsPoint((-503.2296F), 14.047F, 14.047F);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1212.5947F), 1222.2007F, (-1.0F));
      Float float0 = new Float(1129.7404F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt((-1.0F), 1129.7404F, (-470.471F));
      Wall wall1 = wall0.clone();
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      Float float0 = new Float(3422.24F);
      wall0.setHeight(float0);
      wall0.getLeftSideColor();
      Float float1 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.sum((-276.085F), (-3322.9995F));
      Float float2 = wall0.getHeight();
      wall1.setArcExtent(float2);
      wall0.setThickness(682.45F);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.move((-1850.2639F), 1711.0F);
      wall0.getLeftSideColor();
      Integer integer0 = new Integer(2145662602);
      wall0.setLeftSideColor((Integer) null);
      wall0.getPoints();
      wall1.setWallAtEnd(wall0);
      wall1.getPoints();
      wall0.getLeftSideShininess();
      wall1.getLength();
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.setThickness(0.0F);
      wall0.containsWallStartAt(23.665842F, (-1.0F), 697);
      wall0.getYStart();
      wall0.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Wall wall1 = new Wall(3422.24F, 3422.24F, 3422.24F, 2.0F, 2.0F);
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(3457);
      wall1.setLeftSideColor(integer1);
      wall1.setThickness((-199.3F));
      wall0.containsWallStartAt(2.0F, (-199.3F), (-2527.1938F));
      wall1.getYStart();
      Integer integer2 = new Integer(1);
      wall0.setLeftSideColor(integer2);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 0.0F, (-793.628F), 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.intersectsRectangle(321.01794F, 1106.414F, (-98.21626F), (-98.21626F));
      Wall wall1 = new Wall(1.0F, (-1.0F), (-1.0F), (-1.0F), 1.0F, 1810.0F);
      wall0.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Wall wall2 = wall0.getWallAtEnd();
      wall2.containsPoint((-1.0F), (-1.0F), 2.0F);
      Wall.Property.values();
      wall0.getXArcCircleCenter();
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      float float0 = (-592.6736F);
      Wall wall0 = new Wall(666.2706F, 3375.82F, 3375.82F, 3375.82F, (-592.6736F));
      Wall wall1 = wall0.clone();
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float1 = (-774.99744F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LEFT_SIDE_TEXTURE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, (-774.99744F), 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall1.setRightSideTexture(homeTexture0);
      wall0.setLeftSideShininess(666.2706F);
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.getArcExtent();
      wall0.setWallAtStart(wall0);
      Float float0 = new Float((-1.0F));
      wall0.setHeightAtEnd((Float) null);
      wall0.containsPoint((-730.269F), 830.7097F, (-730.269F));
      wall0.getLevel();
      wall0.setXStart((-3216.0F));
      wall0.setThickness(0.0F);
      wall0.move(2136.226F, 830.7097F);
      wall0.getLeftSideColor();
      Integer integer0 = new Integer(2145662602);
      wall0.setThickness(0.0F);
      wall0.setLeftSideColor(integer0);
      wall0.getPoints();
      wall0.setWallAtEnd(wall0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 14.047F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(14.047F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.sum((-276.085F), (-3322.9995F));
      wall0.getHeight();
      wall1.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      Integer integer0 = new Integer(17);
      wall1.getPoints();
      Integer.compare(4, 1730);
      wall0.setLeftSideColor((Integer) null);
      wall1.setRightSideShininess(1730);
      wall0.getLevel();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      wall0.getPoints();
      wall1.setLeftSideShininess(0.01F);
      wall0.intersectsRectangle(0.01F, 0.0F, 0.0F, 0.01F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.getThickness();
      wall1.getThickness();
      wall0.getLevel();
      Random.setNextRandom(257);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F);
      wall0.getPoints();
      Level level0 = new Level("WALL_AT_END", 1.0F, 0.1F, (-2011.3608F));
      level0.setElevation(0.0F);
      wall0.setLevel(level0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("h_Yk!", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setLeftSideShininess(1.0F);
      Float float0 = new Float(0.0);
      wall0.setArcExtent(float0);
      wall0.getPoints();
      wall0.setLeftSideShininess(0.01F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getThickness();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setXStart(2.0F);
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.getWallAtEnd();
      wall0.setLeftSideShininess(2.0F);
      wall0.getRightSideColor();
      wall1.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float(2.0F);
      Integer integer0 = new Integer((byte)7);
      wall0.setLeftSideColor((Integer) null);
      wall0.containsWallStartAt(0.1F, (-728.3816F), 0.1F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Wall wall0 = new Wall(8.66155F, 8.66155F, 14.047F, 14.047F, 14.047F);
      wall0.containsPoint(14.047F, 14.047F, 8.66155F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall0);
      Float.sum(14.047F, 14.047F);
      Float float0 = new Float((double) 14.047F);
      wall1.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      wall2.intersectsRectangle(14.047F, 8.66155F, 8.66155F, 1737.31F);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.getPoints();
      Wall wall3 = wall0.getWallAtEnd();
      wall3.getWallAtStart();
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Wall wall0 = new Wall((-1212.5947F), (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float((-1506.0F));
      wall0.setArcExtent(float0);
      wall0.setLeftSideShininess((-2100.002F));
      Integer integer0 = new Integer((byte)7);
      wall0.setLeftSideColor((Integer) null);
      wall0.containsWallStartAt(0.1F, (-725.512F), 0.1F);
      wall0.getYStart();
      wall0.getPoints();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float0 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, (-3322.9995F));
      Float float1 = new Float((double) (-903.78174F));
      wall1.setArcExtent(float1);
      wall0.setThickness(3.0F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall2.getXStart();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle((-903.78174F), 3.0F, 1032.8253F, (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.containsPoint((-503.2296F), 14.047F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      Float float1 = new Float(145.13020734559632);
      wall1.setHeight(float1);
      Integer integer0 = new Integer(697);
      wall1.getLeftSideTexture();
      Integer integer1 = new Integer(697);
      Integer integer2 = new Integer(18);
      wall0.setLeftSideColor(integer2);
      wall0.setRightSideShininess(0.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 3593.791F);
      Integer integer0 = new Integer(257);
      wall0.setLeftSideColor(integer0);
      Wall wall1 = new Wall((-1828.3488F), (-0.054654844F), 3593.791F, (-332.0F), 257, (-1.0F));
      Wall wall2 = wall0.clone();
      wall2.getHeight();
      wall2.setRightSideShininess(257);
      wall2.getXArcCircleCenter();
      wall1.getStartPointToEndPointDistance();
      wall0.getRightSideColor();
      wall1.getLevel();
      wall2.getStartPointToEndPointDistance();
      wall2.getRightSideColor();
      Wall wall3 = new Wall(912.48F, 3593.791F, (-1.0F), 0.1F, 0.1F, (-1111.7145F));
      wall0.getRightSideTexture();
      wall3.setPattern((TextureImage) null);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-1322.608F), 0.0F, 1.0F, 889.32F);
      wall0.setThickness(889.32F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      wall1.setXEnd(0.5840526F);
      wall0.getXStart();
      wall1.getXEnd();
      Wall wall2 = wall0.getWallAtEnd();
      wall2.getLeftSideTexture();
      wall1.getLeftSideTexture();
      wall0.getRightSideColor();
      wall2.getWallAtStart();
      wall0.getLeftSideColor();
      wall0.setYEnd(889.32F);
      wall0.getWallAtEnd();
      Integer integer0 = new Integer((-547));
      wall1.setLeftSideColor(integer0);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Wall wall0 = new Wall((byte)7, (byte)7, 0.1F, (-1.0F), (-1.0F));
      Float float0 = new Float(0.0);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.getYStart();
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setHeightAtEnd(float0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 682.45F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(3422.24F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float1 = new Float((-3235.5F));
      Float float2 = new Float((double) 2.0F);
      wall1.setHeightAtEnd(float2);
      Float.sum(682.45F, 0.1F);
      Float float3 = new Float(3.141592653589793);
      Float float4 = new Float((-1212.948F));
      wall1.setArcExtent(float4);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtEnd();
      wall0.getXEnd();
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-734.0F), 3422.24F, 0.0F, 3422.24F);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.setRightSideShininess(2.0F);
      Wall wall3 = wall0.getWallAtStart();
      wall3.getLevel();
      wall3.getLength();
      wall2.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Wall wall0 = new Wall((-0.16666667F), (-0.16666667F), 1180.727F, (-0.16666667F), (-0.16666667F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.move(272.0F, 830.7097F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y_START", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall$Property", propertyChangeListener1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Kw@8@dh7zb)U7", "com.eteks.sweethome3d.model.Wall$Property", object0, wall0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy1);
      wall1.setYStart((-1640.6959F));
      wall1.getPattern();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1331.0007F));
      Float float0 = new Float((double) (-1.0F));
      Float.max((-1.0F), 0.0F);
      wall0.setXStart((-1.0F));
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall0.getRightSideTexture();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      wall1.getLength();
      wall0.setWallAtStart(wall1);
      wall1.getYEnd();
      wall1.setPattern((TextureImage) null);
      wall1.getStartPointToEndPointDistance();
      wall0.setLeftSideColor((Integer) null);
      wall1.setRightSideColor((Integer) null);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.isTrapezoidal();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall1.getLevel();
      Float float1 = new Float(0.054654844F);
      Float.min((-426.9478F), (-1.0F));
      wall1.setArcExtent(float1);
      wall0.setLeftSideTexture((HomeTexture) null);
      wall1.clone();
      wall0.getWallAtEnd();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Wall wall0 = new Wall(8.66155F, 8.66155F, 14.047F, 14.047F, 14.047F);
      wall0.containsPoint(8.66155F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall0);
      Float.sum(14.047F, 14.047F);
      Float float0 = new Float((double) 14.047F);
      wall1.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle(14.047F, 8.66155F, 8.66155F, 1737.3105F);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.getPoints();
      wall2.getLevel();
      wall2.getRightSideTexture();
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, (-793.628F), 0.0F, 1106.414F);
      wall0.getLeftSideColor();
      wall0.containsPoint((-793.628F), 0.0F, 0.0F);
      Wall.Property.values();
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1331.0007F), (-1.0F), (-1.0F));
      Float float0 = new Float((double) (-1.0F));
      Float.max((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall0.getRightSideTexture();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      wall1.getLength();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall0.getXEnd();
      wall1.getLeftSideTexture();
      wall1.getRightSideTexture();
      wall1.intersectsRectangle((-1331.0007F), (-2356.0F), (-768.0F), (-1.0F));
      Wall wall2 = wall1.clone();
      wall2.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.getPoints();
      wall1.getLevel();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1369.1987F), (-1212.5947F), (-1.0F));
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint(272.0F, 0.0F, 1.0F);
      Wall.Property.values();
      wall0.getHeightAtEnd();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), 2.0F);
      Float float0 = new Float((-1.0F));
      Wall wall1 = new Wall(2.0F, 2.0F, (-1.0F), (-1.0F), 7.0F);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.clone();
      wall2.getLength();
      wall2.setWallAtEnd(wall1);
      wall2.setWallAtStart(wall1);
      Float float1 = new Float((double) 3.0F);
      wall2.getThickness();
      wall0.getLeftSideTexture();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle(577.003F, 7.0F, 2.0F, (-1.0F));
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$62qKb");
      Wall wall0 = new Wall(9.566072F, (-726.6133F), (byte)7, 1.486836F, (-1.0F), (-1.0F));
      wall0.containsWallStartAt(2779.7976F, 1.486836F, (-1322.608F));
      wall0.setLeftSideShininess(2.2681084E-8F);
      wall0.setLeftSideShininess((byte)7);
      wall0.setWallAtEnd((Wall) null);
      wall0.setLeftSideShininess(0.1F);
      wall0.getLeftSideShininess();
      wall0.setXEnd(2265.0F);
      wall0.getLevel();
      wall0.intersectsRectangle(2403.6914F, 341.49F, 0.1F, 1.0F);
      wall0.setLevel((Level) null);
      wall0.getHeight();
      Float float0 = new Float(2403.6914F);
      wall0.setHeight(float0);
      wall0.isTrapezoidal();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "'R8[", (Content) null, (-726.6133F), (-1.0F), "", false);
      wall0.setPattern(catalogTexture0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(2.0F, (-1.0F), (-329.952F), 2.0F);
      wall0.getRightSideColor();
      Wall wall1 = wall0.getWallAtStart();
      wall1.getLeftSideColor();
      wall1.setYEnd(3317.3906F);
      Wall wall2 = wall0.getWallAtEnd();
      wall2.getPoints();
      wall1.getLevel();
      wall1.setLeftSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, 830.7097F, (-1.0F));
      wall0.getArcExtent();
      wall0.setWallAtStart(wall0);
      Float float0 = new Float((-1.0F));
      Float float1 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      Integer integer0 = new Integer(2);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt((-1.0F), (-728.3816F), 272.0F);
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.move(272.0F, 830.7097F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y_START", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Wall$Property", propertyChangeListener1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Kw@8@dh7zb)U7", "com.eteks.sweethome3d.model.Wall$Property", object0, wall0);
      wall0.getLevel();
      wall1.setLevel((Level) null);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy1);
      wall1.setYStart((-1640.6959F));
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float1 = new Float(14.047F);
      wall1.setHeightAtEnd(float1);
      Float.sum(682.45F, (-3322.9995F));
      Float float2 = new Float((double) 14.047F);
      wall1.setArcExtent(float2);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall2.intersectsRectangle(14.047F, (-3322.9995F), (-3322.9995F), (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.getPoints();
      Wall wall3 = wall1.getWallAtEnd();
      wall3.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(2.0F, (-1.0F), 697);
      float float1 = new Integer(697);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1.0F), 0.0F, (-4571.0F));
      wall0.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1369.1987F), (-1212.5947F), (-1.0F));
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.setYStart((-1.0F));
      wall0.containsPoint(272.0F, 0.0F, 1.0F);
      Wall.Property.values();
      wall0.getHeightAtEnd();
      Wall wall1 = wall0.clone();
      wall1.getWallAtEnd();
      wall1.setWallAtEnd((Wall) null);
      wall1.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), 2.0F);
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setWallAtEnd(wall0);
      wall0.getLeftSideTexture();
      wall0.getLeftSideTexture();
      wall0.getPoints();
      wall0.getLevel();
      Float float1 = new Float(628660.734673921);
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      wall0.getHeightAtEnd();
      wall0.setArcExtent((Float) null);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(23.665842F, (-1.0F), 697);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Wall wall0 = new Wall(249.311F, 2355.229F, (-793.628F), 1993.6796F, (-1781.2089F), 1993.6796F);
      wall0.move((-329.952F), (-1212.5947F));
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float float0 = new Float((-1.0F));
      wall0.setHeightAtEnd((Float) null);
      wall1.containsPoint((-730.269F), 830.7097F, 2463.3F);
      wall1.getLevel();
      wall0.setXStart((-3216.0F));
      wall1.setThickness(0.0F);
      wall0.move(2136.226F, 830.7097F);
      wall1.getLeftSideColor();
      Wall wall2 = wall0.clone();
      Integer integer0 = new Integer(2145662602);
      wall1.setLeftSideColor(integer0);
      wall1.getPoints();
      wall2.setWallAtEnd(wall1);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      wall0.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      Integer.compareUnsigned(257, 214);
      wall1.setLeftSideColor(integer0);
      Wall wall2 = new Wall(0.0F, 1925.12F, 0.0F, 0.01F, (-1.0F), 1925.12F);
      wall2.getLevel();
      wall1.isAtLevel((Level) null);
      wall2.getLeftSideShininess();
      wall2.getArcExtent();
      wall0.clone();
      wall0.containsWallEndAt(0.1F, 682.45F, 334.31F);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.containsPoint(2.0F, 2.0F, 2.0F);
      wall0.setXStart(2.0F);
      wall0.setThickness(2.0F);
      Wall wall1 = new Wall(2.0F, (-165.3F), (-118.98303F), 1842.998F, 0.0F);
      Wall wall2 = wall1.clone();
      wall0.setWallAtEnd(wall2);
      wall1.setWallAtStart(wall0);
      wall0.setXEnd((-165.3F));
      wall0.getXStart();
      wall2.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(2.0F, 794.3883F, 1.0F, (-2047.477F));
      Wall wall3 = wall0.clone();
      wall3.getRightSideColor();
      wall2.getWallAtStart();
      wall2.getLeftSideColor();
      wall0.setYEnd(3317.3906F);
      Wall wall4 = wall0.getWallAtEnd();
      wall4.getPoints();
      Wall wall5 = new Wall(3317.3906F, 20.56F, (-2024.4272F), 793.60516F, 1.0F);
      wall4.getLevel();
      wall4.setLeftSideColor((Integer) null);
      wall4.clone();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3567.116F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(0.01F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtStart(wall0);
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall1.getRightSideTexture();
      wall1.intersectsRectangle(0.0F, (-1212.5947F), 1494.75F, (-1.0F));
      wall1.getRightSideColor();
      wall1.getLeftSideColor();
      wall0.getPoints();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Wall wall0 = new Wall((-0.23082232F), 13.057834F, (-0.23082232F), 13.057834F, (-0.23082232F), (-1322.608F));
      wall0.containsWallStartAt((-0.23082232F), 13.057834F, (-0.23082232F));
      wall0.setLeftSideShininess((-1322.608F));
      wall0.setLeftSideShininess(13.057834F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-0.23082232F));
      float float0 = new Float((-1322.608F));
      Integer integer0 = new Integer(4626);
      Integer integer1 = Integer.getInteger((String) null, integer0);
      wall0.setLeftSideColor(integer1);
      wall0.containsWallStartAt(969.92F, 1164.9966F, 1815.3206F);
      Wall wall1 = wall0.getWallAtEnd();
      wall1.getYStart();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.0F, 0.01F, 3593.791F);
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(257);
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float(0.01F);
      wall0.setHeightAtEnd(float0);
      Float.sum(451.64487F, 3593.791F);
      Float float1 = new Float((double) 451.64487F);
      wall0.setArcExtent((Float) null);
      wall1.setWallAtEnd(wall0);
      Wall wall2 = new Wall(0.0F, 0.1F, 0.0F, (-336.6F), (-870.5F));
      wall2.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall2);
      wall2.getWallAtEnd();
      Float float2 = new Float((float) 257);
      wall1.getXEnd();
      wall2.getLeftSideTexture();
      wall1.intersectsRectangle((-1.0F), 1.0F, (-1816.361F), (-870.5F));
      wall0.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.getLeftSideColor();
      wall1.containsPoint(299.2F, 14.047F, (-114.3F));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent((Float) null);
      wall0.setThickness(2.0F);
      Wall wall1 = new Wall((-1212.5947F), 1137.959F, (-1212.5947F), 1137.959F, (-2697.8657F));
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall0.getXEnd();
      wall1.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-1369.1987F), (-1212.5947F), (-1.0F));
      wall1.setWallAtEnd(wall1);
      wall0.getRightSideColor();
      wall1.setHeight(float0);
      wall1.getLeftSideColor();
      wall1.containsPoint(272.0F, 0.0F, 1.0F);
      Wall.Property.values();
      Level level0 = new Level("`FP6T", 2.0F, 272.0F, (-3944.1F));
      wall1.isAtLevel(level0);
      wall1.getYEnd();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.containsWallStartAt(480.66F, 2.0F, 0.0F);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(0.0F, 2.0F, 0.0F, 1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      // Undeclared exception!
      wall0.containsPoint(0.0F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Wall wall0 = new Wall(23.665842F, 23.665842F, 23.665842F, (-1.0F), (-1212.5947F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(23.665842F, (-1.0F), 697);
      Level level0 = new Level("com.eteks.sweethome3d.model.Level", (-1212.5947F), 23.665842F, 23.665842F);
      Level level1 = level0.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 830.7097F, 272.0F, 0.0F, (-3216.0F), (-1.0F));
      wall0.move(272.0F, 830.7097F);
      Wall wall1 = wall0.clone();
      wall1.getXArcCircleCenter();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y_START", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      wall0.setLeftSideShininess(0.0F);
      wall0.intersectsRectangle(830.7097F, 794.62177F, (-1253.1334F), 1.0F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getThickness();
      wall1.getArcExtent();
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall0);
      wall0.getXStart();
      wall0.getXEnd();
      wall0.getLeftSideTexture();
      wall0.intersectsRectangle(0.0F, 2.0F, 0.0F, 1106.414F);
      wall0.setWallAtEnd(wall0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint(0.0F, 0.0F, 0.0F);
      Wall.Property.values();
      Wall wall1 = wall0.getWallAtStart();
      wall1.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint((-3322.9995F), 14.047F, (-903.78174F));
      wall0.setXStart(14.047F);
      wall0.setRightSideShininess(3422.24F);
      wall0.getLeftSideColor();
      wall0.getArcExtent();
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float float0 = new Float((-903.78174F));
      wall1.setHeightAtEnd(float0);
      wall1.containsPoint(1201.4902F, 682.45F, 1201.4902F);
      wall0.getLevel();
      wall1.setXStart(0.0F);
      wall1.setThickness(520.5F);
      wall1.move(2.0F, 1.0F);
      wall1.getLeftSideColor();
      Wall wall2 = wall0.clone();
      wall2.setLeftSideColor((Integer) null);
      wall2.getPoints();
      wall2.setWallAtEnd(wall1);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      wall1.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Wall wall0 = new Wall((-0.23082232F), 13.057834F, (-0.23082232F), 13.057834F, (-0.23082232F), (-0.23082232F));
      wall0.containsWallStartAt((-0.23082232F), 13.057834F, (-0.23082232F));
      wall0.setLeftSideShininess((-0.23082232F));
      wall0.setLeftSideShininess(13.057834F);
      wall0.setWallAtEnd(wall0);
      wall0.setLeftSideShininess((-0.23082232F));
      wall0.getLeftSideShininess();
      wall0.containsWallStartAt((-1212.948F), 13.057834F, 1214.1326F);
      wall0.getYStart();
      wall0.getYEnd();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Wall wall0 = new Wall(374.70627F, (-2364.514F), (-1665.27F), 2639.437F, (-1665.27F));
      Float float0 = Float.valueOf(374.70627F);
      Float.min((-1665.27F), (-1665.27F));
      wall0.setHeightAtEnd(float0);
      wall0.getStartPointToEndPointDistance();
      wall0.getLevel();
      wall0.isAtLevel((Level) null);
      wall0.setRightSideShininess(2639.437F);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, (-793.628F), 0.0F, 1106.414F);
      wall1.setWallAtEnd(wall0);
      wall0.getLeftSideColor();
      Wall wall2 = wall0.getWallAtEnd();
      wall2.getRightSideColor();
      wall0.getLeftSideColor();
      wall1.containsPoint((-793.628F), 1.0F, (-793.628F));
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Wall wall0 = new Wall((-2345.0928F), 0.0F, 0.0F, 0.0F, 571.0F, (-7484.9243F));
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 14.047F, 14.047F, 682.45F);
      wall0.containsPoint(2.0F, 14.047F, 14.047F);
      wall0.setXStart(14.047F);
      wall0.getLeftSideColor();
      Float float0 = new Float(682.45F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall0);
      wall1.setHeightAtEnd(float0);
      Float.sum(682.45F, 682.45F);
      Float float1 = new Float((double) 14.047F);
      wall1.setArcExtent(float1);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      Integer integer0 = new Integer(14);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallStartAt(2.0F, 0.1F, (-1050.7166F));
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Wall wall0 = new Wall(700.397F, 700.397F, (-1657.5886F), 1168.0F, 1480.0F, 193.101F);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      wall0.move((-1.0F), 0.0F);
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(1725);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1725, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Wall wall0 = new Wall((-791.9307F), 2.0F, 2.0F, 2.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      Wall wall1 = new Wall((-791.9307F), (-791.9307F), (-791.9307F), (-1.0F), (-1.0F));
      wall0.setWallAtStart(wall1);
      Float.sum(1106.414F, (-791.9307F));
      Float float0 = new Float(0.04960568621754646);
      wall1.setArcExtent(float0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      Wall wall2 = wall1.getWallAtEnd();
      wall1.setWallAtStart(wall2);
      Wall wall3 = wall1.getWallAtEnd();
      Wall wall4 = new Wall(0.0F, (-115.1696F), 0.0F, (-945.1F), 2629.8997F, (-1.0F));
      wall4.getXEnd();
      wall4.getLeftSideTexture();
      wall0.intersectsRectangle((-1.0F), (-115.1696F), 314.48322F, (-791.9307F));
      wall3.getRightSideColor();
      wall1.getLeftSideColor();
      wall4.getPoints();
      wall4.getLevel();
      Float float1 = new Float((double) 1106.414F);
      wall1.setHeight(float1);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(0.0F, (-793.628F), 0.0F, 1106.414F);
      wall1.setWallAtEnd(wall0);
      wall1.getRightSideColor();
      wall0.getLeftSideColor();
      wall0.containsPoint((-793.628F), 0.0F, 0.0F);
      Wall.Property.values();
      wall0.getHeightAtEnd();
      wall0.clone();
      wall0.setArcExtent((Float) null);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F);
      wall0.getPoints();
      Level level0 = new Level("WALL_AT_END", 1.0F, 0.1F, (-2011.3608F));
      level0.setElevation(0.0F);
      wall0.setLevel(level0);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("h_Yk!", (PropertyChangeListener) null);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setLeftSideShininess(1.0F);
      wall0.move(1.0F, (-1.0F));
      wall0.getLeftSideColor();
      Wall wall1 = wall0.clone();
      Integer integer0 = new Integer(18);
      wall0.setLeftSideColor(integer0);
      wall1.getPoints();
      wall0.setWallAtEnd(wall1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      wall0.removePropertyChangeListener((PropertyChangeListener) null);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Wall wall0 = new Wall((-793.628F), 2.0F, 2.0F, 0.0F, 2.0F);
      wall0.getRightSideTexture();
      wall0.setPattern((TextureImage) null);
      wall0.setThickness(1106.414F);
      Wall wall1 = new Wall((-793.628F), (-793.628F), (-793.628F), (-1.0F), (-1.0F));
      Float float0 = new Float((-2527.1938558639094));
      Float.sum((-1.0F), 0.0F);
      wall0.setArcExtent(float0);
      wall0.setThickness(1106.414F);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtStart(wall1);
      wall1.getXStart();
      wall1.getXEnd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      wall1.getLeftSideTexture();
      Float float1 = new Float(145.13020734559632);
      wall1.setHeight(float1);
      Integer integer0 = new Integer(697);
      Integer integer1 = new Integer(697);
      Integer.compare(697, 4);
      wall1.setLeftSideColor(integer1);
      wall0.setRightSideShininess(0.01F);
      wall1.getLevel();
      wall0.getPoints();
      assertEquals(1106.414F, wall0.getThickness(), 0.01F);
      
      wall1.clone();
      assertEquals((-793.628F), wall1.getXEnd(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Wall wall0 = new Wall(410.73563F, 225.0F, 410.73563F, (-2504.265F), 225.0F);
      MockURL.getFtpExample();
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Float float0 = new Float((double) 225.0F);
      Float.sum(410.73563F, 0.0F);
      Float.sum(225.0F, 410.73563F);
      wall0.setHeight(float0);
      Integer integer0 = new Integer(697);
      wall0.setLeftSideColor(integer0);
      wall0.setRightSideShininess((-1251.81F));
      assertEquals((-1251.81F), wall0.getRightSideShininess(), 0.01F);
  }
}
