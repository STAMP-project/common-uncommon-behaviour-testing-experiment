/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 12:44:34 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.DebugGraphics;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("OK", 2);
      Font font0 = Font.decode("OK");
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("krR:kZNB", 1, 2735, 2);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("OK");
      multiLineLabel0.setMarginWidth(1);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.paint((Graphics) null);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",aDR;>xmyp\"B'doG", 1, (-2113), 1);
      Font font0 = Font.decode("9uFy%3^5ZgQF");
      multiLineLabel0.setFont(font0);
      multiLineLabel0.paint(graphics0);
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(1, multiLineLabel0.getMarginWidth());
      assertEquals((-2113), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("P\"pI.");
      Font font0 = Font.decode("P\"pI.");
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(48, dimension0.width);
      assertEquals(35, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("OK");
      StyleContext styleContext0 = new StyleContext();
      Font font0 = styleContext0.getFont("OK", 1, (-1668));
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",aDR;>xmyp\"B'doG", 1, (-2113), 1);
      multiLineLabel0.newLabel("9uFy%3^5ZgQF");
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(1, multiLineLabel0.getMarginWidth());
      assertEquals((-2113), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      Font font0 = new Font("*W/]~16FlhY4Eareb", 2145, 2);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      Font font0 = new Font("*W/]~16FlhY4Eareb", 2145, 2);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("v");
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("OK", 0, 2);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.width);
      assertEquals(4, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      multiLineLabel0.setMarginWidth((-1));
      multiLineLabel0.getPreferredSize();
      assertEquals((-1), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("FKT+4Cw5+e", 0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      
      multiLineLabel0.setMarginHeight(0);
      multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 45, (-823));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-1646), dimension0.height);
      assertEquals(90, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("LEa{tyf", (-2306), 1146);
      Font font0 = Font.decode("xd.d4jUM<UdCwso8Q");
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(45, dimension0.width);
      assertEquals((-2306), multiLineLabel0.getMarginWidth());
      assertEquals(1146, multiLineLabel0.getMarginHeight());
      assertEquals(15, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("hxKu@5J-#e`d\nR");
      multiLineLabel0.max_width = (-2116);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-2116), dimension0.width);
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("LEa{tyf", (-2306), 1146);
      Font font0 = new Font("|4dd\u0004%c_pGSE,s", 1, 0);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals((-2306), multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.width);
      assertEquals(2, dimension0.height);
      assertEquals(1146, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      assertEquals(10, multiLineLabel0.getMarginWidth());
      
      multiLineLabel0.setMarginWidth(0);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.setMarginWidth((-14));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-14), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 10, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("LEa{tyf", 30, (-2306), 3);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(3, multiLineLabel0.getAlignment());
      assertEquals(30, multiLineLabel0.getMarginWidth());
      assertEquals((-2306), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel");
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("S;bgJd(XY8Ac", 3, 3, 3477);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(3477, int0);
      assertEquals(3, multiLineLabel0.getMarginHeight());
      assertEquals(3, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("LEa{tyf", (-2306), 1146);
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("_wn");
      multiLineLabel0.num_lines = 12;
      Font font0 = Font.decode("_wn");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont(font0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("u}Z&q3GI/dz|ia", (-1), (-1), (-1));
      String[] stringArray0 = new String[0];
      multiLineLabel0.lines = stringArray0;
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-277));
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("JRoI[cc'");
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 1232, 2, 1232);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, (-225), (-225));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Uq6^fen(AJt_=");
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics graphics0 = bufferedImage0.getGraphics();
      multiLineLabel0.paint(graphics0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",[DR>xmyp\"B'do6", 50, 50, 50);
      multiLineLabel0.setAlignment((-1359));
      assertEquals((-1359), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("+?;vPty&\"d}g%MBO", (-186));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-186), int0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("k", (-1159));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-1159), multiLineLabel0.getAlignment());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("OK");
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("l\"%ORI.rlP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v");
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",aDR;>xmyp\"B'doG", 1, (-2113), 1);
      Font font0 = Font.decode("9uFy%3^5ZgQF");
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals((-2113), multiLineLabel0.getMarginHeight());
      assertEquals(1, multiLineLabel0.getMarginWidth());
      assertEquals(1, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("P\"pI.");
      Color color0 = Color.YELLOW;
      multiLineLabel0.setForeground(color0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n");
      multiLineLabel0.setMarginHeight(104);
      assertEquals(104, multiLineLabel0.getMarginHeight());
  }
}
