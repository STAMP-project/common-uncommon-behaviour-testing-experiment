/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 00:37:43 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.ColorModel;
import jigl.image.InterpolationMethod;
import jigl.image.types.ColorImage;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedColorImage;
import jigl.image.types.InterpolatedGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterpolatedColorImage_ESTest extends InterpolatedColorImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(616, 616);
      int[] intArray0 = new int[8];
      interpolatedColorImage0.splat(0.0, 3.0, intArray0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedColorImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.splat(3934.84927146695, 0.0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[9];
      interpolatedColorImage0.splat((double) 0, intArray0);
      interpolatedColorImage0.accum((-0.5), 0.0, intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.accum(1.0, 2212.7418, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[9];
      interpolatedColorImage0.splat((double) 0, intArray0);
      Integer[] integerArray0 = interpolatedColorImage0.interp((float) 0, (-0.5F));
      assertEquals(3, integerArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(24, 24);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedColorImage0.setInterpolationMethod(interpolationMethod0);
      int[] intArray0 = new int[9];
      interpolatedColorImage0.splat((double) 0, 0.0, intArray0);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.copy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 643);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 2);
      interpolatedColorImage0.setPlane(2, interpolatedGrayImage0);
      assertEquals(0, interpolatedColorImage0.X());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[5];
      interpolatedColorImage0.splat((double) 0, 0.0, intArray0);
      interpolatedColorImage0.accum(0.0, intArray0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedColorImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(24, 24);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage((ColorImage) interpolatedColorImage0);
      assertEquals(ColorModel.RGB, interpolatedColorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(24, 24);
      int[] intArray0 = new int[3];
      interpolatedColorImage0.splat((double) 0, 0.0, intArray0);
      int[] intArray1 = interpolatedColorImage0.interp(0.0);
      assertEquals(3, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      InterpolatedColorImage interpolatedColorImage1 = interpolatedColorImage0.copy();
      assertEquals(0, interpolatedColorImage1.Y());
      assertEquals(0, interpolatedColorImage1.X());
      assertNotSame(interpolatedColorImage1, interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      // Undeclared exception!
      try { 
        interpolatedColorImage0.splat((double) 1709.0F, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 44);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage1.splat((double) 0, intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.splat((double) 1709.0F, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[9];
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      // Undeclared exception!
      try { 
        interpolatedColorImage1.splat(0.0, (double) 0, intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(11, 11);
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.splat((double) 11, (double) 11, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1180, 1180);
      // Undeclared exception!
      interpolatedColorImage0.setPlane(1180, interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      GrayImage grayImage0 = new GrayImage(41, 1);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.setPlane(41, grayImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 41
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      // Undeclared exception!
      try { 
        interpolatedColorImage0.setInterpolationMethod(interpolationMethod0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(25, 25);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      // Undeclared exception!
      try { 
        interpolatedColorImage1.interp((-1599.6F), (-1599.6F));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(24, 24);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.interp((float) 24, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(7, 7);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      // Undeclared exception!
      try { 
        interpolatedColorImage1.interp((double) 7);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(16, 16);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.interp((double) 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1000, 1000);
      // Undeclared exception!
      interpolatedColorImage0.copy();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 34);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        interpolatedColorImage1.accum(2758.32, intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.accum((double) 1, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(24, 24);
      int[] intArray0 = new int[9];
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      // Undeclared exception!
      try { 
        interpolatedColorImage1.accum((double) 24, (double) 0, intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.accum((double) 0.0F, (double) 0.0F, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(655, 655);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      InterpolatedColorImage interpolatedColorImage1 = null;
      try {
        interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      GrayImage[] grayImageArray0 = new GrayImage[0];
      interpolatedColorImage0.planes = grayImageArray0;
      InterpolatedColorImage interpolatedColorImage1 = null;
      try {
        interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(3694, 3694);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = null;
      try {
        interpolatedColorImage0 = new InterpolatedColorImage((-14), (-14));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(52, 52);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage((ColorImage) interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(33, 33);
      InterpolatedColorImage interpolatedColorImage1 = new InterpolatedColorImage(interpolatedColorImage0);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      // Undeclared exception!
      try { 
        interpolatedColorImage1.setInterpolationMethod(interpolationMethod0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jigl.image.types.GrayImage cannot be cast to jigl.image.types.InterpolatedGrayImage
         //
         verifyException("jigl.image.types.InterpolatedColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[9];
      interpolatedColorImage0.splat((double) 0, intArray0);
      InterpolatedColorImage interpolatedColorImage1 = interpolatedColorImage0.copy();
      assertNotSame(interpolatedColorImage1, interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      InterpolationMethod interpolationMethod0 = interpolatedColorImage0.getInterpolationMethod();
      assertEquals(InterpolationMethod.NEIGHBOR, interpolationMethod0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      // Undeclared exception!
      try { 
        interpolatedColorImage0.setPlane(619, (GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = null;
      try {
        interpolatedColorImage0 = new InterpolatedColorImage((ColorImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      int[] intArray0 = new int[5];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.accum(0.0, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.interp((double) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.interp((float) 0, (float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }
}
