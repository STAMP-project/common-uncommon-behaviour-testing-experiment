/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 14:50:38 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ListIterator;
import java.util.function.Predicate;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Mercenaries;
import src.Player;
import src.Retainers;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("C2");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("C2", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setLoyalVassals(0, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(0, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getPeasants();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, int0);
      
      fiefdoms0.setFiefdomCastles((-1));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setLoyalVassals(2173, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setMuslim(2173, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[6];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = 671.1779F;
      floatArray0[3] = 170.3F;
      floatArray0[4] = (-1.0F);
      floatArray0[5] = 0.0F;
      fiefdoms0.setShaderColor(floatArray0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new float[] {0.0F, 0.0F, 671.1779F, 170.3F, (-1.0F), 0.0F}, floatArray0, 0.01F);
      assertEquals(6, floatArray0.length);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)1;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new byte[] {(byte) (-1), (byte)50, (byte)61, (byte)1}, byteArray0);
      assertEquals(4, byteArray0.length);
      
      fiefdoms0.setMuslim((-253), false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyPersonalCastles(298);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyFiefdomCastles(298);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setRebelliousVassals((ArrayList<Vassals>) null);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      float[] floatArray1 = new float[0];
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      fiefdoms0.selectioncolor = byteArray0;
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setShaderColor(floatArray1);
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertEquals(0, floatArray1.length);
      assertNotSame(floatArray1, floatArray0);
      
      fiefdoms0.setMagyar(42, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList1);
      
      fiefdoms0.setMuslim(42, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getRebelliousVassals();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getViking();
      assertFalse(arrayList3.equals((Object)arrayList0));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMuslim();
      assertFalse(arrayList4.equals((Object)arrayList0));
      assertFalse(arrayList4.equals((Object)arrayList3));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList4.isEmpty());
      assertEquals(42, arrayList4.size());
      assertNotSame(arrayList4, arrayList0);
      assertNotSame(arrayList4, arrayList3);
      assertNotNull(arrayList4);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte) (-112);
      boolean boolean0 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)57, (byte) (-81), (byte) (-112)}, byteArray0);
      assertEquals(3, byteArray0.length);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyPersonalCastles(2259);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setFiefdomCastles(false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setRebelliousVassals(1, false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Mercenaries mercenaries0 = new Mercenaries();
      assertNull(mercenaries0.getLocation());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNull(mercenaries0.getLord());
      assertNotNull(mercenaries0);
      
      boolean boolean1 = arrayList0.add((Player) mercenaries0);
      assertFalse(boolean1 == boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(mercenaries0.getLocation());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNull(mercenaries0.getLord());
      assertTrue(boolean1);
      
      fiefdoms0.setVassalsList(arrayList0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setName("9!");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setMagyar((int) (byte) (-81), false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(arrayList2);
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(arrayList3);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getViking();
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(arrayList4);
      
      ArrayList<Vassals> arrayList5 = fiefdoms0.getRebelliousVassals();
      assertTrue(arrayList5.equals((Object)arrayList3));
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("9!", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotSame(arrayList5, arrayList3);
      assertNotNull(arrayList5);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(5);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(5, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(5, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(5, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      int int0 = (-40);
      Stream<String> stream0 = arrayList0.stream();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(stream0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "{w!64", "", (-40), false, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      
      Integer[] integerArray0 = new Integer[6];
      int int1 = 1;
      Integer integer0 = new Integer(1);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(1);
      assertTrue(integer1.equals((Object)int1));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(1, (int)integer1);
      assertNotNull(integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-40));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)int1));
      assertEquals((-40), (int)integer2);
      assertNotNull(integer2);
      
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int1);
      assertFalse(int1 == int0);
      assertFalse(integer3.equals((Object)int0));
      assertTrue(integer3.equals((Object)integer1));
      assertTrue(integer3.equals((Object)int1));
      assertFalse(integer3.equals((Object)integer2));
      assertTrue(integer3.equals((Object)integer0));
      assertEquals(1, (int)integer3);
      assertNotNull(integer3);
      
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      assertFalse(int0 == int1);
      assertFalse(integer4.equals((Object)integer1));
      assertFalse(integer4.equals((Object)integer3));
      assertFalse(integer4.equals((Object)int1));
      assertFalse(integer4.equals((Object)integer0));
      assertTrue(integer4.equals((Object)int0));
      assertTrue(integer4.equals((Object)integer2));
      assertEquals((-40), (int)integer4);
      assertNotNull(integer4);
      
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int1);
      assertFalse(integer5.equals((Object)int0));
      assertFalse(integer5.equals((Object)integer4));
      assertTrue(integer5.equals((Object)integer1));
      assertTrue(integer5.equals((Object)int1));
      assertTrue(integer5.equals((Object)integer0));
      assertFalse(integer5.equals((Object)integer2));
      assertTrue(integer5.equals((Object)integer3));
      assertFalse(int1 == int0);
      assertEquals(1, (int)integer5);
      assertNotNull(integer5);
      
      integerArray0[5] = integer5;
      Integer[] integerArray1 = arrayList0.toArray(integerArray0);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(6, integerArray1.length);
      assertEquals(6, integerArray0.length);
      assertSame(integerArray1, integerArray0);
      assertSame(integerArray0, integerArray1);
      assertNotNull(integerArray1);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setFiefdomCastles(false);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertFalse(arrayList1.contains(""));
      
      int int2 = new Integer(int1);
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int1 == int0);
      assertEquals(1, int2);
      
      fiefdoms0.setRebelliousVassals(int1, true);
      assertTrue(int1 == int2);
      assertFalse(int1 == int0);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains(""));
      
      int int3 = fiefdoms0.getValue();
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertTrue(int3 == int0);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertEquals((-40), int3);
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains(""));
      
      int int4 = fiefdoms0.getPeasants();
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("{w!64", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-40), fiefdoms0.getValue());
      assertEquals(0, int4);
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains(""));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking((-123), true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) (byte)0;
      floatArray0[1] = (float) (byte) (-120);
      floatArray0[2] = (float) (byte)0;
      fiefdoms0.shaderColor = floatArray0;
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim((-1704), true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      byteArray0[1] = (byte) (-120);
      fiefdoms0.selectioncolor = byteArray0;
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.selectioncolor = byteArray0;
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setValue(2066);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      
      String string0 = fiefdoms0.getOwner();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertNull(string0);
      
      fiefdoms0.setMagyar(1697, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      
      fiefdoms0.setPersonalCastles(true);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNotNull(arrayList0);
      
      Mercenaries mercenaries0 = new Mercenaries("^+[/ j$nrJL<", "w{Q0@Q@Tn.s\"7z@_[p");
      assertEquals("w{Q0@Q@Tn.s\"7z@_[p", mercenaries0.getLocation());
      assertEquals("^+[/ j$nrJL<", mercenaries0.getLord());
      assertEquals("vassal", mercenaries0.getRank());
      assertNull(mercenaries0.getFiefdom());
      assertNotNull(mercenaries0);
      
      Predicate<Object> predicate0 = Predicate.isEqual((Object) mercenaries0);
      assertEquals("w{Q0@Q@Tn.s\"7z@_[p", mercenaries0.getLocation());
      assertEquals("^+[/ j$nrJL<", mercenaries0.getLord());
      assertEquals("vassal", mercenaries0.getRank());
      assertNull(mercenaries0.getFiefdom());
      assertNotNull(predicate0);
      
      boolean boolean0 = arrayList0.removeIf(predicate0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals("w{Q0@Q@Tn.s\"7z@_[p", mercenaries0.getLocation());
      assertEquals("^+[/ j$nrJL<", mercenaries0.getLord());
      assertEquals("vassal", mercenaries0.getRank());
      assertNull(mercenaries0.getFiefdom());
      assertFalse(boolean0);
      
      arrayList0.clear();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setMuslim(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2066, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("YOoBI?7zdFeH");
      assertEquals("YOoBI?7zdFeH", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertEquals("YOoBI?7zdFeH", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(boolean0);
      
      fiefdoms0.setOwner("YOoBI?7zdFeH");
      assertEquals("YOoBI?7zdFeH", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("YOoBI?7zdFeH", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.setMuslim(arrayList1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setFiefdomCastles(true);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string0);
      
      fiefdoms0.setViking(3, false);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ListIterator<Intruders> listIterator0 = arrayList1.listIterator();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(listIterator0.hasNext());
      assertFalse(listIterator0.hasPrevious());
      assertNotNull(listIterator0);
      
      fiefdoms0.setLoyalVassals((-1), false);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotSame(arrayList2, arrayList1);
      assertNotNull(arrayList2);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setMuslim(3, true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      String string1 = fiefdoms0.getOwner();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(string1);
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getMuslim();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList3.equals((Object)arrayList2));
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(arrayList3.isEmpty());
      assertEquals(3, arrayList3.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      assertNotSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      
      ArrayList<Intruders> arrayList4 = fiefdoms1.getMagyar();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList4.equals((Object)arrayList1));
      assertTrue(arrayList4.equals((Object)arrayList2));
      assertFalse(arrayList4.equals((Object)arrayList3));
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList4, arrayList2);
      assertNotSame(arrayList4, arrayList3);
      assertNotSame(arrayList4, arrayList1);
      assertNotNull(arrayList4);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, ")\"tx`Alg%", "$S3GchpA", (-1615), true, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setLoyalVassals((-498), false);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setMagyar((-491), true);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setName("{t~VV/");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setMuslim((-498), false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setPersonalCastles(3284);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3284, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      String string0 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(string0);
      
      fiefdoms1.setMagyar((-1452), false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Intruders> arrayList2 = fiefdoms1.getMuslim();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList2, arrayList1);
      assertNotNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getMagyar();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList1);
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, int0);
      
      int int1 = fiefdoms0.getValue();
      assertTrue(int1 == int0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, int1);
      
      fiefdoms0.setMuslim(2, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.setInvaderType(arrayList1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      byte[] byteArray0 = new byte[1];
      Mercenaries mercenaries0 = new Mercenaries();
      assertNull(mercenaries0.getLocation());
      assertNull(mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNotNull(mercenaries0);
      
      boolean boolean0 = arrayList0.remove((Object) mercenaries0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(mercenaries0.getLocation());
      assertNull(mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertFalse(boolean0);
      
      byte byte0 = (byte) (-21);
      byteArray0[0] = (byte) (-21);
      fiefdoms0.selectioncolor = byteArray0;
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyFiefdomCastles(0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setFiefdomCastles((int) (byte) (-21));
      assertEquals((-21), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      boolean boolean1 = arrayList0.add(":/U7rM]b;NTDJ");
      assertFalse(boolean1 == boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(":/U7rM]b;NTDJ"));
      
      fiefdoms0.setInvaderType(arrayList0);
      assertEquals((-21), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(":/U7rM]b;NTDJ"));
      
      fiefdoms0.setNeighbors(arrayList0);
      assertEquals((-21), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(":/U7rM]b;NTDJ"));
      
      fiefdoms0.setMuslim(2, true);
      assertEquals((-21), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      Knight knight0 = new Knight(":/U7rM]b;NTDJ", "=M-", "=M-");
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("=M-", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals("=M-", knight0.getRank());
      assertEquals(":/U7rM]b;NTDJ", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList1 = knight0.getVotes();
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("=M-", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals("=M-", knight0.getRank());
      assertEquals(":/U7rM]b;NTDJ", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(":/U7rM]b;NTDJ"));
      
      // Undeclared exception!
      try { 
        knight0.allyTo("=M-");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class src.CurrentPlayers
         //
         verifyException("src.Knight", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
      assertEquals(0, floatArray0.length);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(2548, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "knight", "Z@G)4G(MK", 589, false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("knight", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Z@G)4G(MK", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(589, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("Z@G)4G(MK"));
      
      fiefdoms1.setRebelliousVassals(fiefdoms0.loyalVassals);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("knight", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Z@G)4G(MK", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(589, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("Z@G)4G(MK"));
      
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      boolean boolean0 = true;
      fiefdoms1.setMagyar(4322, true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("knight", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Z@G)4G(MK", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(589, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("Z@G)4G(MK"));
      
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      boolean boolean1 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      fiefdoms0.setMuslim((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms1.setOwner("Z@G)4G(MK");
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("knight", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Z@G)4G(MK", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(589, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("Z@G)4G(MK"));
      
      // Undeclared exception!
      try { 
        fiefdoms0.setMuslim(589, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(4083, false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, ")\"tx`Alg%", "$S3GchpA", (-1615), true, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setLoyalVassals((-498), false);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setMagyar((-491), true);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setName("{t~VV/");
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setMuslim((-498), false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setPersonalCastles(3284);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3284, fiefdoms0.getPersonalCastles());
      assertEquals("{t~VV/", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1615), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList0, ")\"tx`Alg%", "{t~VV/", (-860), true, arrayList0);
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(")\"tx`Alg%", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals((-860), fiefdoms2.getValue());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals("{t~VV/", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNotNull(fiefdoms2);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms2.setFiefdomCastles(true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(")\"tx`Alg%", fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertEquals((-860), fiefdoms2.getValue());
      assertEquals(1, fiefdoms2.getFiefdomCastles());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals("{t~VV/", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      Fiefdoms fiefdoms3 = new Fiefdoms(arrayList0, "G{-M xw=!-WD;F", "G{-M xw=!-WD;F", 3284, true, arrayList0);
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getOwner());
      assertEquals(3284, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getName());
      assertNotNull(fiefdoms3);
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      ArrayList<String> arrayList2 = fiefdoms3.getInvaderType();
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getOwner());
      assertEquals(3284, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertSame(arrayList0, arrayList2);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertSame(arrayList2, arrayList0);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("$S3GchpA"));
      assertFalse(arrayList2.contains("$S3GchpA"));
      
      int int0 = fiefdoms3.getPersonalCastles();
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getOwner());
      assertEquals(3284, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getName());
      assertEquals(0, int0);
      assertSame(arrayList0, arrayList2);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      fiefdoms3.setRebelliousVassals(0, false);
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getOwner());
      assertEquals(3284, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("G{-M xw=!-WD;F", fiefdoms3.getName());
      assertSame(arrayList0, arrayList2);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertFalse(arrayList0.contains("$S3GchpA"));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles((-1));
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMagyar((-1), false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.setName("=j9[ASy>[sf&:q4H-");
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.loyalVassals = arrayList0;
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      
      ArrayList<Intruders> arrayList2 = new ArrayList<Intruders>();
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      fiefdoms0.setViking(3, false);
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(arrayList2);
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(string0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setMagyar(3, false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      
      String string1 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(string1);
      
      fiefdoms0.buyFiefdomCastles(3);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms0.setMagyar(3, false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals("=j9[ASy>[sf&:q4H-", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms1.loyalVassals = null;
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      
      fiefdoms0.setName((String) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList4.equals((Object)arrayList2));
      assertTrue(arrayList4.equals((Object)arrayList3));
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList4, arrayList3);
      assertNotSame(arrayList4, arrayList2);
      assertNotNull(arrayList4);
      
      fiefdoms1.setMuslim(5, false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setPersonalCastles(3);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      String string2 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(string2);
      
      fiefdoms1.setMagyar((-1452), false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals((-1), false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMuslim(2, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      int int0 = fiefdoms0.getPeasants();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, int0);
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList1);
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertFalse(int1 == int0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, int1);
      
      fiefdoms0.setLoyalVassals(0, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setOwner((String) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(1221, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      byte[] byteArray0 = new byte[0];
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertArrayEquals(new byte[] {}, byteArray1);
      assertEquals(0, byteArray1.length);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
      
      byte[] byteArray2 = fiefdoms0.getSelectioncolor();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertArrayEquals(new byte[] {}, byteArray2);
      assertEquals(0, byteArray2.length);
      assertSame(byteArray2, byteArray1);
      assertSame(byteArray2, byteArray0);
      assertNotNull(byteArray2);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "I 5", "I 5", (-406), true, arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-406), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.buyFiefdomCastles(2006);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-406), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.buyPersonalCastles(96);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-406), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList1 = knight0.conversation;
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("I 5"));
      
      fiefdoms0.setNeighbors(arrayList1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-406), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList0.contains("I 5"));
      assertFalse(arrayList1.contains("I 5"));
      
      fiefdoms0.setRebelliousVassals(180, false);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-406), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.setValue((-1928));
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1928), fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("I 5"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, "knight", "Bu@DVk5\"*t9lzt", 2006, false, arrayList0);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Bu@DVk5\"*t9lzt", fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(2006, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("knight", fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("Bu@DVk5\"*t9lzt"));
      assertFalse(arrayList1.contains("Bu@DVk5\"*t9lzt"));
      
      ArrayList<Vassals> arrayList2 = fiefdoms1.getLoyalVassals();
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Bu@DVk5\"*t9lzt", fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(2006, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("knight", fiefdoms1.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("Bu@DVk5\"*t9lzt"));
      assertFalse(arrayList1.contains("Bu@DVk5\"*t9lzt"));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(boolean0);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = (-1.0F);
      fiefdoms0.setShaderColor(floatArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new float[] {(-1.0F)}, floatArray0, 0.01F);
      assertEquals(1, floatArray0.length);
      
      String string0 = fiefdoms0.getName();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string0);
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, int0);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      
      Knight knight0 = new Knight((String) null, (String) null, "");
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getPassword());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertNotNull(knight0);
      
      knight0.setMovingVassals(0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getPassword());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getPassword());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setNeighbors(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getPassword());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.buyPersonalCastles(516);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setOwner("");
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("FS7u:Bw+JI)cA");
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      fiefdoms0.setMagyar(156, false);
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("FS7u:Bw+JI)cA"));
      
      fiefdoms0.setInvaderType((ArrayList<String>) null);
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      
      fiefdoms0.setOwner("");
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(3, byteArray1.length);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
      
      byte[] byteArray2 = fiefdoms0.getSelectioncolor();
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray2);
      assertEquals(3, byteArray2.length);
      assertSame(byteArray2, byteArray0);
      assertSame(byteArray2, byteArray1);
      assertNotNull(byteArray2);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("FS7u:Bw+JI)cA", fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("FS7u:Bw+JI)cA", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, ".", "uzK:L)F]d", 0, false, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(".", fiefdoms1.getName());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setInvaderType((ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(".", fiefdoms1.getName());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms1.buyPersonalCastles(2742);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(".", fiefdoms1.getName());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotSame(fiefdoms1, fiefdoms0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KI");
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyPersonalCastles(1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMagyar((-1), false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(1, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim((-1), true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      // Undeclared exception!
      fiefdoms0.setMuslim(2147483645, true);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      knight0.setRebellionCounter(1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      
      Retainers retainers0 = new Retainers("", "]BvIw5z");
      assertEquals("vassal", retainers0.getRank());
      assertNull(retainers0.getFiefdom());
      assertEquals("", retainers0.getLord());
      assertEquals("]BvIw5z", retainers0.getLocation());
      assertNotNull(retainers0);
      
      knight0.setAllies((Player) retainers0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertEquals("vassal", retainers0.getRank());
      assertNull(retainers0.getFiefdom());
      assertEquals("", retainers0.getLord());
      assertEquals("]BvIw5z", retainers0.getLocation());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "F|<X9w@OsO[eV", "", 1, false, arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setOwner((String) null);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setFiefdomCastles(1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.buyPersonalCastles(1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      
      ArrayList<Vassals> arrayList1 = new ArrayList<Vassals>(2);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      fiefdoms0.loyalVassals = arrayList1;
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNotNull(vassals0);
      
      boolean boolean0 = arrayList1.add(vassals0);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertTrue(boolean0);
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(1, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("F|<X9w@OsO[eV", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getValue());
      assertNull(arrayList2);
      assertFalse(arrayList0.contains(""));
      
      // Undeclared exception!
      try { 
        fiefdoms0.setViking(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Knight knight0 = new Knight();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList arrayList1 = new ArrayList<Mercenaries>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(3624);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(1057, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "You are allowed to take up to ", "You are allowed to take up to ", 1057, false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("You are allowed to take up to ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1057, fiefdoms1.getValue());
      assertEquals("You are allowed to take up to ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("You are allowed to take up to "));
      
      ArrayList<Intruders> arrayList2 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("You are allowed to take up to ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1057, fiefdoms1.getValue());
      assertEquals("You are allowed to take up to ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("You are allowed to take up to "));
      
      ArrayList<String> arrayList3 = knight0.getConversation();
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList3, "Invalid fiefdom", "Invalid fiefdom", 1057, false, arrayList3);
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("Invalid fiefdom", fiefdoms2.getName());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNotNull(fiefdoms2);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      fiefdoms2.setMagyar(arrayList2);
      assertTrue(arrayList0.equals((Object)arrayList3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("You are allowed to take up to ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1057, fiefdoms1.getValue());
      assertEquals("You are allowed to take up to ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("Invalid fiefdom", fiefdoms2.getName());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNotSame(arrayList0, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList0.contains("You are allowed to take up to "));
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      String string0 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(string0);
      
      boolean boolean0 = fiefdoms1.isKingdom();
      assertTrue(arrayList0.equals((Object)arrayList3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("You are allowed to take up to ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1057, fiefdoms1.getValue());
      assertEquals("You are allowed to take up to ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(boolean0);
      assertNotSame(arrayList0, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("You are allowed to take up to "));
      
      ArrayList<Vassals> arrayList4 = fiefdoms2.getLoyalVassals();
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("Invalid fiefdom", fiefdoms2.getName());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotNull(arrayList4);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      ArrayList<Vassals> arrayList5 = fiefdoms0.getRebelliousVassals();
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList5.equals((Object)arrayList4));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList5, arrayList4);
      assertNotNull(arrayList5);
      
      fiefdoms0.setRebelliousVassals(arrayList4);
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertTrue(arrayList4.equals((Object)arrayList5));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("Invalid fiefdom", fiefdoms2.getName());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(arrayList4, arrayList5);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      fiefdoms1.setPersonalCastles((-1));
      assertTrue(arrayList0.equals((Object)arrayList3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("You are allowed to take up to ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1057, fiefdoms1.getValue());
      assertEquals("You are allowed to take up to ", fiefdoms1.getName());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotSame(arrayList0, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("You are allowed to take up to "));
      
      fiefdoms2.setName("eyz+9");
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals("eyz+9", fiefdoms2.getName());
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3624, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(3624, int0);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms2.buyFiefdomCastles(597);
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertEquals(1057, fiefdoms2.getValue());
      assertEquals(597, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("Invalid fiefdom", fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals("eyz+9", fiefdoms2.getName());
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList3.contains("You are allowed to take up to "));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Knight knight0 = new Knight("You cannot buy more than a total of ", "viking", "|7@yPD5fn&\"0e\"G");
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "7+g/zLw7*^[B", 2, false, arrayList0);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPeasants(2);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPersonalCastles(2);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setViking((-614), false);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "viking", (String) null, (-614), false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      String string0 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(string0);
      assertFalse(arrayList0.contains("viking"));
      
      boolean boolean0 = fiefdoms1.isKingdom();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertFalse(boolean0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("?xq(hwf}qan", 1458);
      boolean boolean1 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("viking"));
      
      ArrayList<Vassals> arrayList3 = fiefdoms1.getRebelliousVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms1.setRebelliousVassals(arrayList3);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPersonalCastles(0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms1.setName("You cannot buy more than a total of ");
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-614), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, int0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.buyFiefdomCastles(2);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setVassalsList(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Knight knight0 = new Knight((String) null, "", (String) null);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(""));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "?Xq(hwF}qAn", (-277), true, arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals((-277), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("?Xq(hwF}qAn", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals((-277), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("?Xq(hwF}qAn", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertFalse(arrayList1.contains(""));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Knight knight0 = new Knight();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = 2;
      Stream<String> stream0 = arrayList0.stream();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(stream0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "{w!64", "", 2, true, arrayList0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("{w!64"));
      
      Integer[] integerArray0 = new Integer[6];
      int int1 = 1;
      Integer integer0 = new Integer(1);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(1);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertTrue(integer1.equals((Object)int1));
      assertEquals(1, (int)integer1);
      assertNotNull(integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(2);
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)int1));
      assertEquals(2, (int)integer2);
      assertNotNull(integer2);
      
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int1);
      assertFalse(int1 == int0);
      assertTrue(integer3.equals((Object)integer1));
      assertTrue(integer3.equals((Object)int1));
      assertFalse(integer3.equals((Object)integer2));
      assertTrue(integer3.equals((Object)integer0));
      assertFalse(integer3.equals((Object)int0));
      assertEquals(1, (int)integer3);
      assertNotNull(integer3);
      
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      assertFalse(int0 == int1);
      assertFalse(integer4.equals((Object)int1));
      assertFalse(integer4.equals((Object)integer3));
      assertFalse(integer4.equals((Object)integer1));
      assertFalse(integer4.equals((Object)integer0));
      assertTrue(integer4.equals((Object)int0));
      assertTrue(integer4.equals((Object)integer2));
      assertEquals(2, (int)integer4);
      assertNotNull(integer4);
      
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int1);
      assertTrue(integer5.equals((Object)integer3));
      assertFalse(integer5.equals((Object)integer4));
      assertTrue(integer5.equals((Object)integer1));
      assertTrue(integer5.equals((Object)int1));
      assertFalse(integer5.equals((Object)integer2));
      assertFalse(integer5.equals((Object)int0));
      assertTrue(integer5.equals((Object)integer0));
      assertFalse(int1 == int0);
      assertEquals(1, (int)integer5);
      assertNotNull(integer5);
      
      integerArray0[5] = integer5;
      Integer[] integerArray1 = arrayList0.toArray(integerArray0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(6, integerArray1.length);
      assertEquals(6, integerArray0.length);
      assertSame(integerArray1, integerArray0);
      assertSame(integerArray0, integerArray1);
      assertNotNull(integerArray1);
      assertFalse(arrayList0.contains("{w!64"));
      
      fiefdoms0.setFiefdomCastles(true);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertFalse(arrayList0.contains("{w!64"));
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
      assertFalse(arrayList1.contains("{w!64"));
      
      int int2 = fiefdoms0.getPersonalCastles();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, int2);
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
      
      fiefdoms0.setRebelliousVassals(int1, true);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      // Undeclared exception!
      try { 
        fiefdoms0.setMagyar((-1), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim(3, true);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      byte[] byteArray0 = new byte[0];
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner(" castles  for ");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      fiefdoms0.setPersonalCastles(3);
      assertEquals(3, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNotNull(knight0);
      
      boolean boolean0 = knight0.isFiefdomMine(" castles  for ");
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(boolean0);
      
      ArrayList<Player> arrayList0 = knight0.getAllies();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setVassalsList(arrayList0);
      assertEquals(3, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(3, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      fiefdoms0.setValue(3);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      fiefdoms0.setViking(3, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      
      fiefdoms0.setMuslim(3264, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray1, 0.01F);
      assertEquals(2, floatArray1.length);
      assertSame(floatArray1, floatArray0);
      assertNotNull(floatArray1);
      
      fiefdoms0.setMuslim(2983, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setViking(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(1468);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyFiefdomCastles((-3493));
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Knight knight0 = new Knight("kX/v_5>r~v", "", "kX/v_5>r~v");
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList1 = knight0.conversation;
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("kX/v_5>r~v"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, "", "muslim", 1670, false, arrayList1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("muslim", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(1670, fiefdoms1.getValue());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList1.contains("kX/v_5>r~v"));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList2, arrayList0);
      assertNotNull(arrayList2);
      
      boolean boolean0 = arrayList1.add("8&7j.#eb&cyz");
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(boolean0);
      assertFalse(arrayList1.contains("kX/v_5>r~v"));
      assertTrue(arrayList1.contains("8&7j.#eb&cyz"));
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList1, "lK@H[Y$I- c@}p", "kX/v_5>r~v", 1468, false, arrayList1);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("kX/v_5>r~v", fiefdoms2.getOwner());
      assertEquals("lK@H[Y$I- c@}p", fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(1468, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotNull(fiefdoms2);
      assertFalse(arrayList1.contains("lK@H[Y$I- c@}p"));
      assertTrue(arrayList1.contains("8&7j.#eb&cyz"));
      
      fiefdoms2.setMuslim(arrayList0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("kX/v_5>r~v", fiefdoms2.getOwner());
      assertEquals("lK@H[Y$I- c@}p", fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(1468, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertSame(arrayList0, arrayList2);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(arrayList1.contains("lK@H[Y$I- c@}p"));
      assertTrue(arrayList1.contains("8&7j.#eb&cyz"));
      
      Knight knight1 = new Knight();
      assertFalse(knight1.equals((Object)knight0));
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertNotNull(knight1);
      
      ArrayList<String> arrayList3 = new ArrayList<String>();
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotNull(arrayList3);
      assertFalse(arrayList3.contains("lK@H[Y$I- c@}p"));
      
      fiefdoms1.setInvaderType(arrayList3);
      assertFalse(knight0.equals((Object)knight1));
      assertFalse(arrayList1.equals((Object)arrayList3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("muslim", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(1670, fiefdoms1.getValue());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(knight0, knight1);
      assertNotSame(arrayList1, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList1);
      assertFalse(arrayList1.contains("lK@H[Y$I- c@}p"));
      assertTrue(arrayList1.contains("8&7j.#eb&cyz"));
      assertFalse(arrayList3.contains("lK@H[Y$I- c@}p"));
      
      byte[] byteArray0 = fiefdoms1.getSelectioncolor();
      assertFalse(knight0.equals((Object)knight1));
      assertFalse(arrayList1.equals((Object)arrayList3));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getRank());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals("kX/v_5>r~v", knight0.getName());
      assertEquals("kX/v_5>r~v", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("muslim", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(1670, fiefdoms1.getValue());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotSame(knight0, knight1);
      assertNotSame(arrayList1, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(byteArray0);
      assertFalse(arrayList1.contains("lK@H[Y$I- c@}p"));
      assertTrue(arrayList1.contains("8&7j.#eb&cyz"));
      
      fiefdoms0.setOwner("plJ,w-U\">x,^/");
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("plJ,w-U\">x,^/", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1468, fiefdoms0.getPersonalCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setLoyalVassals((-1889), true);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "I 5", "knight", 2570, true, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("I 5"));
      
      Stream<String> stream0 = arrayList0.parallelStream();
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNotNull(stream0);
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.setViking(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      boolean boolean2 = arrayList0.add((String) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("I 5"));
      
      Intruders intruders0 = new Intruders((String) null, "^<|");
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNotNull(intruders0);
      
      intruders0.setType("");
      assertNull(intruders0.getLocation());
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      
      boolean boolean3 = arrayList1.add(intruders0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(intruders0.getLocation());
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertTrue(boolean3);
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setRebelliousVassals(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      fiefdoms0.setFiefdomCastles((-1469));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals((-1469), fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("I 5"));
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertEquals(5140, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals((-1469), fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("I 5"));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "@ZS,R)*[jDt1J;", "@ZS,R)*[jDt1J;", 894, true, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(894, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("@ZS,R)*[jDt1J;", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("@ZS,R)*[jDt1J;", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("@ZS,R)*[jDt1J;"));
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(0, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPeasants(2);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPersonalCastles(2);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(2, false);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(string0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(boolean0);
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setPersonalCastles(0);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setName((String) null);
      assertEquals(2, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("gr)WN");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("gr)WN", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setOwner("gr)WN");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("gr)WN", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add(" allies");
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(" allies"));
      
      boolean boolean1 = arrayList0.add("src.Intruders");
      assertTrue(boolean1 == boolean0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(" allies"));
      
      ListIterator<String> listIterator0 = arrayList0.listIterator();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(listIterator0.hasNext());
      assertFalse(listIterator0.hasPrevious());
      assertNotNull(listIterator0);
      assertTrue(arrayList0.contains(" allies"));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Unknown rank", " allies", (-1453744095), true, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
      
      fiefdoms0.setFiefdomCastles((-1453744095));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals((-1453744095), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
      
      fiefdoms0.setInvaderType(arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals((-1453744095), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals((-1453744095), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals((-1453744095), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertEquals((-1453744095), int0);
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
      
      fiefdoms0.setOwner(" allies");
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" allies", fiefdoms0.getOwner());
      assertEquals((-1453744095), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Unknown rank", fiefdoms0.getName());
      assertEquals((-1453744095), fiefdoms0.getValue());
      assertTrue(arrayList0.contains(" allies"));
      assertFalse(arrayList0.contains("Unknown rank"));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "viking", 2, true, arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("viking", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setRebelliousVassals(2, true);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("viking", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("viking"));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking((-123), false);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "invalid number", (String) null, 206, true, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("invalid number", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(206, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("invalid number"));
      
      fiefdoms0.setMuslim(206, true);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("invalid number", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(206, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("invalid number"));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      boolean boolean0 = arrayList1.add(intruders0);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertTrue(boolean0);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setPeasants(3);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setViking(arrayList1);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.contains(intruders0));
      
      String string0 = fiefdoms0.getName();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(string0);
      
      fiefdoms0.setPersonalCastles(0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setFiefdomCastles(3);
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Player> arrayList2 = fiefdoms0.getVassalsList();
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(arrayList2);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals((-1), true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)38;
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "&TPE<7{L)&6v7VK", "knight", (byte)1, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("&TPE<7{L)&6v7VK", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("knight", fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setMagyar((int) (byte)1, true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("&TPE<7{L)&6v7VK", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("knight", fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList1);
      
      ArrayList<String> arrayList2 = fiefdoms1.getNeighbors();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("&TPE<7{L)&6v7VK", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("knight", fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(arrayList2);
      
      Fiefdoms fiefdoms2 = new Fiefdoms((ArrayList<String>) null, "", "", (byte)38, true, (ArrayList<String>) null);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNull(fiefdoms2.getConqueror());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(38, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertTrue(fiefdoms2.isKingdom());
      assertNotNull(fiefdoms2);
      
      fiefdoms0.setMuslim((-2259), true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      
      Fiefdoms fiefdoms3 = new Fiefdoms();
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertNull(fiefdoms3.getConqueror());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getOwner());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertFalse(fiefdoms3.isKingdom());
      assertNotNull(fiefdoms3);
      
      fiefdoms3.setViking(896, false);
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertNull(fiefdoms3.getConqueror());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getOwner());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertFalse(fiefdoms3.isKingdom());
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      
      ArrayList<Vassals> arrayList3 = fiefdoms1.getLoyalVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertEquals(1, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("&TPE<7{L)&6v7VK", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("knight", fiefdoms1.getOwner());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms3);
      assertNotNull(arrayList3);
      
      ArrayList<String> arrayList4 = fiefdoms2.getInvaderType();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertNull(fiefdoms2.getConqueror());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(38, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertTrue(fiefdoms2.isKingdom());
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNull(arrayList4);
      
      String string0 = fiefdoms2.getName();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertNull(fiefdoms2.getConqueror());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(38, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals("", string0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, ".", "uzK:L)F]d", 0, false, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setInvaderType((ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotNull(arrayList1);
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms1.buyPersonalCastles(2742);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      String string0 = fiefdoms1.getName();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("uzK:L)F]d", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(".", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(".", string0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "viking", (-428), true, arrayList0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals((-428), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPersonalCastles(0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals((-428), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("viking"));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyPersonalCastles((-1450368156));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "Invalid number", "You are allowed to take up to ", 323, false, (ArrayList<String>) null);
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You are allowed to take up to ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(67);
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(67, fiefdoms0.getFiefdomCastles());
      assertEquals("You are allowed to take up to ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(67, fiefdoms0.getFiefdomCastles());
      assertEquals("You are allowed to take up to ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList0);
      
      fiefdoms0.setMagyar(67, false);
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(67, fiefdoms0.getFiefdomCastles());
      assertEquals("You are allowed to take up to ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("You are allowed to take up to "));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(67, fiefdoms0.getFiefdomCastles());
      assertEquals("You are allowed to take up to ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      fiefdoms0.setOwner("c2");
      assertEquals("Invalid number", fiefdoms0.getName());
      assertEquals(323, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(67, fiefdoms0.getFiefdomCastles());
      assertEquals("c2", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, "Invalid number", " u<", 323, false, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(" u<", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(323, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Invalid number", fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList1.contains("Invalid number"));
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getMuslim();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(" u<", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(323, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Invalid number", fiefdoms1.getName());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      assertFalse(arrayList1.contains("Invalid number"));
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      
      boolean boolean1 = arrayList0.add("knight");
      assertTrue(boolean1 == boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("knight"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "I 5", "knight", 2570, false, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      Stream<String> stream0 = arrayList0.parallelStream();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNotNull(stream0);
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setViking(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      boolean boolean2 = arrayList0.add((String) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      Intruders intruders0 = new Intruders((String) null, "^<|");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setType("");
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean3 = arrayList1.add(intruders0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean3);
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setRebelliousVassals(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setPersonalCastles((-71));
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-71), fiefdoms0.getPersonalCastles());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setName("I 5");
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-71), fiefdoms0.getPersonalCastles());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-71), fiefdoms0.getPersonalCastles());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-71), int0);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.buyFiefdomCastles((-71));
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-71), fiefdoms0.getPersonalCastles());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(1090);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders("knight", "src.SAXParser");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains(intruders0));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 1090;
      floatArray0[1] = (float) 1090;
      floatArray0[2] = (float) 1090;
      floatArray0[3] = (float) 1090;
      floatArray0[4] = (float) 1090;
      floatArray0[5] = (float) 1090;
      fiefdoms1.shaderColor = floatArray0;
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      
      fiefdoms1.setValue(0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotNull(fiefdoms2);
      
      ArrayList<Vassals> arrayList1 = fiefdoms2.getLoyalVassals();
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotNull(arrayList1);
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray1, 0.01F);
      assertEquals(2, floatArray1.length);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(floatArray1, floatArray0);
      assertNotNull(floatArray1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMuslim(3, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("vassal", 2);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      fiefdoms0.setValue((-1));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setRebelliousVassals((-1), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setLoyalVassals((-1), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) (-1);
      floatArray0[1] = 801.2902F;
      floatArray0[2] = (float) (-1);
      fiefdoms0.shaderColor = floatArray0;
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMuslim((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMagyar((-1), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList0);
      
      fiefdoms0.setLoyalVassals((-1), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setLoyalVassals((-1627), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setOwner(" vassals with you.");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" vassals with you.", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" vassals with you.", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" vassals with you.", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new float[] {(-1.0F), 801.2902F, (-1.0F)}, floatArray1, 0.01F);
      assertEquals(3, floatArray1.length);
      assertSame(floatArray1, floatArray0);
      assertNotNull(floatArray1);
      
      String string0 = fiefdoms0.getName();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" vassals with you.", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string0);
      
      String string1 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" vassals with you.", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string1);
      
      // Undeclared exception!
      try { 
        fiefdoms0.setMuslim(2549, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setInvaderType((ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, ")\"tx`Alg%", (String) null, (-1615), true, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setViking(arrayList1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
      
      fiefdoms0.setRebelliousVassals(1973, true);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertEquals((-1615), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains(")\"tx`Alg%"));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ArrayList<String> arrayList2 = new ArrayList<String>();
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      boolean boolean0 = arrayList0.removeAll(arrayList2);
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(boolean0);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "You cannot buy more than a total of ", "You cannot buy more than a total of ", 1748, true, arrayList2);
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      boolean boolean1 = arrayList2.add(" allies for ");
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean1 == boolean0);
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(boolean1);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Player> arrayList4 = knight0.getAllies();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertNotNull(arrayList4);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      boolean boolean2 = arrayList3.add(intruders0);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertTrue(boolean2);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList3.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList3.contains(intruders0));
      
      fiefdoms0.setRebelliousVassals(1748, true);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      fiefdoms0.setPersonalCastles(1748);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1748, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      fiefdoms0.setName("w{ <8");
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1748, fiefdoms0.getPersonalCastles());
      assertEquals("w{ <8", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1748, fiefdoms0.getPersonalCastles());
      assertEquals("w{ <8", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1748, int0);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      fiefdoms0.buyFiefdomCastles(5);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1748, fiefdoms0.getPersonalCastles());
      assertEquals("w{ <8", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMagyar();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(1, arrayList5.size());
      assertFalse(arrayList5.isEmpty());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1748, fiefdoms0.getPersonalCastles());
      assertEquals("w{ <8", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals(1748, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList0, arrayList2);
      assertSame(arrayList5, arrayList3);
      assertNotSame(arrayList2, arrayList0);
      assertNotNull(arrayList5);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList5.contains(intruders0));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles((-1883272123));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1883272123), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1883272123), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim((-1), false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setValue(0);
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.buyPersonalCastles(0);
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPersonalCastles(0);
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, int0);
      
      fiefdoms0.setMagyar(0, false);
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("bZVtQwi0jl(J");
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("bZVtQwi0jl(J"));
      
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains("bZVtQwi0jl(J"));
      
      knight0.setTotalMoney(2);
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(2, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "QWewQ/7:.", " castles  for ", 2, false, arrayList0);
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(2, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("QWewQ/7:.", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList0.contains("bZVtQwi0jl(J"));
      
      fiefdoms0.setPersonalCastles(2);
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(2, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("QWewQ/7:.", fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList0.contains("bZVtQwi0jl(J"));
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(2, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals("QWewQ/7:.", fiefdoms0.getName());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList0.contains("bZVtQwi0jl(J"));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(288, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(1, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Knight knight0 = new Knight();
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      int int0 = 2;
      Stream<String> stream0 = arrayList0.stream();
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(stream0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "{w!64", "", 2, true, arrayList0);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("{w!64"));
      
      Integer[] integerArray0 = new Integer[6];
      int int1 = 1;
      Integer integer0 = new Integer(1);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(1);
      assertTrue(integer1.equals((Object)int1));
      assertFalse(integer1.equals((Object)int0));
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(1, (int)integer1);
      assertNotNull(integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(2);
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)int1));
      assertFalse(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)int0));
      assertEquals(2, (int)integer2);
      assertNotNull(integer2);
      
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int1);
      assertFalse(int1 == int0);
      assertFalse(integer3.equals((Object)int0));
      assertTrue(integer3.equals((Object)integer0));
      assertTrue(integer3.equals((Object)integer1));
      assertTrue(integer3.equals((Object)int1));
      assertFalse(integer3.equals((Object)integer2));
      assertEquals(1, (int)integer3);
      assertNotNull(integer3);
      
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      assertFalse(int0 == int1);
      assertTrue(integer4.equals((Object)integer2));
      assertFalse(integer4.equals((Object)int1));
      assertFalse(integer4.equals((Object)integer1));
      assertTrue(integer4.equals((Object)int0));
      assertFalse(integer4.equals((Object)integer3));
      assertFalse(integer4.equals((Object)integer0));
      assertEquals(2, (int)integer4);
      assertNotNull(integer4);
      
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int1);
      assertFalse(integer5.equals((Object)integer4));
      assertTrue(integer5.equals((Object)integer3));
      assertTrue(integer5.equals((Object)integer1));
      assertTrue(integer5.equals((Object)integer0));
      assertFalse(integer5.equals((Object)int0));
      assertTrue(integer5.equals((Object)int1));
      assertFalse(integer5.equals((Object)integer2));
      assertFalse(int1 == int0);
      assertEquals(1, (int)integer5);
      assertNotNull(integer5);
      
      integerArray0[5] = integer5;
      fiefdoms0.setRebelliousVassals(1, true);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("{w!64"));
      
      Integer[] integerArray1 = arrayList0.toArray(integerArray0);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(6, integerArray1.length);
      assertEquals(6, integerArray0.length);
      assertSame(integerArray1, integerArray0);
      assertSame(integerArray0, integerArray1);
      assertNotNull(integerArray1);
      assertFalse(arrayList0.contains("{w!64"));
      
      fiefdoms0.setFiefdomCastles(false);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList0.contains("{w!64"));
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
      assertFalse(arrayList1.contains("{w!64"));
      
      int int2 = fiefdoms0.getPersonalCastles();
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, int2);
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
      
      fiefdoms0.setRebelliousVassals(int1, true);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("{w!64"));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setNeighbors(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.loyalVassals = arrayList1;
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      
      fiefdoms0.setValue(0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(0, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("KxL C?}-");
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("KxL C?}-"));
      
      ArrayList<String> arrayList2 = new ArrayList<String>();
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      boolean boolean1 = arrayList0.removeAll(arrayList2);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean1 == boolean0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(boolean1);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "You cannot buy more than a total of ", "You cannot buy more than a total of ", 3624, true, arrayList2);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      boolean boolean2 = arrayList2.add(" allies for ");
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertTrue(boolean2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains(" allies for "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      ArrayList<Player> arrayList4 = knight0.getAllies();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      
      fiefdoms0.setVassalsList(arrayList4);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains(" allies for "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      fiefdoms0.setConqueror("*,qD1w=C5");
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertEquals("*,qD1w=C5", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains(" allies for "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      boolean boolean3 = fiefdoms0.isKingdom();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertEquals("*,qD1w=C5", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(boolean3);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains(" allies for "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      fiefdoms0.setOwner("You cannot buy more than a total of ");
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertEquals("*,qD1w=C5", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Player> arrayList5 = fiefdoms0.getVassalsList();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertEquals("*,qD1w=C5", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertSame(arrayList5, arrayList4);
      assertNotNull(arrayList5);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Vassals> arrayList6 = new ArrayList<Vassals>();
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertNotNull(arrayList6);
      
      fiefdoms0.setRebelliousVassals(arrayList6);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertEquals("*,qD1w=C5", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(3624, fiefdoms0.getValue());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setName(".t<n@O.SPhA");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(".t<n@O.SPhA", fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(1714);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setRebelliousVassals(1714, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (-1.0F);
      fiefdoms0.shaderColor = floatArray0;
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)12;
      fiefdoms0.selectioncolor = byteArray0;
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "Ile-De-France", "There's ", 667, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("There's ", fiefdoms1.getOwner());
      assertEquals(667, fiefdoms1.getValue());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Ile-De-France", fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      
      String string0 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("There's ", fiefdoms1.getOwner());
      assertEquals(667, fiefdoms1.getValue());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("Ile-De-France", fiefdoms1.getName());
      assertEquals("There's ", string0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(string0);
      
      fiefdoms0.setFiefdomCastles((int) (byte)0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("KxL C?}-");
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("KxL C?}-"));
      
      ArrayList<String> arrayList2 = new ArrayList<String>();
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      boolean boolean1 = arrayList0.removeAll(arrayList2);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean1 == boolean0);
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(boolean1);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList2.contains("KxL C?}-"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "You cannot buy more than a total of ", "You cannot buy more than a total of ", 3624, true, arrayList2);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains("You cannot buy more than a total of "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      
      boolean boolean2 = arrayList2.add(" allies for ");
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertTrue(boolean2);
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      
      ArrayList<Player> arrayList4 = knight0.getAllies();
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      
      fiefdoms0.setVassalsList(arrayList4);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      
      fiefdoms0.setMuslim(3624, true);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      
      ArrayList<String> arrayList5 = fiefdoms0.getNeighbors();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(arrayList5.equals((Object)arrayList2));
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3624, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList5.isEmpty());
      assertEquals(1, arrayList5.size());
      assertSame(arrayList0, arrayList5);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList5);
      assertNotSame(arrayList2, arrayList0);
      assertSame(arrayList5, arrayList0);
      assertNotSame(arrayList5, arrayList2);
      assertNotNull(arrayList5);
      assertTrue(arrayList0.contains("KxL C?}-"));
      assertFalse(arrayList0.contains(" allies for "));
      assertFalse(arrayList2.contains("You cannot buy more than a total of "));
      assertTrue(arrayList2.contains(" allies for "));
      assertFalse(arrayList5.contains(" allies for "));
      assertTrue(arrayList5.contains("KxL C?}-"));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "W2VpWY\"=E?G9#5jd", "W2VpWY\"=E?G9#5jd", (-1144136600), true, (ArrayList<String>) null);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar((-1144136600), false);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.buyPersonalCastles(1648);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.loyalVassals = null;
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList1);
      
      ArrayList<Player> arrayList2 = fiefdoms0.getVassalsList();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList2);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(string0);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      
      fiefdoms0.buyPersonalCastles((-1144136600));
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim((-1144136600), false);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
      
      String string1 = fiefdoms0.getConqueror();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(string1);
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getLoyalVassals();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList4);
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMuslim();
      assertTrue(arrayList5.equals((Object)arrayList3));
      assertTrue(arrayList5.equals((Object)arrayList0));
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNotSame(arrayList5, arrayList3);
      assertNotSame(arrayList5, arrayList0);
      assertNotNull(arrayList5);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList0);
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      boolean boolean0 = NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, " allies");
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "j", "j", 3287, false, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3287, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("j", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("j", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setRebelliousVassals(fiefdoms0.loyalVassals);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3287, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("j", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("j", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms1.setOwner("j");
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3287, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("j", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("j", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Vassals> arrayList2 = new ArrayList<Vassals>();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      ArrayList arrayList3 = (ArrayList)arrayList2.clone();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      
      fiefdoms0.setViking(600, false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      fiefdoms1.setRebelliousVassals(2851, false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3287, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("j", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("j", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setOwner("7");
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("7", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("7", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList4);
      
      float[] floatArray0 = fiefdoms1.getShaderColor();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3287, fiefdoms1.getValue());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("j", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("j", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(2, floatArray0.length);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(floatArray0);
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("7", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList5);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Knight knight0 = new Knight("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", "muslim", "muslim");
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king."));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", "muslim", 3, false, arrayList0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("muslim"));
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("muslim", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getWounds());
      assertEquals("muslim", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("muslim"));
      assertFalse(arrayList1.contains("muslim"));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Knight knight0 = new Knight("|7@yPD5fn&\"0e\"G", "|7@yPD5fn&\"0e\"G", "|7@yPD5fn&\"0e\"G");
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("|7@yPD5fn&\"0e\"G"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "|7@yPD5fn&\"0e\"G", "magyar", 0, true, arrayList0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("|7@yPD5fn&\"0e\"G", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("magyar"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("|7@yPD5fn&\"0e\"G", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("magyar"));
      
      fiefdoms0.setViking(arrayList1);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("|7@yPD5fn&\"0e\"G", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(arrayList0.contains("magyar"));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles((-258));
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray0 = new float[5];
      fiefdoms0.buyFiefdomCastles((-258));
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      floatArray0[0] = (float) (-258);
      floatArray0[1] = (float) (-258);
      floatArray0[2] = (float) (-258);
      fiefdoms0.setPeasants((-258));
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setNeighbors(arrayList0);
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      floatArray0[3] = (float) (-258);
      floatArray0[4] = (float) (-258);
      fiefdoms0.shaderColor = floatArray0;
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals((-1928), false);
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setValue((-656));
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-656), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals((-258), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-656), fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-258), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMuslim(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList0 = knight0.getMovingVassals();
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      
      boolean boolean1 = arrayList0.add("knight");
      assertTrue(boolean1 == boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("knight"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "I 5", "knight", 2570, false, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      Stream<String> stream0 = arrayList0.parallelStream();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNotNull(stream0);
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setViking(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("I 5"));
      assertTrue(arrayList0.contains("knight"));
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      Intruders intruders0 = new Intruders((String) null, "^<|");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setType("");
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean2 = arrayList1.add(intruders0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean2);
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      assertTrue(arrayList1.contains(intruders0));
      
      fiefdoms0.setRebelliousVassals(2570, false);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setViking((-71), true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setMuslim(2570, true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      int int0 = fiefdoms0.getPeasants();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, int0);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setPeasants(2570);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(arrayList2, arrayList1);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList2.contains(intruders0));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getViking();
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(arrayList3, arrayList2);
      assertNotSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList3.contains(intruders0));
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getRebelliousVassals();
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      int int1 = fiefdoms0.getPersonalCastles();
      assertTrue(int1 == int0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, int1);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      
      fiefdoms0.setMagyar(arrayList3);
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals("knight", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(2570, fiefdoms0.getPeasants());
      assertEquals(2570, fiefdoms0.getValue());
      assertEquals("I 5", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(arrayList3, arrayList2);
      assertNotSame(arrayList3, arrayList1);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList3.contains(intruders0));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((Intruders) null);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      
      fiefdoms0.setMagyar(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      
      fiefdoms0.setMagyar(682, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.buyPersonalCastles(682);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setFiefdomCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setLoyalVassals(0, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setMagyar(660, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setFiefdomCastles(1532);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setRebelliousVassals(660, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      
      fiefdoms0.setKingdom(true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setMagyar(660, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertFalse(arrayList4.equals((Object)arrayList1));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList4.isEmpty());
      assertEquals(683, arrayList4.size());
      assertSame(arrayList4, arrayList0);
      assertNotSame(arrayList4, arrayList1);
      assertNotNull(arrayList4);
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMuslim();
      assertFalse(arrayList5.equals((Object)arrayList4));
      assertFalse(arrayList5.equals((Object)arrayList0));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertNotSame(arrayList5, arrayList4);
      assertSame(arrayList5, arrayList1);
      assertNotSame(arrayList5, arrayList0);
      assertNotNull(arrayList5);
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(3, byteArray1.length);
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
      
      ArrayList<String> arrayList6 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(arrayList6);
      
      ArrayList<Player> arrayList7 = fiefdoms0.getVassalsList();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(arrayList7);
      
      fiefdoms0.setOwner(" .N%@");
      assertEquals(" .N%@", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1532, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      // Undeclared exception!
      fiefdoms0.setViking(1911841606, true);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("5yl?-T'.XMA^O");
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5yl?-T'.XMA^O", fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyPersonalCastles(374);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(1486, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(string0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotNull(fiefdoms1);
      
      fiefdoms0.setMagyar(2003, false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList1);
      
      fiefdoms1.setMuslim((ArrayList<Intruders>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotSame(fiefdoms1, fiefdoms0);
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotNull(fiefdoms2);
      
      String string1 = fiefdoms2.getConqueror();
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNull(string1);
      
      fiefdoms1.buyFiefdomCastles(1486);
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      
      boolean boolean0 = false;
      fiefdoms2.setMagyar(1486, true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      
      fiefdoms0.setName(")\"tx`Alg%");
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(")\"tx`Alg%", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotNull(arrayList2);
      
      // Undeclared exception!
      try { 
        fiefdoms1.setMuslim(5, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "You cannot have more than a total of ", "", 1736, true, (ArrayList<String>) null);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(1736, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(1046, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(1736, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "I 5", "knight", 2570, true, arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("knight"));
      
      Stream<String> stream0 = arrayList0.parallelStream();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(stream0);
      assertFalse(arrayList0.contains("knight"));
      
      fiefdoms0.setViking(2570, false);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("knight"));
      
      fiefdoms0.setLoyalVassals(2570, true);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("knight"));
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      boolean boolean2 = arrayList0.add((String) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("knight"));
      
      Intruders intruders0 = new Intruders((String) null, "^<|");
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNotNull(intruders0);
      
      intruders0.setLocation("There are ");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertEquals("There are ", intruders0.getLocation());
      
      intruders0.setType("");
      assertEquals("", intruders0.getType());
      assertNull(intruders0.getRank());
      assertEquals("There are ", intruders0.getLocation());
      
      fiefdoms0.setRebelliousVassals(1862, true);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("knight"));
      
      fiefdoms0.setViking(arrayList1);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(arrayList0.contains("knight"));
      assertFalse(arrayList1.contains(intruders0));
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getRebelliousVassals();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("I 5", fiefdoms0.getName());
      assertEquals(2570, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1862, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("knight"));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = (-1);
      boolean boolean0 = true;
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setViking(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      // Undeclared exception!
      fiefdoms0.setMagyar(2147483645, true);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      byte[] byteArray0 = new byte[0];
      fiefdoms0.selectioncolor = byteArray0;
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setOwner("#e5<PP{#CV");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setFiefdomCastles((-2250));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int0 = fiefdoms0.getValue();
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, int0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setKingdom(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setLoyalVassals(0, true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
      
      fiefdoms0.setMagyar(0, false);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertEquals((-2250), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      
      fiefdoms0.setFiefdomCastles(0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) (-2250);
      floatArray0[2] = (float) 0;
      fiefdoms0.setMuslim(arrayList0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-2250);
      floatArray0[6] = 1.0F;
      floatArray0[7] = (float) (-2250);
      floatArray0[8] = (float) (-2250);
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new float[] {0.0F, (-2250.0F), 0.0F, 0.0F, 0.0F, (-2250.0F), 1.0F, (-2250.0F), (-2250.0F)}, floatArray0, 0.01F);
      assertEquals(9, floatArray0.length);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList2);
      
      int int1 = fiefdoms0.getPersonalCastles();
      assertFalse(int1 == int0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, int1);
      
      fiefdoms0.buyFiefdomCastles((-2250));
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("#e5<PP{#CV", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
      
      // Undeclared exception!
      try { 
        arrayList3.addAll((-586), (Collection<? extends Intruders>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -586, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "W2VpWY\"=E?G9#5jd";
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = (-1144136600);
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "W2VpWY\"=E?G9#5jd", "W2VpWY\"=E?G9#5jd", (-1144136600), true, (ArrayList<String>) null);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList0 = null;
      fiefdoms0.setMagyar((-1144136600), false);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      
      fiefdoms0.buyPersonalCastles(1648);
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      
      fiefdoms0.loyalVassals = null;
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      ArrayList<Player> arrayList2 = fiefdoms0.getVassalsList();
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals((-1144136600), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertEquals("W2VpWY\"=E?G9#5jd", fiefdoms0.getName());
      assertNull(arrayList2);
      
      // Undeclared exception!
      try { 
        fiefdoms0.setLoyalVassals(1648, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar((-1), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, " allies for ", " allies for ", (-1928), true, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(" allies for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1928), fiefdoms1.getValue());
      assertEquals(" allies for ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains(" allies for "));
      
      fiefdoms1.setRebelliousVassals(827, true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(" allies for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1928), fiefdoms1.getValue());
      assertEquals(" allies for ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains(" allies for "));
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList0, "^ 36ER=U.#6iEL}f", "", (-1928), true, arrayList0);
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("^ 36ER=U.#6iEL}f", fiefdoms2.getName());
      assertEquals((-1928), fiefdoms2.getValue());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNotNull(fiefdoms2);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms2.setValue((-656));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-656), fiefdoms2.getValue());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("^ 36ER=U.#6iEL}f", fiefdoms2.getName());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList0.contains(""));
      
      ArrayList<String> arrayList1 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(" allies for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1928), fiefdoms1.getValue());
      assertEquals(" allies for ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertFalse(arrayList1.contains(""));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotNull(arrayList2);
      
      ArrayList<Vassals> arrayList3 = fiefdoms2.getLoyalVassals();
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-656), fiefdoms2.getValue());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("^ 36ER=U.#6iEL}f", fiefdoms2.getName());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms1.setLoyalVassals(arrayList3);
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(" allies for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1928), fiefdoms1.getValue());
      assertEquals(" allies for ", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals((-656), fiefdoms2.getValue());
      assertEquals("", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals("^ 36ER=U.#6iEL}f", fiefdoms2.getName());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertFalse(arrayList0.contains(""));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(5);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(5, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(890, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(5, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(0, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(5, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Knight knight0 = new Knight(",r*to~)Nv<wi", (String) null, "JTF{2yR6$Q}K'pL");
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("JTF{2yR6$Q}K'pL"));
      
      boolean boolean0 = arrayList0.add("");
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("JTF{2yR6$Q}K'pL"));
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("JTF{2yR6$Q}K'pL"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "PFC{2!ni!Jg$LI", ",r*to~)Nv<wi", 2972, true, arrayList0);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
      
      fiefdoms0.setConqueror("");
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertEquals(0, int0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
      
      int int1 = fiefdoms0.getValue();
      assertFalse(int1 == int0);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertEquals(2972, int1);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-18);
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("JTF{2yR6$Q}K'pL", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(",r*to~)Nv<wi", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(",r*to~)Nv<wi", fiefdoms0.getOwner());
      assertEquals("PFC{2!ni!Jg$LI", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2972, fiefdoms0.getValue());
      assertArrayEquals(new byte[] {(byte) (-18)}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains("PFC{2!ni!Jg$LI"));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = true;
      fiefdoms0.setMagyar(0, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, int0);
      
      fiefdoms0.buyPersonalCastles(0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Knight knight0 = new Knight("", "y*FV`vAT*y8aXS!+", "");
      assertEquals("y*FV`vAT*y8aXS!+", knight0.getRank());
      assertEquals("", knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList0 = knight0.getMovingVassals();
      assertEquals("y*FV`vAT*y8aXS!+", knight0.getRank());
      assertEquals("", knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertNotNull(vassals0);
      
      boolean boolean1 = arrayList0.add(vassals0);
      assertTrue(boolean1 == boolean0);
      assertEquals("y*FV`vAT*y8aXS!+", knight0.getRank());
      assertEquals("", knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(vassals0));
      
      Vassals vassals1 = new Vassals("+Q/a]t9w/8r~RFU,s", "muslim");
      assertFalse(vassals1.equals((Object)vassals0));
      assertEquals("vassal", vassals1.getRank());
      assertEquals("muslim", vassals1.getFiefdom());
      assertEquals("+Q/a]t9w/8r~RFU,s", vassals1.getLord());
      assertNull(vassals1.getLocation());
      assertNotNull(vassals1);
      
      // Undeclared exception!
      try { 
        vassals1.wound();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class src.Map
         //
         verifyException("src.Vassals", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setLoyalVassals(fiefdoms0.loyalVassals);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(0, false);
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "$S3GchpA", "$S3GchpA", 1998, true, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("$S3GchpA", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1998, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("$S3GchpA"));
      
      Knight knight0 = new Knight(".", "$S3GchpA", "you cannot buy more than a total of ");
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("$S3GchpA", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals("you cannot buy more than a total of ", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(".", knight0.getName());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList1 = knight0.getVotes();
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("$S3GchpA", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals("you cannot buy more than a total of ", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(".", knight0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(arrayList1, arrayList0);
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("$S3GchpA"));
      
      boolean boolean0 = arrayList1.add("");
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("$S3GchpA", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals("you cannot buy more than a total of ", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(".", knight0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(boolean0);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList1.contains("$S3GchpA"));
      assertTrue(arrayList1.contains(""));
      
      boolean boolean1 = arrayList1.add("+2p");
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertTrue(boolean1 == boolean0);
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("$S3GchpA", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals("you cannot buy more than a total of ", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(".", knight0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertTrue(boolean1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList1.contains("$S3GchpA"));
      assertTrue(arrayList1.contains("+2p"));
      
      fiefdoms0.setInvaderType(arrayList1);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("$S3GchpA", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1998, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("$S3GchpA", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals("you cannot buy more than a total of ", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(".", knight0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList0.contains("$S3GchpA"));
      assertFalse(arrayList1.contains("$S3GchpA"));
      assertTrue(arrayList1.contains("+2p"));
      
      fiefdoms0.buyPersonalCastles(1643);
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("$S3GchpA", fiefdoms0.getName());
      assertEquals(1643, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("$S3GchpA", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1998, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains("$S3GchpA"));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Stream<String> stream0 = arrayList0.stream();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(stream0);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("j'2>cn7#`ua2", 12345);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "NsrM[le$1OwBe7", "#`3q0Up", (-2078514338), false, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      
      boolean boolean1 = arrayList0.add(")pwds$&_gi5!j<");
      assertTrue(boolean1 == boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      fiefdoms0.setPeasants(1);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertEquals(0, int0);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      assertFalse(arrayList2.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList2.contains(")pwds$&_gi5!j<"));
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertSame(arrayList0, arrayList2);
      assertNull(string0);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      fiefdoms0.setRebelliousVassals(1, false);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getViking();
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertEquals("#`3q0Up", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      fiefdoms0.setOwner(")pwds$&_gi5!j<");
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(")pwds$&_gi5!j<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
      
      int int1 = fiefdoms0.getPeasants();
      assertFalse(int1 == int0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(")pwds$&_gi5!j<", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("NsrM[le$1OwBe7", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2078514338), fiefdoms0.getValue());
      assertEquals(1, int1);
      assertSame(arrayList0, arrayList2);
      assertFalse(arrayList0.contains("NsrM[le$1OwBe7"));
      assertTrue(arrayList0.contains(")pwds$&_gi5!j<"));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = 2;
      Stream<String> stream0 = arrayList0.stream();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(stream0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "{w!64", "", 2, true, arrayList0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      
      Integer[] integerArray0 = new Integer[6];
      int int1 = 1;
      Integer integer0 = new Integer(1);
      assertTrue(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(1);
      assertTrue(integer1.equals((Object)int1));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertEquals(1, (int)integer1);
      assertNotNull(integer1);
      
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(2);
      assertTrue(integer2.equals((Object)int0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)int1));
      assertEquals(2, (int)integer2);
      assertNotNull(integer2);
      
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(int1);
      assertFalse(int1 == int0);
      assertFalse(integer3.equals((Object)integer2));
      assertFalse(integer3.equals((Object)int0));
      assertTrue(integer3.equals((Object)integer0));
      assertTrue(integer3.equals((Object)int1));
      assertTrue(integer3.equals((Object)integer1));
      assertEquals(1, (int)integer3);
      assertNotNull(integer3);
      
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(int0);
      assertFalse(int0 == int1);
      assertTrue(integer4.equals((Object)int0));
      assertFalse(integer4.equals((Object)integer3));
      assertFalse(integer4.equals((Object)integer1));
      assertTrue(integer4.equals((Object)integer2));
      assertFalse(integer4.equals((Object)int1));
      assertFalse(integer4.equals((Object)integer0));
      assertEquals(2, (int)integer4);
      assertNotNull(integer4);
      
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(int1);
      assertTrue(integer5.equals((Object)integer1));
      assertFalse(integer5.equals((Object)integer2));
      assertFalse(integer5.equals((Object)integer4));
      assertTrue(integer5.equals((Object)int1));
      assertTrue(integer5.equals((Object)integer3));
      assertTrue(integer5.equals((Object)integer0));
      assertFalse(integer5.equals((Object)int0));
      assertFalse(int1 == int0);
      assertEquals(1, (int)integer5);
      assertNotNull(integer5);
      
      integerArray0[5] = integer5;
      Integer[] integerArray1 = arrayList0.toArray(integerArray0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(6, integerArray1.length);
      assertEquals(6, integerArray0.length);
      assertSame(integerArray1, integerArray0);
      assertSame(integerArray0, integerArray1);
      assertNotNull(integerArray1);
      assertFalse(arrayList0.contains(""));
      
      String string0 = fiefdoms0.getOwner();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setMagyar((-1933399837), false);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotSame(arrayList2, arrayList1);
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{w!64", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains(""));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(2991, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Knight knight0 = new Knight("You cannot buy more than a total of ", "viking", "|7@yPD5fn&\"0e\"G");
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "7+g/zLw7*^[B", 2, false, arrayList0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPeasants(2);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setPersonalCastles(2);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setViking((-614), false);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "viking", (String) null, (-614), false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      String string0 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(string0);
      assertFalse(arrayList0.contains("viking"));
      
      boolean boolean0 = fiefdoms1.isKingdom();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(boolean0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertNotNull(fiefdoms2);
      
      fiefdoms2.setRebelliousVassals(813, true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      
      fiefdoms0.setViking(2, true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(2, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms1.setMuslim((-278), true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      
      Fiefdoms fiefdoms3 = new Fiefdoms();
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertNotNull(fiefdoms3);
      
      int int0 = fiefdoms3.getPeasants();
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, int0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      
      fiefdoms0.setPeasants((-1562));
      assertFalse(fiefdoms0.equals((Object)fiefdoms3));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1562), fiefdoms0.getPeasants());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertNotSame(fiefdoms0, fiefdoms3);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList0.contains("viking"));
      
      ArrayList<Intruders> arrayList2 = fiefdoms2.getMagyar();
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertNotSame(arrayList2, arrayList1);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.equals((Object)fiefdoms3));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertFalse(arrayList3.equals((Object)arrayList2));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1562), fiefdoms0.getPeasants());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(2, arrayList3.size());
      assertNotSame(fiefdoms0, fiefdoms3);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList3, arrayList1);
      assertNotSame(arrayList3, arrayList2);
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("viking"));
      
      ArrayList<Vassals> arrayList4 = fiefdoms3.getRebelliousVassals();
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotNull(arrayList4);
      
      int int1 = fiefdoms2.getPersonalCastles();
      assertTrue(int1 == int0);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, int1);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms0);
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms3));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertFalse(arrayList1.equals((Object)arrayList3));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("You cannot buy more than a total of ", knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals("|7@yPD5fn&\"0e\"G", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1562), fiefdoms0.getPeasants());
      assertEquals("7+g/zLw7*^[B", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getName());
      assertEquals((-614), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("viking", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(fiefdoms0, fiefdoms3);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms3);
      assertNotSame(arrayList1, arrayList2);
      assertNotSame(arrayList1, arrayList3);
      assertFalse(arrayList0.contains("viking"));
      
      fiefdoms2.setLoyalVassals((-1092), true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getName());
      assertNull(fiefdoms2.getConqueror());
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms0);
  }
}
