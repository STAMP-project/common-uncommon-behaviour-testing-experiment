/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 14:31:30 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.TabLSymbol;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolygonSymbol_ESTest extends PolygonSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      // Undeclared exception!
      try { 
        tabLSymbol0.draw((Graphics) null, 16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PolygonSymbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(23, 625, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      tabLSymbol0.draw(graphics0, 1, 625);
      int[] intArray0 = new int[3];
      tabLSymbol0.yPoints = intArray0;
      // Undeclared exception!
      try { 
        tabLSymbol0.draw(graphics0, 0, 35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jahuwaldt.plot.TabLSymbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      tabLSymbol0.setBorderColor((Color) null);
      tabLSymbol0.draw(graphics0, 1, 0);
      assertEquals(8, tabLSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      Color color0 = Color.LIGHT_GRAY;
      tabLSymbol0.setFillColor(color0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      tabLSymbol0.draw(graphics0, 1, 1);
      assertEquals(8, tabLSymbol0.getSize());
  }
}
