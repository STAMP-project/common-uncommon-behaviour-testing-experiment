/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 13:25:21 GMT 2019
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pmdesigns.jvc.tools.SimpleCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleCharStream_ESTest extends SimpleCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 968, 968);
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream('\"');
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pipedInputStream0, (String) null, 0, 0, 2011);
      simpleCharStream1.GetSuffix(0);
      simpleCharStream0.readChar();
      SimpleCharStream simpleCharStream2 = null;
      try {
        simpleCharStream2 = new SimpleCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6.#fgbdr8CamOa=d~!/");
      stringReader0.skip(1548L);
      stringReader0.mark(483);
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.read();
      stringReader0.reset();
      try { 
        simpleCharStream0.ReInit((InputStream) byteArrayInputStream0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X16=SEg:L");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.Done();
      char[] charArray0 = new char[9];
      charArray0[0] = '_';
      charArray0[1] = '@';
      charArray0[2] = '#';
      charArray0[3] = 'v';
      charArray0[4] = 'L';
      charArray0[5] = '6';
      charArray0[6] = 'Y';
      charArray0[7] = 'M';
      charArray0[8] = '9';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-522), 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.pmdesigns.jvc.tools.SimpleCharStream");
      int int0 = 0;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 0, 0);
      StringReader stringReader1 = new StringReader("com.pmdesigns.jvc.tools.SimpleCharStream");
      simpleCharStream0.bufcolumn = null;
      simpleCharStream0.ReInit((Reader) stringReader1, 0, 170, 0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null, 3569, 3569);
      simpleCharStream0.GetSuffix(3569);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0, 1, 1509, 1);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      // Undeclared exception!
      try { 
        simpleCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#lTQ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 4074, 4074);
      simpleCharStream0.backup(921);
      simpleCharStream0.GetImage();
      stringReader0.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleCharStream0.GetImage();
      simpleCharStream0.UpdateLineColumn('H');
      simpleCharStream0.adjustBeginLineColumn(4059, 4055);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1577);
      StringReader stringReader0 = new StringReader("'9nuy/d$VkJ-6%32tr");
      stringReader0.reset();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1577, 1577);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      simpleCharStream0.ReInit((InputStream) sequenceInputStream0, (String) null);
      stringReader0.reset();
      try { 
        simpleCharStream0.ReInit((InputStream) bufferedInputStream0, "'9nuy/d$VkJ-6%32tr");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "_!Rt#yOI<[-|aA";
      StringReader stringReader0 = new StringReader("_!Rt#yOI<[-|aA");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 968, 968);
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        simpleCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1509);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, (InputStream) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(sequenceInputStream0, (String) null);
      simpleCharStream0.ReInit((InputStream) sequenceInputStream0, (String) null, 1509, 1509, 1509);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4w[ylR4HB]R");
      StringReader stringReader1 = new StringReader("4w[ylR4HB]R");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2048, 2048, 0);
      byte[] byteArray0 = new byte[3];
      simpleCharStream0.tokenBegin = 4078;
      byteArray0[0] = (byte)8;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4w[ylR4HB]R");
      byteArray0[1] = (byte)24;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte) (-22);
      // Undeclared exception!
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1577);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0);
      simpleCharStream0.ReInit((InputStream) bufferedInputStream0);
      bufferedInputStream0.close();
      // Undeclared exception!
      try { 
        simpleCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E$\u0001`zL_<DuW");
      StringReader stringReader1 = new StringReader("E$\u0001`zL_<DuW");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2048, 2048, 0);
      byte[] byteArray0 = new byte[3];
      simpleCharStream0.prevCharIsCR = false;
      byteArray0[0] = (byte)8;
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1);
      // Undeclared exception!
      try { 
        simpleCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("nLf:U[");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      simpleCharStream1.ReInit((Reader) stringReader0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1509);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream1, 4096, 1509, 0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-123);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2048, (-932));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1), (byte)40, 0);
      simpleCharStream1.ReInit((InputStream) pipedInputStream1, (String) null, (int) (byte) (-123), (int) (byte) (-38));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        simpleCharStream0.UpdateLineColumn('&');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("f_/M&0U~#szrS;[:i?[");
      simpleCharStream0.inputStream = (Reader) stringReader0;
      simpleCharStream0.FillBuff();
      simpleCharStream0.BeginToken();
      simpleCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`XDi:jS.rj<G'P?5-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`XDi:jS.rj<G'P?5-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.readChar();
      simpleCharStream0.UpdateLineColumn('!');
      simpleCharStream0.adjustBeginLineColumn((-2119), (-2119));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(sequenceInputStream0, "ZXf+//<");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-82);
      byteArray0[1] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)83, (-12));
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("Pv.NV");
      stringReader0.read();
      simpleCharStream0.ReInit((Reader) stringReader0, (-1150), (-1150), 1687);
      // Undeclared exception!
      try { 
        simpleCharStream0.UpdateLineColumn('X');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, (InputStream) null);
      StringReader stringReader0 = new StringReader("0~cY ");
      stringReader0.read();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-58);
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream((InputStream) null, 1826, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      simpleCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qs[^qq'.f4%Or");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      // Undeclared exception!
      try { 
        simpleCharStream0.ReInit((InputStream) null, "", (-160), 0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      StringReader stringReader1 = new StringReader("F;Z_5UY^Zb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 2048, 2048, 0);
      byte[] byteArray0 = new byte[0];
      stringReader1.read();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (String) null, 922, 70);
      // Undeclared exception!
      try { 
        simpleCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.maxNextCharInd = (-713);
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      // Undeclared exception!
      try { 
        simpleCharStream0.ReInit((InputStream) sequenceInputStream0, 1055, 1055, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      StringReader stringReader1 = new StringReader("F;Z_5UY^Zb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 2067, 2067, 2067);
      byte[] byteArray0 = new byte[0];
      stringReader1.read();
      simpleCharStream0.inBuf = 1748;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2067;
      intArray0[3] = 1748;
      PipedInputStream pipedInputStream0 = new PipedInputStream(913);
      StringReader stringReader2 = new StringReader("F;Z_5UY^Zb");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 70);
      simpleCharStream0.readChar();
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1577);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0);
      simpleCharStream0.ReInit((InputStream) bufferedInputStream0);
      bufferedInputStream0.close();
      simpleCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        simpleCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 968, 968);
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader1 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1, 0, (-32));
      simpleCharStream1.GetSuffix(1);
      simpleCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 253);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(pipedInputStream0, (-27), 75, (-27));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"u_0U");
      int int0 = 910;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 910, 1);
      simpleCharStream0.ReInit((Reader) stringReader0, 910, 910);
      simpleCharStream0.readChar();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      simpleCharStream0.FillBuff();
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 976, 976);
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      simpleCharStream1.prevCharIsLF = false;
      simpleCharStream0.GetSuffix(976);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream((Reader) null, 2362, 2362, 10);
      // Undeclared exception!
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetImage();
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 968, 968);
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream('\"');
      StringReader stringReader1 = new StringReader("\"u_0U");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 968);
      simpleCharStream0.readChar();
      simpleCharStream0.getColumn();
      simpleCharStream0.backup((-1261));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("<");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.ReInit((InputStream) pipedInputStream0, 1935, 1935);
      simpleCharStream0.GetImage();
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0, (String) null, (-2227), 2406);
      simpleCharStream0.adjustBeginLineColumn((-2227), 2046);
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        simpleCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ghC95(F1ifsi)Wa06Lp");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 121, 121);
      char[] charArray0 = simpleCharStream0.buffer;
      simpleCharStream0.BeginToken();
      simpleCharStream0.ExpandBuff(true);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, (InputStream) null);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream((InputStream) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      StringReader stringReader1 = new StringReader("F;Z_5UY^Zb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 2048, 2048, 0);
      stringReader1.read();
      simpleCharStream0.GetImage();
      // Undeclared exception!
      try { 
        simpleCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2067, 2067, 0);
      stringReader0.read();
      // Undeclared exception!
      try { 
        simpleCharStream0.adjustBeginLineColumn(2067, 2067);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 500);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)121;
      byteArray0[8] = (byte)55;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(pipedInputStream0, (String) null, 500, 500, (-2044));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = "Y*]Cy/z8(f`G|";
      StringReader stringReader0 = new StringReader("Y*]Cy/z8(f`G|");
      int int0 = (-1);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(stringReader0, (-1), (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte) (-82);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      String string0 = "D+b@vXgl";
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = 'I';
      simpleCharStream0.buffer = charArray0;
      try { 
        simpleCharStream0.ReInit((InputStream) byteArrayInputStream0, "D+b@vXgl", 2143, (int) (byte)0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      int int0 = 1278;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1278, 2048, 2048);
      stringReader0.mark(32);
      simpleCharStream0.GetSuffix(2048);
      try { 
        simpleCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.pmdesigns.jvc.tools.SimpleCharStream");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1941, 1941);
      // Undeclared exception!
      try { 
        simpleCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.GetSuffix(0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"u_0U");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 10, 1278, 10);
      simpleCharStream0.GetImage();
      simpleCharStream0.GetSuffix(10);
      InputStream inputStream0 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1577);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0);
      simpleCharStream0.ReInit((InputStream) bufferedInputStream0);
      bufferedInputStream0.close();
      simpleCharStream0.ExpandBuff(false);
      // Undeclared exception!
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)98;
      byte byte0 = (byte)74;
      byteArray0[3] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      int int0 = (-2366);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(sequenceInputStream0, (-2366), (byte)0, 0);
      simpleCharStream0.ReInit((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        sequenceInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)74);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E$\u0001`zL_<DuW");
      StringReader stringReader1 = new StringReader("E$\u0001`zL_<DuW");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2048, 2048, 0);
      stringReader0.read();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)8;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E$\u0001`zL_<DuW");
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      simpleCharStream0.readChar();
      simpleCharStream0.UpdateLineColumn('!');
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
      simpleCharStream0.ExpandBuff(true);
      simpleCharStream0.getBeginLine();
      simpleCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R:iI-bi4M~zmw$@Q='");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = null;
      try {
        simpleCharStream1 = new SimpleCharStream(stringReader0, (-1), (-1), (-559));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1509);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, (InputStream) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte) (-29);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, (byte)51);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0, (String) null, (-289), (-289), 1289);
      // Undeclared exception!
      try { 
        simpleCharStream0.ReInit((InputStream) null, (int) (byte)10, (-24), (int) (byte)10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'd';
      charArray0[1] = 'y';
      charArray0[2] = 'I';
      charArray0[3] = 'd';
      simpleCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        simpleCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n");
      StringReader stringReader1 = new StringReader("F;Z_5UY^Zb");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 2067, 2067, 0);
      byte[] byteArray0 = new byte[0];
      stringReader1.read();
      simpleCharStream0.inBuf = 1748;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2067;
      intArray0[1] = 1748;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[2] = 70;
      intArray0[3] = 1748;
      intArray0[4] = 102;
      intArray0[5] = 1748;
      intArray0[6] = 1748;
      intArray0[7] = 0;
      simpleCharStream0.bufcolumn = intArray0;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 2067);
      // Undeclared exception!
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("f_/M&0U~#szrS;[:i?[");
      StringReader stringReader1 = new StringReader("f_/M&0U~#szrS;[:i?[");
      simpleCharStream0.ReInit((Reader) stringReader1, (-1432), (-1432));
      simpleCharStream0.ReInit((Reader) stringReader1, 1, 1, 1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null, 3569, 3569);
      // Undeclared exception!
      try { 
        simpleCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E$\u0001`zL_<DuW");
      StringReader stringReader1 = new StringReader("E$\u0001`zL_<DuW");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2048, 2048, 0);
      stringReader0.read();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)8;
      simpleCharStream0.inputStream = (Reader) stringReader1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E$\u0001`zL_<DuW");
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte) (-22);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      simpleCharStream0.readChar();
      simpleCharStream0.UpdateLineColumn('!');
      simpleCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      simpleCharStream0.adjustBeginLineColumn((-814), (-814));
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 10;
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 11, 10);
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, 2674, 2674, 2674);
      simpleCharStream1.FillBuff();
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tw");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.adjustBeginLineColumn(0, 0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(pipedInputStream0, "1:!NcO'Oc/", 1509, 1509);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }
}
