/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 13:10:19 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.Wall;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Wall_ESTest extends Wall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess((-2904.3682F));
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      Integer integer0 = new Integer((-1050));
      wall0.setLeftSideColor(integer0);
      wall0.setLeftSideColor(integer0);
      Float float0 = new Float((-1444.9082F));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.intersectsRectangle(2.0F, 0.0F, 2.0F, 0.01F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(2586);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float1 = new Float(1.0F);
      wall1.setArcExtent(float1);
      wall1.getPoints();
      Wall.Property.values();
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      linkedList0.add(wall0);
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      Float.min(2.0F, (-1.0F));
      Float.min(0.0F, (-2802.269F));
      Float float0 = new Float((double) (-1.0F));
      Float float1 = new Float(1.0F);
      wall0.setArcExtent(float1);
      wall1.getYArcCircleCenter();
      wall1.getLeftSideColor();
      wall0.getLength();
      wall1.containsWallEndAt((-1.0F), 0.0F, (-1.0F));
      wall1.setLeftSideColor((Integer) null);
      wall0.setYStart(2.0F);
      wall1.getPoints();
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3559.0825F), 2200.9F);
      Float float0 = new Float((-3559.0825F));
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.containsWallEndAt((-1.0F), 3496.0195F, 4229660.0F);
      Integer integer0 = new Integer(7663);
      wall0.setLeftSideColor(integer0);
      wall0.setYStart((-210.5981F));
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2016.6445F), (-2905.0F), (-1636.7941F), (-1636.7941F), (-2905.0F));
      Wall wall1 = wall0.clone();
      Wall wall2 = wall1.clone();
      wall2.setXStart((-4517.0F));
      wall2.setXStart((-4517.0F));
      Wall wall3 = wall1.clone();
      Wall wall4 = wall3.clone();
      wall4.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      Float float0 = wall2.getHeight();
      wall3.setHeightAtEnd(float0);
      wall4.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      Wall wall5 = wall2.clone();
      wall4.setWallAtEnd(wall5);
      Wall wall6 = wall3.clone();
      wall4.setWallAtEnd(wall6);
      Level level0 = new Level("", (-2016.6445F), (-2905.0F), 2135.0F);
      Wall wall7 = wall3.clone();
      wall7.isAtLevel(level0);
      wall7.getRightSideTexture();
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      wall0.getLength();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(2146670806);
      wall0.setLeftSideColor(integer1);
      Wall wall1 = wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeight();
      Float float0 = new Float(789.08704F);
      wall1.setHeightAtEnd(float0);
      wall1.setWallAtEnd(wall0);
      wall1.getWallAtEnd();
      Wall wall2 = wall1.clone();
      wall2.containsWallEndAt((-16.48859F), 1406.6182F, 3511.9763F);
      wall1.setYStart(1490.19F);
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, (-1215.02F), (-0.24844821F));
      wall0.setYEnd(119.46246F);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Float float0 = new Float((-0.24844821F));
      wall0.setArcExtent(float0);
      Float float1 = new Float((-0.24844821F));
      Wall wall1 = wall0.clone();
      wall1.setHeightAtEnd(float1);
      wall1.setArcExtent(float0);
      wall1.getPoints();
      wall1.isTrapezoidal();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.setXStart(0.01F);
      wall0.containsWallEndAt((-915.0F), (-1062.1273F), 0.0F);
      wall0.setLeftSideShininess(1514.9F);
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd((-5681.871F));
      Float float0 = new Float((-1.0));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(1887);
      Integer.max(1887, 17);
      wall0.setRightSideColor(integer0);
      wall0.setHeight(float0);
      Float float1 = new Float((-1.0F));
      Float.max(17, 1049.1573F);
      Wall wall2 = wall0.clone();
      wall2.setArcExtent(float0);
      wall0.getPoints();
      wall2.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, (-0.24844821F));
      wall0.setYEnd((-0.24844821F));
      wall0.setYEnd((-782.8F));
      Float float0 = new Float((-782.8F));
      Level level0 = new Level("com.eteks.sweethome3d.tools.ResourceURLContent", 0.01F, 0.0F, 2182.519F);
      wall0.setLevel(level0);
      Float float1 = new Float((double) (-0.24844821F));
      wall0.setArcExtent(float1);
      wall0.getPoints();
      wall0.getPattern();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Wall wall0 = new Wall(3698.0994F, 1.0F, 3698.0994F, 1.0F, 114.7F, 1.0F);
      Float float0 = new Float((-425.9437079499402));
      wall0.setHeightAtEnd(float0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setLeftSideShininess(2.0F);
      Float.isFinite(2.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall1.getWallAtEnd();
      Level level0 = new Level("3#1-7", 789.08704F, 789.08704F, (-2905.0F));
      Level level1 = level0.clone();
      wall2.setLevel(level1);
      Wall wall3 = new Wall(789.08704F, 2.0F, 2.0F, 789.08704F, (-2905.0F));
      Integer integer0 = new Integer(56);
      Integer.toUnsignedString((-1761));
      wall3.setRightSideColor(integer0);
      wall1.getArcExtent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall1.getPoints();
      wall3.getPoints();
      wall0.getLeftSideShininess();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.containsWallStartAt(1.0F, (-848.1759F), 1741.09F);
      wall0.setRightSideShininess((-2904.3682F));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallStartAt(0.0F, 220.93974F, (-687.798F));
      wall0.setThickness(1.0F);
      wall0.setYEnd(2.0F);
      wall0.setRightSideColor((Integer) null);
      wall0.isAtLevel((Level) null);
      wall0.setHeight((Float) null);
      Wall wall1 = new Wall(0.01F, 288.35562F, 1055.0F, (-179.88893F), (-1.0F));
      wall1.containsWallEndAt(3768.0735F, 1.0F, 0.0F);
      wall0.setYStart(1.0F);
      wall1.getLength();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3559.0825F), 2200.9F);
      Float.min(1.0F, 0.1F);
      Float float0 = new Float(3.141592653589793);
      Float.min(0.1F, (-3559.0825F));
      wall0.setArcExtent(float0);
      wall0.containsWallEndAt(2200.9F, 0.0F, (-801.2958F));
      wall0.setYStart((-1791.1349F));
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setXStart(0.0F);
      Float float0 = new Float((double) 1.0F);
      wall1.setHeight(float0);
      wall1.setXStart(0.0F);
      Wall wall2 = wall1.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall1);
      Wall.clone((List<Wall>) linkedList0);
      wall2.getYEnd();
      wall2.isTrapezoidal();
      Float float1 = new Float(0.0F);
      wall1.getHeightAtEnd();
      wall1.setArcExtent((Float) null);
      wall1.getPoints();
      Wall.Property.values();
      wall1.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      wall0.containsWallEndAt(0.01F, (-915.0F), 0.01F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Integer integer0 = new Integer(2586);
      wall1.setRightSideColor(integer0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float0 = new Float((double) 2586);
      wall1.setArcExtent(float0);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      wall1.intersectsRectangle((-1043.6F), 0.0F, (-1374.34F), 220.93974F);
      wall1.intersectsRectangle((-1374.34F), (-1043.6F), 390.65F, 220.93974F);
      wall0.getLeftSideTexture();
      wall1.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtStart(wall0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Float float1 = new Float(0.01F);
      Float float2 = new Float(3.1415927410125732);
      wall0.setArcExtent(float0);
      wall1.getPoints();
      wall1.getLeftSideShininess();
      wall1.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.setYStart((-2905.0F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.setArcExtent((Float) null);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3768.35F, (-1776.1F), 0.0F, 0.0F, 3768.35F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, 1.0F, 0.1F);
      wall0.getLevel();
      wall1.setLevel((Level) null);
      wall0.setWallAtStart(wall1);
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(2.0F);
      wall0.setRightSideShininess(2.0F);
      wall0.setLeftSideShininess(2.0F);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Float float0 = new Float((double) (-2905.0F));
      wall0.getRightSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Wall wall0 = new Wall(0.034522995F, 0.034522995F, 0.034522995F, 0.034522995F, 0.034522995F, 0.034522995F);
      wall0.getLeftSideColor();
      wall0.setLeftSideColor((Integer) null);
      wall0.getPoints();
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Wall wall0 = new Wall(2200.5354F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3559.0825F), 2200.5354F);
      Float float0 = new Float(3.141592653589793);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.containsWallEndAt((-801.2958F), (-4844.91F), (-4844.91F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3519.17F), (-1.0F));
      Float.min(1.0F, 0.1F);
      Float float0 = new Float(3.141592653589793);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      Wall wall1 = new Wall(1.0F, 3.1415927F, (-3519.17F), 0.1F, 381.14816F);
      wall0.getWallAtEnd();
      wall1.getXArcCircleCenter();
      wall0.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, (-1215.02F), (-0.24844821F));
      wall0.setYEnd((-0.24844821F));
      Float float0 = new Float((-0.24844821F));
      wall0.setArcExtent(float0);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.setYStart((-1472.0F));
      wall1.getYArcCircleCenter();
      // Undeclared exception!
      try { 
        wall0.getPoints();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(2586);
      wall1.setRightSideColor(integer0);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float1 = new Float(1.0F);
      wall1.setArcExtent(float1);
      wall1.getPoints();
      Wall.Property.values();
      wall0.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.setWallAtEnd(wall1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(60);
      wall1.setLeftSideColor(integer0);
      wall0.containsWallEndAt((-284.7009F), 294.60873F, 2.1193767F);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Wall wall0 = new Wall((-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F));
      wall0.getPoints();
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2324.705F));
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, 1.3928504F, 1.3928504F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall1.setXStart(1994.6293F);
      Float.isFinite((-2905.0F));
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2905.0F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Wall wall0 = new Wall(771.0F, 771.0F, 771.0F, 771.0F, 771.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.setWallAtStart(wall0);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Wall wall0 = new Wall(790.17175F, 790.17175F, 790.17175F, 790.17175F, 790.17175F);
      Integer.sum(2796, 0);
      Integer integer0 = new Integer(2796);
      Integer.getInteger("90", integer0);
      Integer.divideUnsigned(0, 1278);
      Integer integer1 = new Integer((-2279));
      wall0.setRightSideColor(integer1);
      wall0.getXStart();
      wall0.getRightSideColor();
      wall0.getXEnd();
      Wall wall1 = wall0.clone();
      wall1.setPattern((TextureImage) null);
      wall0.setYStart(2796);
      wall1.getLeftSideShininess();
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Wall wall0 = new Wall(71.9F, 3003.6F, 3168.959F, 3003.6F, 1103.1F, 3168.959F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n2?PHX*k.2fmyc", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getLeftSideTexture();
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(2015.7F, (-3016.0F), 2015.7F, (-3016.0F), 0.0F);
      wall0.containsWallStartAt(0.0F, 0.0F, 220.93974F);
      wall0.setThickness(288.35562F);
      wall0.setYEnd((-1.0F));
      wall0.setRightSideColor((Integer) null);
      wall0.isAtLevel((Level) null);
      wall0.setHeight((Float) null);
      Wall wall1 = new Wall(0.0F, 1460.924F, (-3016.0F), (-1.0F), 3640.9F);
      wall0.getWallAtEnd();
      wall1.getXArcCircleCenter();
      Level level0 = new Level("/'^*n)wz7!", 220.93974F, 0.0F, 220.93974F);
      wall0.setLevel(level0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
      Wall wall0 = new Wall((-1264.1819F), 0.0F, (-1264.1819F), (-4723.4F), (-1617.2804F));
      Wall wall1 = wall0.clone();
      Wall wall2 = wall1.clone();
      wall0.containsWallEndAt(0.0F, 2.0F, (-1617.2804F));
      wall1.containsWallStartAt((-4723.4F), 2197.276F, (-4723.4F));
      wall2.setArcExtent((Float) null);
      Wall.Property.values();
      wall2.getLevel();
      wall1.setLevel((Level) null);
      Integer integer0 = new Integer(2552);
      Integer.getInteger("q,|MyHN3vz.Y^", integer0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Integer.divideUnsigned(3, 23);
      wall1.setLeftSideColor(integer0);
      wall1.setLeftSideColor(integer0);
      wall1.getLength();
      wall0.getLeftSideShininess();
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.setWallAtEnd(wall1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(60);
      wall1.setLeftSideColor(integer0);
      wall1.setXEnd(294.60873F);
      wall0.containsWallEndAt((-284.7009F), 294.60873F, 2.1193767F);
      wall1.getPoints();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3769.3198F, (-1776.1F), 0.0F, 0.0F, 3769.3198F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, (-306.2909F), 0.1F);
      wall0.getLevel();
      wall1.setLevel((Level) null);
      Float float0 = new Float(0.0F);
      wall0.setHeightAtEnd(float0);
      wall0.getLeftSideTexture();
      wall0.getLeftSideColor();
      wall0.getLeftSideColor();
      wall1.getLength();
      wall1.setArcExtent(float0);
      wall1.getThickness();
      wall0.setHeightAtEnd(float0);
      wall1.getPattern();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      wall0.getLength();
      Wall wall1 = wall0.clone();
      Float float0 = new Float(789.08704F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall1.setHeightAtEnd(float0);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.containsWallEndAt(0.0F, 2.0F, 2.0F);
      wall0.setYStart(0.1F);
      Float float1 = new Float(2.0F);
      wall1.setArcExtent(float1);
      wall1.getPoints();
      Float float2 = new Float(31.31001F);
      wall0.setArcExtent(float2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Wall wall0 = new Wall((-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F));
      Float float0 = new Float((-1215.02F));
      wall0.setHeight(float0);
      wall0.setYStart((-1.0F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.21631251F, 0.21631251F, 0.0F);
      wall0.getRightSideColor();
      Float float0 = new Float(0.0F);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3768.35F, (-1776.1F), 0.0F, 0.0F, 3768.35F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, 1.0F, 0.1F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.setWallAtStart(wall1);
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setYStart(3768.35F);
      wall0.setLeftSideShininess(2.0F);
      wall0.setRightSideShininess(2.0F);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Wall wall0 = new Wall((-1.4775244F), 0.0F, 0.0F, (-1.4775244F), (-1215.02F), 0.0F);
      Level level0 = new Level(" 8[x", 0.0F, (-1.4775244F), (-1.0F));
      wall0.setLevel(level0);
      Level level1 = new Level((String) null, (-1.4775244F), -0.0F, (-1.0F));
      Level level2 = wall0.getLevel();
      level2.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Wall wall0 = new Wall((-1444.9082F), 2.0F, 2.0F, 325.84998F, (-1444.9082F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-298.4685F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Wall wall0 = new Wall((-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RIGHT_SIDE_SHININESS", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getPoints();
      Float float0 = new Float(3.141592653589793);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = new Float((double) 0.0F);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      Level level0 = new Level((String) null, 1.0F, (-2905.0F), (-1931.2F));
      wall0.setLevel(level0);
      Float float0 = new Float((-384.0102653864));
      wall0.setArcExtent(float0);
      Level level1 = wall0.getLevel();
      level0.clone();
      wall1.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(2586);
      Integer.max(2586, 2586);
      Float.min(1.0F, 1.0F);
      wall1.setRightSideColor(integer0);
      wall0.setHeight(float0);
      wall1.clone();
      Float float1 = new Float((-2905.0F));
      Float.max(0.01F, 2788.974F);
      Wall wall2 = wall0.clone();
      wall2.setArcExtent(float1);
      wall1.getPoints();
      wall1.isTrapezoidal();
      wall2.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float.isFinite(1.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      Float float0 = new Float(1.0001);
      wall1.setHeightAtEnd(float0);
      wall1.setYEnd(0.0F);
      wall0.getLeftSideTexture();
      Wall wall2 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.61104083F);
      wall2.getLeftSideColor();
      wall0.setHeightAtEnd((Float) null);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 1157.9F, 0.0F, 806.19F, 2371.819F);
      wall0.containsWallStartAt(770.67F, 220.93974F, 2371.819F);
      wall0.setThickness(220.93974F);
      wall0.setYEnd((-2992.4885F));
      Integer integer0 = new Integer(964);
      wall0.setRightSideColor(integer0);
      wall0.isAtLevel((Level) null);
      Float float0 = new Float(2040.3081F);
      wall0.setHeight(float0);
      wall0.containsWallEndAt(693.1337F, 0.0F, 2200.9F);
      wall0.setYStart(2788.974F);
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Wall wall0 = new Wall(71.9F, 3003.6F, 3168.959F, 3003.6F, 1103.1F, 1.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("n2?PHX*k.2fmyc", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.isTrapezoidal();
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, 0.1F, (-801.2958F), 0.1F, (-801.2958F), 0.1F);
      wall0.getPoints();
      Integer integer0 = new Integer(882);
      Integer integer1 = new Integer((-844));
      Integer.sum((-1), 0);
      Integer.getInteger("1.5.0_16", integer1);
      Wall wall1 = new Wall(3902.5F, (-1), 882, (-265.9098F), (-265.9098F), (-2905.0F));
      wall0.setWallAtStart(wall1);
      Integer.divideUnsigned((-2279), 882);
      wall0.setRightSideColor(integer0);
      wall0.getXStart();
      wall0.getRightSideColor();
      wall0.getXEnd();
      Wall wall2 = wall0.clone();
      wall2.setPattern((TextureImage) null);
      wall0.setYStart((-1113.0F));
      wall0.getLeftSideShininess();
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Wall wall0 = new Wall((-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F));
      wall0.getPoints();
      wall0.setXStart((-2324.705F));
      Float float0 = new Float(3.141592653589793);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Wall wall0 = new Wall((-801.2958F), 612.7F, (-801.2958F), (-801.2958F), 2200.9F);
      wall0.getPoints();
      Float.min(0.0F, 0.0F);
      float float0 = new Float((-3519.17F));
      Float float1 = new Float((double) (-3519.17F));
      wall0.setArcExtent(float1);
      wall0.getYArcCircleCenter();
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.setArcExtent((Float) null);
      wall0.getPoints();
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, 1.3928504F, 1.3928504F, (-2905.0F));
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setYStart((-2905.0F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 0.01F);
      wall0.move(0.01F, 334.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      Float float0 = new Float(0.01F);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.isFinite(2.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      wall2.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.setWallAtStart(wall1);
      Wall wall3 = new Wall(789.08704F, 2.0F, 2.0F, 789.08704F, (-2905.0F));
      Level level0 = new Level("&2", (-2905.0F), (-2905.0F), (-952.1514F));
      wall1.setLevel(level0);
      Float float0 = new Float((double) (-2905.0F));
      wall0.setArcExtent(float0);
      Level level1 = new Level("jar:", 789.08704F, 56, 2.0F);
      level0.clone();
      wall2.getLevel();
      wall1.isAtLevel((Level) null);
      wall2.clone();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), 0.0F, 905.2F, 905.2F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 0.0F, 0.0F, "com.eteks.sweethome3d.model.Wall", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 0.6140808F, 1319.8213F, 1.3928504F, (-368.32F));
      Wall wall1 = wall0.clone();
      Float.isFinite(1.3928504F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setYStart((-368.32F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      Integer integer0 = new Integer(0);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer integer1 = new Integer(0);
      Integer.compareUnsigned(0, 15);
      Integer.getInteger("");
      wall0.setRightSideColor(integer0);
      wall0.setLeftSideColor(integer0);
      wall0.getArcExtent();
      wall0.getArcExtent();
      wall0.getYEnd();
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.move(0, 1.0F);
      wall0.getLength();
      Wall wall1 = wall0.clone();
      wall1.getLeftSideShininess();
      wall1.containsWallStartAt(15, (-1.0F), (-1));
      wall1.setXEnd((-2236.6125F));
      wall1.getXArcCircleCenter();
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setXStart(0.0F);
      wall1.setXStart(0.0F);
      Wall wall2 = wall1.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall1);
      Wall.clone((List<Wall>) linkedList0);
      Wall wall3 = new Wall(2015.8007F, 0.01F, (-709.45F), (-4946.808F), 1.0F);
      wall2.getWallAtEnd();
      wall3.getXArcCircleCenter();
      wall3.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Wall wall0 = new Wall(2397.8F, 2397.8F, (-1830.6641F), 2397.8F, 3653.092F, (-1830.6641F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall1.setRightSideShininess(2397.8F);
      wall1.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      wall0.getLeftSideColor();
      wall0.setLeftSideColor((Integer) null);
      wall0.setRightSideColor((Integer) null);
      Float float0 = new Float((-2905.0F));
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      wall0.getLeftSideShininess();
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer.getInteger("");
      wall0.getArcExtent();
      wall0.getArcExtent();
      Integer integer0 = new Integer((-637));
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.getLength();
      Wall wall1 = wall0.clone();
      wall0.getLeftSideShininess();
      wall1.setRightSideShininess(0.0F);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.setXStart(0.01F);
      wall0.setXStart(770.67F);
      wall0.intersectsRectangle((-2641.0F), 288.5F, 1.0F, 0.01F);
      wall0.intersectsRectangle(1.0F, (-4783.455F), 770.67F, 2473.0F);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      wall0.setThickness(288.5F);
      Float float0 = new Float(2473.0F);
      Float.max(618.627F, 2473.0F);
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, (-1215.02F), (-1215.02F));
      Float float0 = new Float((double) 0.0F);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getPoints();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.setYStart(0.0F);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall0.setXStart(0.0F);
      wall1.setXStart(0.0F);
      Wall wall2 = wall1.clone();
      Float float0 = new Float(0.0F);
      wall1.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtEnd(wall2);
      Wall wall3 = wall0.getWallAtEnd();
      wall3.setWallAtEnd(wall2);
      wall1.containsWallEndAt(0.0F, 2.0F, 0.0F);
      wall2.setYStart(2.0F);
      Wall wall4 = wall2.clone();
      wall4.getYArcCircleCenter();
      wall3.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.getLeftSideColor();
      wall0.setHeightAtEnd((Float) null);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(2586);
      wall1.setRightSideColor(integer0);
      wall0.setHeight(float0);
      Wall wall2 = new Wall(1.0F, (-2905.0F), (-686.009F), 2586, 2586, 0.0F);
      Wall wall3 = wall2.clone();
      wall3.containsWallEndAt(0.0F, (-368.08F), 0.0F);
      wall0.setYStart((-1183.62F));
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Wall wall0 = new Wall(790.17175F, 790.17175F, 790.17175F, 790.17175F, 790.17175F);
      wall0.setThickness((-1468.2F));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Integer integer0 = new Integer(2586);
      wall1.setRightSideColor(integer0);
      wall0.getYEnd();
      Integer integer1 = new Integer(1431655765);
      wall1.getArcExtent();
      Float float0 = new Float(0.0);
      wall0.setHeightAtEnd(float0);
      wall0.getRightSideTexture();
      wall1.getLeftSideColor();
      wall1.getLength();
      wall0.clone();
      wall0.getLeftSideShininess();
      wall1.containsWallStartAt((-1.0F), 412.08267F, (-915.0F));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), 0.0F, 0.0F, (-1.0F), (-1215.02F), 0.0F);
      wall0.setYEnd((-1.0F));
      Float float0 = new Float((-1.0F));
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.setWallAtEnd(wall1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      wall1.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setArcExtent(float0);
      Integer integer0 = new Integer(60);
      wall1.setLeftSideColor(integer0);
      wall0.containsWallEndAt((-284.7009F), 294.60873F, 2.1193767F);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Level level0 = new Level("J7d :{2>;_", 1506.3402F, (-3525.0F), (-834.732F));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Wall wall0 = new Wall(998.0F, 998.0F, 838.3F, 258.29028F, 1.0F, 1551.2137F);
      wall0.setLevel(level0);
      level0.setVisible(false);
      Level level1 = new Level("WALL_AT_START", 838.3F, 838.3F, (-306.2909F));
      Level level2 = level0.clone();
      wall0.isAtLevel(level2);
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, (-0.24844821F));
      wall0.setYEnd((-0.24844821F));
      Float float0 = new Float((double) 0.0F);
      wall0.setArcExtent(float0);
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      float float0 = (-1815.9573F);
      Wall wall0 = new Wall(0.0F, 0.0F, (-1815.9573F), (-1815.9573F), (-1815.9573F));
      Float float1 = new Float((double) 0.0F);
      Float.min((-1815.9573F), (-2301.6785F));
      Float.min(0.0F, (-1815.9573F));
      wall0.setArcExtent(float1);
      wall0.getYArcCircleCenter();
      wall0.getXStart();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("jj6N$RZq5b8f#AoC3K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.jj6N$RZq5b8f#AoC3K
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 0.01F, 0.01F, 1.0F, 0.01F, 1.3928504F);
      Wall wall1 = wall0.clone();
      Float.isFinite((-19.1374F));
      Float float0 = new Float(500.8F);
      wall1.setArcExtent(float0);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setYStart((-19.1374F));
      wall1.getYArcCircleCenter();
      wall0.getPoints();
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Wall wall0 = new Wall(2182.52F, 2182.52F, 2182.52F, 2182.52F, 2182.52F);
      Level level0 = new Level("rUP,", 789.087F, 789.087F, 2182.52F);
      wall0.setLevel(level0);
      Level level1 = new Level("rUP,", 2182.52F, 2182.52F, 1506.3402F);
      level0.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3768.35F, (-1776.1F), 0.0F, 0.0F, 3768.35F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, 1.0F, 0.1F);
      wall0.getLevel();
      wall1.setLevel((Level) null);
      wall0.setWallAtStart(wall1);
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(2.0F);
      wall0.containsWallStartAt(1153.3792F, 0.0F, (-655.60614F));
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      wall0.setWallAtEnd(wall0);
      Float float0 = new Float((-2905.0F));
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Wall wall0 = new Wall(2200.5354F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3559.0825F), 2200.5354F);
      Float float0 = new Float(3.141592653589793);
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.containsWallEndAt((-801.2958F), (-4844.91F), (-4844.91F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, 2200.9F, 2200.9F, 2200.9F, 0.01F, 2200.9F);
      wall0.setYEnd((-638.06F));
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      Float.min((-915.0F), 2200.9F);
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      float float0 = 0.0F;
      Wall wall0 = new Wall((-4556.9F), 0.0F, (-4556.9F), 0.0F, (-1215.02F), 0.0F);
      wall0.setYEnd(119.46246F);
      Float float1 = new Float(0.0F);
      wall0.setArcExtent(float1);
      wall0.getLeftSideColor();
      wall0.getLength();
      Integer integer0 = new Integer((-165));
      wall0.setLeftSideColor(integer0);
      float float2 = 727.52F;
      wall0.setYStart(727.52F);
      wall0.getPoints();
      wall0.getPoints();
      String string0 = "Y_START";
      Class<Object> class0 = Object.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "Y_START");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource Y_START
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(2146508361);
      wall0.setLeftSideColor(integer0);
      Wall wall1 = wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeight();
      Wall wall2 = new Wall((-801.2958F), 2157.23F, 2157.23F, (-1.0F), (-401.37152F), (-770.173F));
      wall2.setLeftSideTexture((HomeTexture) null);
      wall2.setWallAtEnd(wall1);
      Wall wall3 = wall2.getWallAtEnd();
      Wall wall4 = wall3.clone();
      wall1.setWallAtEnd(wall2);
      wall4.containsWallEndAt(2157.23F, (-2536.0F), 2146508361);
      wall1.setYStart((-770.173F));
      wall3.getYArcCircleCenter();
      wall2.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2016.6445F), (-2905.0F), (-1636.7941F), (-1636.7941F), (-2905.0F));
      Wall wall1 = wall0.clone();
      Wall wall2 = wall1.clone();
      wall2.setXStart((-4517.0F));
      wall2.setXStart((-4517.0F));
      Wall wall3 = wall1.clone();
      wall1.intersectsRectangle((-2641.0F), (-2442.7F), (-1043.6F), 1.0F);
      wall3.intersectsRectangle((-2641.0F), 0.0F, 288.5F, (-4517.0F));
      wall1.getLeftSideTexture();
      wall2.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtStart(wall2);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Float float0 = new Float((-257.338F));
      Float float1 = new Float((double) (-2641.0F));
      wall3.setArcExtent(float1);
      wall3.getPoints();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      Float float0 = new Float((double) (-915.0F));
      wall0.setHeight(float0);
      Integer integer0 = new Integer(2586);
      Integer.max(2586, 2586);
      Float float1 = new Float((-1656.6F));
      Wall wall2 = new Wall(2586, 0.01F, 1831.37F, (-801.2958F), 1274.71F, 535.0473F);
      Float float2 = new Float((float) 2586);
      wall2.setHeightAtEnd(float2);
      wall0.setWallAtEnd(wall2);
      Wall wall3 = wall0.getWallAtEnd();
      wall0.setWallAtEnd(wall2);
      wall3.containsWallEndAt((-208.5F), 0.1F, (-467.45264F));
      wall1.setYStart((-1476.2388F));
      wall2.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(2015.9849F, (-3016.0F), 2015.9849F, (-3016.0F), 0.0F);
      wall0.setThickness(288.35562F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall0);
      Wall.clone((List<Wall>) linkedList0);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float0 = new Float((-1.0F));
      wall0.getHeightAtEnd();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.getPoints();
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1.0F), (-1215.02F), (-1215.02F));
      Float float0 = new Float(291427.81337991764);
      wall0.setArcExtent(float0);
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess((-2905.0F));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Wall wall0 = new Wall(5301.3374F, 5301.3374F, (-3085.2334F), 5301.3374F, 5301.3374F, 3809.2034F);
      wall0.getPoints();
      Float float0 = new Float((double) 5301.3374F);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      // Undeclared exception!
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Float float0 = new Float((-2905.0F));
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.getPoints();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.getLeftSideTexture();
      Wall wall1 = new Wall(463.57F, (-1.0F), 1.0F, (-2904.3682F), 1.0F, (-1.0F));
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setYStart(2525.109F);
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, 1.3928504F, 1.3928504F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2905.0F));
      wall1.getPoints();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Wall wall0 = new Wall((-4556.9F), 0.0F, (-4556.9F), 0.0F, (-1215.02F), 0.0F);
      wall0.setYEnd(119.46246F);
      Float float0 = new Float(3511.9763F);
      wall0.setArcExtent(float0);
      Float.min(5844.0986F, (-1.0F));
      Wall wall1 = wall0.clone();
      wall1.setArcExtent(float0);
      wall0.getPoints();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "#Y", object1, wall0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      Integer integer0 = new Integer(60);
      wall0.setLeftSideColor(integer0);
      wall0.containsWallEndAt((-284.7009F), 294.60873F, 2.1193767F);
      wall0.getPoints();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      wall0.getLeftSideTexture();
      Wall wall1 = wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeight();
      Float float0 = new Float(789.08704F);
      wall1.setHeightAtEnd(float0);
      wall1.setWallAtEnd(wall0);
      Wall wall2 = wall1.getWallAtEnd();
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall2);
      Float.max((-1549.1F), (-0.040260173F));
      Wall wall3 = wall1.clone();
      wall3.getPoints();
      wall0.isTrapezoidal();
      wall3.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Wall wall0 = new Wall((-4556.9F), 0.0F, (-4556.9F), 0.0F, (-4556.9F), 0.0F);
      wall0.setYEnd(119.46246F);
      wall0.getXStart();
      Wall wall1 = wall0.clone();
      Float.valueOf(0.0F);
      wall0.setWallAtStart(wall1);
      Wall wall2 = new Wall((-4556.9F), 5813.731F, 5813.731F, 0.0F, (-99.999794F));
      wall2.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall2);
      wall0.setWallAtEnd(wall1);
      wall1.containsWallEndAt(0.0F, 1.0F, (-4556.9F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Integer integer0 = new Integer(882);
      Integer integer1 = new Integer((-844));
      Integer.sum((-1), 0);
      Integer.getInteger("1.5.0_16", integer1);
      Integer.divideUnsigned((-2279), 882);
      wall0.setRightSideColor(integer0);
      wall0.getXStart();
      wall0.getRightSideColor();
      wall0.getXEnd();
      Wall wall1 = wall0.clone();
      wall1.setPattern((TextureImage) null);
      wall0.setYStart((-1113.0F));
      wall0.getLeftSideShininess();
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float.isFinite((-4945.72F));
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall1.clone();
      wall2.setWallAtEnd(wall1);
      Wall wall3 = wall1.getWallAtStart();
      Wall wall4 = new Wall(0.0F, 0.0F, (-1.0F), (-364.0F), (-857.75F));
      Integer integer0 = new Integer(544);
      wall2.containsWallEndAt(1139.0F, 2971.607F, 917.04F);
      wall3.getPoints();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(2015.7F, (-3016.0F), 2015.7F, (-3016.0F), 0.0F);
      wall0.containsWallStartAt(0.0F, 0.0F, 220.93974F);
      wall0.setThickness(288.35562F);
      wall0.setYEnd((-1.0F));
      wall0.setRightSideColor((Integer) null);
      wall0.isAtLevel((Level) null);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float0 = new Float(288.35562F);
      wall0.setArcExtent((Float) null);
      wall0.getPoints();
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Wall wall0 = new Wall(2182.519F, (-221.4763F), (-1281.5348F), 0.0F, (-1777.1107F));
      float float0 = new Float(0.0F);
      Float float1 = new Float((double) 1.0F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.setHeight(float1);
      Float.min((-1.0F), (-1540.0F));
      Wall wall2 = wall1.clone();
      wall0.setArcExtent(float1);
      wall0.getPoints();
      wall2.getPoints();
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3519.17F), 2200.9F);
      Float.min(1.0F, 0.1F);
      Float float0 = new Float(3.141592653589793);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.containsWallEndAt(0.0F, 1.0F, 3679.0706F);
      wall0.setYStart(2200.9F);
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Wall wall0 = new Wall(464.7116F, (-3185.9407F), (-3185.9407F), 464.7116F, 464.7116F);
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.setXStart(0.01F);
      wall0.setXStart(770.67F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      wall0.intersectsRectangle((-2641.0F), 288.5F, 1.0F, 0.01F);
      wall0.intersectsRectangle(1.0F, (-4783.455F), 770.67F, 2473.0F);
      wall0.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setHeight((Float) null);
      wall0.setWallAtStart(wall0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      wall0.setThickness(288.5F);
      Wall wall1 = wall0.getWallAtStart();
      wall1.getLength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall1.setYStart(872.01996F);
      wall1.getPoints();
      wall0.setArcExtent((Float) null);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.isFinite(2.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall0.getWallAtStart();
      wall2.setWallAtStart(wall1);
      Wall wall3 = new Wall(789.08704F, 2.0F, 2.0F, 789.08704F, (-2905.0F));
      Integer integer0 = new Integer(56);
      wall3.setRightSideColor(integer0);
      Float float0 = new Float((double) 2.0F);
      wall0.containsWallEndAt((-3970.4307F), 2.0F, 789.08704F);
      wall2.getPoints();
      wall3.getPoints();
      wall3.getPoints();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, 1.3928504F, 1.3928504F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2905.0F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.setXEnd(0.0F);
      Integer integer0 = new Integer(2586);
      wall1.setRightSideColor(integer0);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      wall0.setXStart((-1.0F));
      wall1.setXStart(0.0F);
      Wall wall2 = wall0.clone();
      wall1.intersectsRectangle(2586, (-4783.455F), 1.0F, (-2641.0F));
      wall2.intersectsRectangle(288.5F, 288.5F, 0.01F, 0.0F);
      wall2.getLeftSideTexture();
      wall1.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtStart(wall1);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.setRightSideShininess((-915.0F));
      Float float0 = new Float(1620.1670081);
      wall1.setHeightAtEnd(float0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(2015.7F, (-3016.0F), 2015.7F, (-3016.0F), 0.0F);
      wall0.containsWallStartAt(0.0F, 0.0F, 220.93974F);
      wall0.setThickness(288.35562F);
      wall0.setYEnd((-1.0F));
      wall0.setRightSideColor((Integer) null);
      wall0.isAtLevel((Level) null);
      wall0.setHeight((Float) null);
      wall0.containsWallEndAt(0.01F, (-1.0F), 0.0F);
      wall0.setYStart(2369.094F);
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      float float0 = 2.0F;
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      wall1.getLeftSideTexture();
      float float1 = 0.0F;
      Float.min(0.0F, 0.0F);
      Float float2 = new Float((double) 2.0F);
      wall0.setArcExtent(float2);
      wall0.getYArcCircleCenter();
      wall1.getXStart();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 548.6F, 111.932F, (-1679.6F));
      Wall wall1 = wall0.clone();
      wall1.setXStart((-60.983F));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.intersectsRectangle(0.01F, (-4783.455F), 770.67F, 2473.0F);
      wall0.getLeftSideTexture();
      wall0.getLevel();
      wall0.setWallAtStart(wall0);
      wall0.getLeftSideColor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      wall0.getLength();
      Float float0 = new Float((double) 2473.0F);
      wall0.getThickness();
      wall0.setHeightAtEnd(float0);
      Wall wall1 = wall0.getWallAtStart();
      wall1.getPoints();
      wall0.getRightSideShininess();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      wall0.setLeftSideShininess((-915.0F));
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(312);
      wall0.setRightSideColor(integer0);
      CatalogTexture catalogTexture0 = new CatalogTexture("IeM%nf", (Content) null, 0.0F, 0.0F);
      wall1.setPattern(catalogTexture0);
      wall0.setXEnd(0.0F);
      Integer integer1 = new Integer(1371);
      Integer integer2 = new Integer(2586);
      wall0.setRightSideColor(integer2);
      wall0.getYEnd();
      wall0.isTrapezoidal();
      Float float0 = new Float(3.1415927410125732);
      wall0.setArcExtent(float0);
      wall0.getLeftSideColor();
      wall1.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Wall wall0 = new Wall((-1466.6F), (-1661.085F), (-1661.085F), 3567.0F, (-1466.6F), (-1466.6F));
      wall0.setXEnd((-1466.6F));
      Float float0 = new Float(0.18798828125);
      Float.max((-1466.6F), (-1661.085F));
      wall0.setArcExtent(float0);
      wall0.getLength();
      Integer integer0 = new Integer(500);
      Integer.getInteger("", (-2146744664));
      Integer.toUnsignedString(2146744530);
      wall0.setRightSideColor(integer0);
      wall0.getWallAtStart();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, (-1661.085F), 3567.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Wall wall0 = new Wall((-4556.9F), 0.0F, (-4556.9F), 0.0F, (-1215.02F), 0.0F);
      wall0.setYEnd(119.46246F);
      Float float0 = new Float(3511.9763F);
      wall0.setArcExtent(float0);
      Float.min(5875.0F, (-1.0F));
      Wall wall1 = wall0.clone();
      wall1.setArcExtent(float0);
      wall0.getPoints();
      wall0.getRightSideTexture();
      wall1.setLeftSideTexture((HomeTexture) null);
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Float.isFinite((-2905.0F));
      Float float0 = new Float((-2905.0F));
      wall1.setHeightAtEnd(float0);
      wall0.setYEnd(789.08704F);
      wall0.getLeftSideTexture();
      wall1.getLeftSideColor();
      wall0.setHeightAtEnd(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      wall0.getLeftSideShininess();
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer.getInteger("");
      wall0.getArcExtent();
      wall0.getArcExtent();
      float float0 = new Integer((-637));
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.clone();
      wall0.getLeftSideShininess();
      wall0.containsWallStartAt((-5627.084F), (-655.60614F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3769.3198F, (-1776.1F), 0.0F, 0.0F, 3769.3198F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, (-306.2909F), 0.1F);
      wall0.getLevel();
      wall1.setLevel((Level) null);
      Float float0 = new Float(0.0F);
      wall0.setHeightAtEnd(float0);
      wall0.getLeftSideTexture();
      wall0.getLeftSideColor();
      Float float1 = new Float((double) 2.0F);
      wall1.setHeight(float1);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Wall wall0 = new Wall(1029.7795F, 0.01F, 1340.3F, 0.01F, 112.7F);
      wall0.getPoints();
      Float.min(1.7877625F, 1.0F);
      Float float0 = new Float((double) 0.0F);
      Wall wall1 = new Wall((-1.0F), (-591.6323F), 0.0F, (-951.0F), 1.0F);
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtStart();
      wall0.setWallAtEnd(wall2);
      Wall wall3 = new Wall(1340.3F, 0.01F, (-196.40033F), 0.01F, 2306.724F);
      wall2.setWallAtEnd(wall3);
      wall0.setHeight(float0);
      Float float1 = new Float((-2905.0F));
      Float.max(1.0F, 279.07F);
      Float float2 = new Float(2.0F);
      wall2.setArcExtent(float2);
      Float float3 = new Float(1.0F);
      wall3.setArcExtent(float3);
      wall0.getPoints();
      wall1.getRightSideTexture();
      wall1.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Wall wall0 = new Wall(2182.52F, 2182.52F, 2182.52F, 2182.52F, 2182.52F, 2182.52F);
      Level level0 = new Level("rUP,", 2182.52F, 2182.52F, 2182.52F);
      wall0.setLevel(level0);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      wall0.isAtLevel(level2);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Wall wall0 = new Wall(15.11574F, 15.11574F, 15.11574F, 15.11574F, 15.11574F);
      Float float0 = new Float(15.11574F);
      wall0.setHeight(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 0.01F, 0.01F);
      Float float0 = new Float((double) 0.01F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setHeight(float0);
      wall0.getPoints();
      Float float1 = new Float(0.01F);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, (-1215.02F), (-1215.02F));
      wall0.setYEnd(1.0F);
      Float float0 = new Float(1.0F);
      wall0.getHeightAtEnd();
      wall0.containsPoint((-1215.02F), 1.0F, 1.0F);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Integer integer0 = new Integer(882);
      Integer integer1 = new Integer((-844));
      wall0.setYEnd(0.0F);
      wall0.getLeftSideColor();
      wall0.setRightSideColor((Integer) null);
      wall0.isAtLevel((Level) null);
      wall0.setHeight((Float) null);
      wall0.containsPoint(2200.9F, 1099.6F, 0.1F);
      wall0.containsWallEndAt((-1104.234F), 0.0F, 0.0F);
      wall0.setYStart(0.0F);
      wall0.getYArcCircleCenter();
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      wall0.getLength();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(2146670806);
      wall0.setLeftSideColor(integer1);
      Wall wall1 = wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeight();
      Float float0 = new Float(789.08704F);
      wall1.setHeightAtEnd(float0);
      wall1.setWallAtEnd(wall0);
      wall1.getWallAtEnd();
      wall0.setWallAtEnd(wall1);
      wall0.containsWallEndAt(0.0F, 2.0F, (-208.5F));
      wall0.setYStart(0.1F);
      wall1.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1.0F), (-1.0F));
      Level level0 = new Level("rUP,", 789.087F, 789.087F, (-1.0F));
      wall0.setLevel(level0);
      Level level1 = new Level("rUP,", (-1.0F), (-1.0F), 1506.3402F);
      level0.clone();
      wall0.isAtLevel(level1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setHeight(float0);
      Float float1 = new Float((-915.0F));
      Float.max((-467.69F), (-2757.0603F));
      wall0.setArcExtent((Float) null);
      wall0.setArcExtent(float1);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Wall wall0 = new Wall(1562.5F, (-520.71576F), (-520.71576F), 81.61218F, (-16.48859F), (-1215.02F));
      Wall wall1 = wall0.clone();
      wall0.getLength();
      wall0.getRightSideTexture();
      wall0.setRightSideShininess((-9.05831F));
      Integer integer0 = new Integer((-2146109145));
      wall1.setLeftSideColor(integer0);
      Float float0 = new Float((-2404.581F));
      wall1.setArcExtent(float0);
      Float.min(2168.545F, (-9.05831F));
      Wall wall2 = wall0.clone();
      Wall wall3 = new Wall((-16.48859F), 32.91F, 2168.545F, 346.9F, (-1.0F));
      wall3.setArcExtent(float0);
      wall2.getPoints();
      wall2.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      Wall wall2 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      wall0.setWallAtEnd(wall2);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Wall wall0 = new Wall(843.731F, 0.0F, 843.731F, (-410.4F), 843.731F);
      wall0.isTrapezoidal();
      wall0.setYStart(0.0F);
      wall0.getLeftSideShininess();
      Wall wall1 = wall0.clone();
      wall0.getLength();
      wall1.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Wall wall0 = new Wall((-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F));
      wall0.setYEnd((-1215.02F));
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.01F, 0.01F, 1.0F, 1.0F, 0.01F);
      wall0.containsWallEndAt(1.0F, (-915.0F), 1.0F);
      Wall wall1 = wall0.clone();
      wall0.getLeftSideTexture();
      wall1.setPattern((TextureImage) null);
      wall1.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      Integer.toUnsignedString(2146744530);
      Integer integer0 = new Integer(2146713930);
      wall0.setRightSideColor(integer0);
      wall0.getWallAtStart();
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Wall wall0 = new Wall((-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F));
      wall0.getPoints();
      Float float0 = new Float(3.141592653589793);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getPoints();
      CatalogTexture catalogTexture0 = new CatalogTexture("Y_END", (Content) null, (-2324.705F), 2176.434F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.setRightSideShininess((-2904.3682F));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = new Float(0.0F);
      wall0.setHeight(float0);
      Float float1 = new Float(0.0F);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), 0.0F, 0.0F, (-1.0F), 0.0F);
      Integer integer0 = new Integer((-1));
      wall0.setRightSideColor(integer0);
      Wall wall1 = wall0.clone();
      wall1.getXEnd();
      wall0.isTrapezoidal();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf(">4e}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.>4e}
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1.3928504F, 1.3928504F, 1.3928504F, 0.0F, 0.0F);
      wall0.setXEnd(1.3928504F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall1.setWallAtEnd(wall0);
      wall0.setYStart(0.0F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 1.0F, 0.01F, 1.0F, 0.0F);
      Float.min((-915.0F), 2.0F);
      wall0.setYEnd((-915.0F));
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setHeight(float0);
      Float float1 = new Float(256.6F);
      wall0.setArcExtent(float0);
      wall0.getPoints();
      Wall wall1 = wall0.getWallAtStart();
      wall1.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 1.0F, 0.01F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setHeight(float0);
      Float float1 = new Float((-915.0F));
      Float.max((-467.69F), (-2757.0603F));
      wall0.setArcExtent((Float) null);
      wall0.setArcExtent(float1);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.setWallAtStart(wall0);
      Float.isFinite(1.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.getWallAtStart();
      Wall wall2 = new Wall(0.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      Integer integer0 = new Integer(56);
      Integer integer1 = new Integer(544);
      wall2.setRightSideColor(integer1);
      wall0.containsWallEndAt(1304.772F, (-2754.9778F), (-3185.9407F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      Float float0 = new Float(0.0F);
      Float.min((-915.0F), 770.67F);
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 2438.0F, 2438.0F);
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-16.48859F), 2.0F);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      wall1.getLeftSideTexture();
      Integer integer0 = new Integer(2146508361);
      wall0.setLeftSideColor(integer0);
      Wall wall2 = wall1.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      Float float0 = wall0.getHeight();
      wall2.setHeightAtEnd(float0);
      wall2.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtEnd(wall0);
      Wall wall3 = wall2.clone();
      wall1.setWallAtEnd(wall3);
      wall1.containsWallEndAt(0.01F, (-3072.0347F), 2788.974F);
      wall2.setYStart(0.01F);
      wall1.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      wall0.getLeftSideShininess();
      Integer integer0 = new Integer(0);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer.getInteger("", 0);
      Integer.compareUnsigned(0, 15);
      Integer.getInteger("");
      wall0.setRightSideColor(integer0);
      wall0.containsPoint(0.0F, 0.0F, 0);
      wall0.setLeftSideColor(integer0);
      wall0.getArcExtent();
      wall0.getArcExtent();
      wall0.getYEnd();
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.move(0, 1.0F);
      wall0.getLength();
      Wall wall1 = wall0.clone();
      wall1.getLeftSideShininess();
      wall1.containsWallStartAt(15, (-1.0F), (-1));
      wall1.setXEnd((-2236.6125F));
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.21631251F, 0.21631251F, 0.0F);
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      Float float1 = new Float(0.0F);
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Wall wall0 = new Wall(2182.52F, 2182.52F, 2182.52F, 2182.52F, 2182.52F);
      Level level0 = new Level("rUzP,", 2182.52F, 2182.52F, 3111.859F);
      wall0.isAtLevel(level0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, (-0.24844821F), (-1215.02F), (-1215.02F));
      wall0.containsPoint((-1215.02F), (-0.24844821F), (-1215.02F));
      wall0.setYEnd((-0.24844821F));
      Float float0 = new Float((-0.24844821F));
      wall0.setArcExtent(float0);
      Wall wall1 = new Wall(1.0522461F, 0.0F, 1.0522461F, (-295.01F), 0.0F, 1180.9722F);
      Level level0 = new Level("", 0.01F, (-1.0F), 0.01F);
      wall0.setLevel(level0);
      Float float1 = new Float((-1217.0225168785316));
      wall0.setArcExtent(float1);
      Level level1 = new Level("", (-1.0F), 0.01F, 2035.202F);
      Level level2 = level0.clone();
      wall0.isAtLevel(level2);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 1.0F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      wall0.setWallAtEnd(wall0);
      wall0.setHeight(float0);
      Float float1 = new Float((-915.0F));
      Float.max((-467.69F), (-2757.0603F));
      Wall wall1 = wall0.clone();
      wall0.setArcExtent((Float) null);
      wall1.setArcExtent(float1);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      Level level0 = new Level("", 74.0F, 0.01F, (-1.0F));
      wall0.setLevel(level0);
      Float float0 = new Float((double) (-1.0F));
      Float float1 = new Float((double) (-722.3779F));
      wall0.setArcExtent(float1);
      Level level1 = new Level("h_ mZ>CLe!vB", (-256.43414F), 877.6F, 0.01F);
      Level level2 = level0.clone();
      wall0.isAtLevel(level2);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Wall wall0 = new Wall((-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F), (-1215.02F));
      wall0.setYEnd((-1215.02F));
      Float float0 = new Float((-1215.02F));
      wall0.setArcExtent(float0);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      wall0.getLeftSideShininess();
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer.getInteger("");
      wall0.getArcExtent();
      wall0.getArcExtent();
      Integer integer0 = new Integer((-637));
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.getLength();
      Wall wall1 = wall0.clone();
      wall0.getLeftSideShininess();
      wall0.containsWallStartAt((-5627.084F), (-655.60614F), (-1.0F));
      Level level0 = new Level("", 0.0F, 2135.0F, 881.21F);
      wall0.isAtLevel(level0);
      wall1.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Wall wall0 = new Wall(1987.64F, 1987.64F, 0.0F, 0.0F, (-1156.02F));
      Wall wall1 = wall0.clone();
      Wall wall2 = new Wall((-1156.02F), 0.0F, 1987.64F, (-1156.02F), 1987.64F);
      wall1.containsWallStartAt(0.0F, 0.0F, 0.0F);
      wall1.setThickness(2649.7927F);
      wall1.setYEnd(0.1F);
      Integer integer0 = new Integer(1078);
      wall0.setRightSideColor(integer0);
      wall1.isAtLevel((Level) null);
      wall1.setHeight((Float) null);
      wall0.containsWallEndAt(1987.64F, 220.93974F, 0.0F);
      wall2.setYStart(0.1F);
      wall1.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      float float0 = 484.7332F;
      Wall wall0 = new Wall(484.7332F, (-16.48859F), (-2905.0F), 0.7125301F, 3020.9775F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      Float.min(0.1F, 1.0F);
      Float.min(0.24687982F, 0.0F);
      Float float1 = new Float((double) 3020.9775F);
      Float float2 = new Float(0.7125301F);
      Float float3 = new Float((double) (-2802.269F));
      wall1.setArcExtent(float3);
      wall0.getYArcCircleCenter();
      wall1.getLeftSideColor();
      wall1.getLength();
      // Undeclared exception!
      wall1.containsWallEndAt((-1.0F), (-16.48859F), 3020.9775F);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.intersectsRectangle((-1190.2306F), (-1190.2306F), (-2905.0F), (-2905.0F));
      wall0.setYStart((-2905.0F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      Integer integer0 = new Integer((-1063));
      wall0.setLeftSideColor(integer0);
      wall0.setLeftSideColor(integer0);
      Float float0 = new Float((-1444.9082F));
      wall0.getLeftSideShininess();
      Float float1 = new Float(0.0F);
      wall0.getLeftSideColor();
      Float float2 = new Float((-1444.9082F));
      wall0.setHeightAtEnd(float2);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 2.0F, 2.0F, 2.0F, 0.0F);
      Wall wall1 = wall0.clone();
      Float float0 = new Float(1157.9F);
      Float float1 = new Float((-1.0));
      wall0.setHeightAtEnd(float1);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2981.0122F));
      wall0.getYArcCircleCenter();
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      wall0.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      Float float0 = new Float(789.08704F);
      Level level0 = new Level((String) null, 2.0F, (-392.2F), 789.08704F);
      wall0.setLevel(level0);
      Float float1 = new Float((double) (-2905.0F));
      Float float2 = new Float((-989.7672));
      Float float3 = new Float(8442648.913984055);
      wall0.setArcExtent(float3);
      Level level1 = new Level("", 0.034522995F, (-1436.01F), (-2905.0F));
      level1.clone();
      wall0.isAtLevel(level1);
      Wall.Property.values();
      wall1.setArcExtent(float1);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 1.0F, 0.01F, 1.0F, 0.0F);
      Float.min((-915.0F), 1.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.move((-915.0F), 0.0F);
      Level level0 = new Level("", 0.1F, (-1.0F), 0.01F);
      Wall wall1 = wall0.getWallAtStart();
      wall1.getLevel();
      wall1.setLevel((Level) null);
      Float float1 = new Float((double) 1026.5F);
      wall1.setArcExtent(float1);
      Level level1 = new Level("0G <zL9Apn0V3pH+Jd)", (-915.0F), (-421.2F), (-421.2F));
      level1.clone();
      wall0.isAtLevel((Level) null);
      Wall.Property.values();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Wall wall1 = new Wall((-1116.51F), (-1116.51F), 1551.9814F, (-1116.51F), (-2905.0F));
      Wall wall2 = wall1.clone();
      wall0.setWallAtEnd(wall2);
      Wall wall3 = wall0.getWallAtEnd();
      wall3.setWallAtEnd(wall2);
      wall2.setYStart(0.01F);
      wall2.getPoints();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      wall0.setXEnd(789.08704F);
      wall1.setXEnd((-1.0F));
      Float.isFinite((-2905.0F));
      wall1.setWallAtEnd(wall0);
      wall0.getPoints();
      Wall wall2 = new Wall(789.08704F, (-2905.0F), (-2905.0F), 789.08704F, (-2905.0F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Wall wall0 = new Wall((-968.29F), (-968.29F), (-968.29F), 1434.4343F, (-968.29F), (-968.29F));
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 0.0F, 575.0F, 0.0F, 0.0F);
      Wall wall1 = wall0.clone();
      wall1.getRightSideTexture();
      wall0.getHeight();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Wall wall0 = new Wall((-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F), (-2904.3682F));
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, 1.3928504F, 1.3928504F, 1.0F);
      Float.isFinite(1.0F);
      wall0.setWallAtEnd(wall0);
      wall0.setYStart(1.0F);
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Wall wall0 = new Wall(1.0F, 1.0F, 1.0F, 1.0F, 1.0F);
      wall0.getLeftSideShininess();
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      Integer.getInteger("");
      wall0.getHeight();
      wall0.getArcExtent();
      Integer integer0 = new Integer((-637));
      wall0.getArcExtent();
      wall0.setHeightAtEnd((Float) null);
      wall0.getRightSideTexture();
      wall0.getLeftSideColor();
      wall0.getLength();
      wall0.getWallAtEnd();
      wall0.getLeftSideShininess();
      wall0.containsWallStartAt((-5627.084F), (-655.60614F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = new Float(0.0F);
      wall0.setHeight(float0);
      wall0.setHeight(float0);
      Float float1 = new Float(0.0F);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Wall wall0 = new Wall(1562.5F, (-520.71576F), (-520.71576F), 81.61218F, (-3558.606F), (-1215.02F));
      Wall wall1 = wall0.clone();
      wall0.getLength();
      wall0.getRightSideTexture();
      wall0.setRightSideShininess((-9.05831F));
      Integer integer0 = new Integer((-2146109145));
      wall1.setLeftSideColor(integer0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.offer(wall1);
      Wall.clone((List<Wall>) linkedList0);
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.setWallAtEnd(wall1);
      wall1.setWallAtEnd(wall0);
      wall1.containsWallEndAt((-2776.915F), (-16.48859F), 1847.3038F);
      wall0.getPoints();
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = new Float(0.0F);
      wall0.getRightSideTexture();
      wall0.setHeightAtEnd(float0);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Wall wall0 = new Wall(3168.959F, 0.0F, 2006.0F, 2.0F, 1.0F);
      wall0.getPattern();
      wall0.getArcExtent();
      wall0.getLength();
      wall0.setYStart(1.0F);
      wall0.setRightSideShininess(2.0F);
      wall0.getLeftSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.move(2.0F, (-1.0F));
      wall0.containsWallStartAt(1.0F, 1162.9607F, (-1.0F));
      wall0.getLeftSideTexture();
      wall0.getLevel();
      try { 
        Float.valueOf("LEFT_SIDE_TEXTURE");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Level level0 = new Level("rUP,", (-1.0F), 789.08704F, (-528.62F));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("rUP,", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Wall wall0 = new Wall((-1.0F), 789.08704F, 1168.11F, (-1.0F), (-1215.02F));
      wall0.setLevel(level0);
      Float float0 = new Float((double) (-1.0F));
      wall0.setArcExtent((Float) null);
      Level level1 = new Level("", (-3646.483F), (-1.0F), (-1.0F));
      Level level2 = wall0.getLevel();
      Level level3 = level2.clone();
      Wall wall1 = new Wall(789.08704F, (-1215.02F), 1794.1F, (-1.0F), 0.41840875F);
      wall1.isAtLevel(level3);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Wall wall0 = new Wall(1.3928504F, 1.3928504F, (-2905.0F), (-2905.0F), 1.3928504F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall0.setYStart((-2905.0F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 8.926549F, 770.67F);
      Wall wall1 = wall0.clone();
      wall0.setWallAtStart(wall1);
      Wall wall2 = wall0.getWallAtStart();
      wall2.setWallAtEnd(wall1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#Y", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("#Y", propertyChangeListenerProxy0);
      wall2.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall2.setWallAtEnd(wall0);
      wall2.setWallAtEnd(wall0);
      Float float0 = new Float(431.79376497285);
      wall1.setArcExtent(float0);
      Integer integer0 = new Integer(1931146262);
      Wall wall3 = wall0.clone();
      Integer integer1 = new Integer((-737));
      wall3.setLeftSideColor(integer1);
      wall0.containsWallEndAt((-737), (-284.7009F), (-284.7009F));
      wall1.getPoints();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Wall wall0 = new Wall(770.67F, 770.67F, 770.67F, 770.67F, 0.01F, 770.67F);
      wall0.setXStart(0.01F);
      wall0.setXStart(770.67F);
      Wall wall1 = wall0.clone();
      wall1.intersectsRectangle((-2641.0F), 288.5F, 1.0F, 0.01F);
      wall1.intersectsRectangle(0.0F, (-4783.455F), 770.67F, 2473.0F);
      wall0.getLeftSideTexture();
      wall1.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtStart(wall0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Float float0 = new Float(2473.0F);
      wall1.setArcExtent(float0);
      wall1.getPoints();
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, (-0.24844821F), (-1215.02F), (-1215.02F));
      wall0.setYEnd((-0.24844821F));
      Float float0 = new Float((-0.24844821F));
      wall0.setArcExtent(float0);
      Float float1 = new Float((-0.24844821F));
      wall0.setArcExtent(float0);
      Wall wall1 = new Wall(1.0522461F, 0.0F, 1.0522461F, (-295.01F), 0.0F, 1180.9722F);
      Level level0 = new Level("", (-722.3779F), (-1.0F), 605.93F);
      wall1.setLevel(level0);
      Float float2 = new Float((double) 1180.9722F);
      wall1.setArcExtent(float2);
      Level level1 = new Level("", (-1.0F), 0.0F, 0.0F);
      Level level2 = level1.clone();
      wall1.isAtLevel(level2);
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2016.6445F), (-2905.0F), (-1636.7941F), (-1636.7941F), (-2905.0F));
      Wall wall1 = wall0.clone();
      Wall wall2 = wall1.clone();
      wall2.setXStart((-4517.0F));
      wall2.setXStart((-4517.0F));
      wall1.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall2);
      Wall.clone((List<Wall>) linkedList0);
      Wall wall3 = new Wall((-4517.0F), (-4946.808F), 1.0F, (-4946.808F), 1.0F);
      wall1.getWallAtEnd();
      wall3.getXArcCircleCenter();
      wall2.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Wall wall0 = new Wall((-2905.0F), (-2905.0F), (-2905.0F), (-2905.0F), 0.0F, 2.0F);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      wall1.getLeftSideTexture();
      Integer integer0 = new Integer(13);
      wall1.setLeftSideColor(integer0);
      Wall wall2 = wall1.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      Float float0 = wall2.getHeight();
      wall1.setHeightAtEnd(float0);
      wall0.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtEnd(wall0);
      Wall wall3 = wall2.clone();
      wall0.setWallAtEnd(wall3);
      wall0.containsWallStartAt(1.0F, 0.0F, 1.0F);
      wall0.getStartPointToEndPointDistance();
      wall0.getLeftSideTexture();
      wall0.getYStart();
      wall2.getYStart();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      float float0 = (-1776.1F);
      float float1 = 0.1F;
      Wall wall0 = new Wall(0.0F, 2710.0F, (-1776.1F), 0.1F, 0.0F, 2710.0F);
      Wall wall1 = wall0.clone();
      float float2 = 1611.2959F;
      wall0.setWallAtStart(wall1);
      Float.isFinite(2710.0F);
      wall0.setWallAtEnd(wall1);
      wall0.setWallAtEnd(wall1);
      Wall wall2 = wall0.getWallAtStart();
      wall1.setWallAtStart(wall2);
      wall1.setYStart(2710.0F);
      Wall wall3 = wall1.getWallAtStart();
      Integer integer0 = new Integer(56);
      wall3.setRightSideColor(integer0);
      String string0 = "P";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, "P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource P
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Wall wall0 = new Wall((-2541.0F), (-2541.0F), (-2541.0F), (-2541.0F), (-2541.0F));
      wall0.getHeightAtEnd();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Wall wall0 = new Wall(2200.9F, (-801.2958F), 0.1F, 0.1F, (-801.2958F));
      wall0.getPoints();
      Float.min((-3519.17F), (-1.0F));
      Float.min(1.0F, 0.1F);
      Float float0 = new Float(3.141592653589793);
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getXStart();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("K +uAtfs%Iqu<!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.K +uAtfs%Iqu<!
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Wall wall0 = new Wall((-0.24844821F), (-0.24844821F), 0.0F, (-0.24844821F), (-0.24844821F));
      Float float0 = new Float((double) 0.0F);
      wall0.setArcExtent(float0);
      wall0.getRightSideColor();
      Float float1 = new Float(0.0F);
      wall0.setArcExtent(float0);
      Random.setNextRandom((-697));
      CatalogTexture catalogTexture0 = new CatalogTexture("24?d}wiRV*^\"T[4", (Content) null, (-0.24844821F), (-697));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Wall wall0 = new Wall(2.0F, 2.0F, 2.0F, 2.0F, (-2905.0F));
      Wall wall1 = wall0.clone();
      wall0.setLeftSideShininess(2.0F);
      Float.isFinite(2.0F);
      wall1.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall1);
      wall1.getWallAtEnd();
      Wall wall2 = new Wall(789.08704F, 2.0F, 2.0F, 789.08704F, (-2905.0F));
      Integer integer0 = new Integer(56);
      Integer.toUnsignedString((-1761));
      wall2.setRightSideColor(integer0);
      Float float0 = new Float((double) 2.0F);
      wall0.containsWallEndAt((-3970.4307F), 2.0F, 789.08704F);
      wall1.getPoints();
      wall2.getPoints();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Wall wall0 = new Wall(15.11574F, 15.11574F, 15.11574F, 15.11574F, 15.11574F, 15.11574F);
      Float float0 = new Float(15.11574F);
      wall0.containsWallEndAt(15.11574F, 15.11574F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), 5392.22F, 0.0F, (-1.0F), 2473.0F, (-751.416F));
      wall0.getPoints();
      float float0 = 0.0F;
      Wall wall1 = new Wall(0.0F, 2.0F, 0.0F, 0.0F, (-751.416F), 2576.2617F);
      wall0.setWallAtEnd(wall1);
      wall0.containsWallStartAt((-1.0F), (-562.6F), 5392.22F);
      wall0.getLevel();
      wall0.setLeftSideShininess(2473.0F);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      List<Wall> list1 = Wall.clone(list0);
      linkedList0.poll();
      List<Wall> list2 = Wall.clone(list1);
      Wall.clone(list2);
      Wall.Property.values();
      String string0 = null;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(classLoader0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 3768.35F, (-1776.1F), 0.0F, 0.0F, 3768.35F);
      Float float0 = new Float((double) 1.0F);
      wall0.setHeight(float0);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, 1.0F, 0.1F);
      wall0.setWallAtStart(wall1);
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setLeftSideShininess(2.0F);
      wall0.setRightSideShininess(2.0F);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(2015.7F, (-3016.0F), 2015.7F, (-3016.0F), 0.0F);
      wall0.getLength();
      wall0.getLeftSideTexture();
      Integer integer0 = new Integer(4);
      Integer integer1 = new Integer(4);
      wall0.setLeftSideColor(integer1);
      Wall wall1 = wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall1.getHeight();
      wall1.setHeightAtEnd((Float) null);
      wall1.getLeftSideTexture();
      wall0.setLeftSideTexture((HomeTexture) null);
      wall1.setWallAtEnd(wall0);
      Wall wall2 = wall0.clone();
      wall0.setWallAtEnd(wall1);
      wall1.containsWallEndAt(0.0F, (-1889.84F), 2015.7F);
      wall2.setYStart(2146508361);
      wall0.getYArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Wall wall0 = new Wall((-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F), (-2324.705F));
      Float float0 = new Float((double) (-2324.705F));
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getPoints();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Wall wall0 = new Wall((-30.7F), (-30.7F), (-30.7F), (-30.7F), (-30.7F));
      Float float0 = new Float((-30.7F));
      wall0.setWallAtStart(wall0);
      Float float1 = new Float((double) (-30.7F));
      wall0.intersectsRectangle((-30.7F), (-30.7F), (-30.7F), (-30.7F));
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Wall wall0 = new Wall((-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F), (-1444.9082F));
      Integer.toUnsignedString(2146744530);
      Integer integer0 = new Integer(2146744530);
      wall0.setRightSideColor(integer0);
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      float float0 = 0.0F;
      float float1 = 0.983498F;
      Wall wall0 = new Wall(0.01F, 0.0F, 0.0F, 0.983498F, 0.983498F, 0.0F);
      wall0.containsWallEndAt(0.983498F, (-915.0F), 0.983498F);
      Integer integer0 = new Integer(4);
      Integer integer1 = new Integer(1452);
      wall0.setLeftSideColor(integer1);
      wall0.clone();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.clone();
      Wall.clone((List<Wall>) linkedList0);
      wall0.getHeight();
      try { 
        Float.valueOf("#2yc@!/xT9|r\"");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Wall wall0 = new Wall(760.2954F, 760.2954F, 760.2954F, 760.2954F, 8.926549F, 760.2954F);
      wall0.getRightSideTexture();
      wall0.setRightSideTexture((HomeTexture) null);
      wall0.setRightSideShininess(760.2954F);
      Wall wall1 = wall0.clone();
      wall1.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Wall wall0 = new Wall(0.01F, 1.0F, 0.01F, 1.0F, 0.0F);
      wall0.getPoints();
      Float.min((-915.0F), 2.0F);
      Float float0 = new Float((double) 1.0F);
      wall0.setWallAtStart(wall0);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd(wall0);
      Wall wall1 = wall0.getWallAtStart();
      wall1.setLeftSideColor((Integer) null);
      Float float1 = new Float(367.16F);
      Float float2 = new Float(1141.148561297);
      Float.isFinite((-915.0F));
      wall1.setArcExtent(float2);
      wall1.clone();
      wall1.getPattern();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Wall wall0 = new Wall(1987.64F, 1987.64F, 0.0F, 0.0F, (-1156.02F));
      Wall wall1 = wall0.clone();
      Wall wall2 = new Wall((-1156.02F), 0.0F, 1987.64F, (-1156.02F), 1987.64F);
      wall1.containsWallStartAt(0.0F, 0.0F, 0.0F);
      Wall wall3 = new Wall(1.0F, 1.0F, 1.0F, 2.3844378F, (-663.19F), (-1156.02F));
      wall1.setWallAtStart(wall0);
      wall0.clone();
      Wall wall4 = wall3.clone();
      wall4.setXStart(1.0F);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, (-1776.1F), 0.0F, 0.0F, 0.0F);
      Wall wall1 = new Wall(0.0F, 0.0F, (-1776.1F), 2.0F, (-306.2909F), 0.1F);
      Float float0 = new Float(0.0F);
      wall0.setHeightAtEnd(float0);
      wall0.getLeftSideTexture();
      wall0.getHeightAtEnd();
      wall0.setArcExtent(float0);
      wall0.getPoints();
      wall0.intersectsRectangle((-1776.1F), (-2456.06F), (-1183.6F), (-1045.05F));
  }
}
