/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 12:33:00 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.types.ComplexImage;
import jigl.image.types.InterpolatedRealColorImage;
import jigl.image.types.RealColorImage;
import jigl.image.types.TiledComplexMIPMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiledComplexMIPMap_ESTest extends TiledComplexMIPMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(1, 1);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 1);
      // Undeclared exception!
      try { 
        tiledComplexMIPMap0.getImage(2679);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledComplexMIPMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InterpolatedRealColorImage interpolatedRealColorImage0 = new InterpolatedRealColorImage(1, 0);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(interpolatedRealColorImage0, 805);
      RealColorImage realColorImage0 = tiledComplexMIPMap0.getImage(0);
      assertEquals(0, realColorImage0.Y());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(1, 1);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 3);
      // Undeclared exception!
      try { 
        tiledComplexMIPMap0.getImage((-1.0F));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InterpolatedRealColorImage interpolatedRealColorImage0 = new InterpolatedRealColorImage(43, 43);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(interpolatedRealColorImage0, (-214));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 0);
      RealColorImage realColorImage1 = tiledComplexMIPMap0.getImage(0);
      assertEquals(0, realColorImage1.Y());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 0);
      // Undeclared exception!
      try { 
        tiledComplexMIPMap0.get((-1.0F), 16.0F, (-0.5F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledComplexMIPMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 2647);
      // Undeclared exception!
      try { 
        tiledComplexMIPMap0.get(1418.0F, 411.77377F, 16.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledComplexMIPMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InterpolatedRealColorImage interpolatedRealColorImage0 = new InterpolatedRealColorImage(14, 10);
      TiledComplexMIPMap tiledComplexMIPMap0 = null;
      try {
        tiledComplexMIPMap0 = new TiledComplexMIPMap(interpolatedRealColorImage0, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.utils.FFT", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      TiledComplexMIPMap tiledComplexMIPMap0 = new TiledComplexMIPMap(realColorImage0, 0);
      ComplexImage complexImage0 = new ComplexImage();
      TiledComplexMIPMap.Threader tiledComplexMIPMap_Threader0 = tiledComplexMIPMap0.new Threader(0, 1418.0F, 0, 0, 0, complexImage0, complexImage0, complexImage0);
      // Undeclared exception!
      try { 
        tiledComplexMIPMap_Threader0.run();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The width and height of the image should be power of 2 in order to apply FFT.
         //
         verifyException("jigl.image.utils.FFT", e);
      }
  }
}
