/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 10:18:45 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.TabDSymbol;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.Box;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotAxis_ESTest extends PlotAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.aUB = 2824.19067720858;
      plotXAxis0.setLowerBounds(2824.19067720858);
      plotXAxis0.setAxisTickLimits();
      assertEquals(0.0, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle();
      plotXAxis0.setSize(rectangle0);
      assertEquals(Double.NEGATIVE_INFINITY, plotXAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle();
      plotXAxis0.resizeAxis(rectangle0);
      int int0 = plotXAxis0.scaleCoord(0);
      assertEquals(0, int0);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      DecimalFormat decimalFormat0 = jSpinner_NumberEditor0.getFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, decimalFormat0, 1331);
      int int0 = plotXAxis0.scaleCoord((-567.0));
      assertEquals(1331, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-566), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.aUB = (double) 2;
      plotXAxis0.setAxisTickLimits();
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals(Double.POSITIVE_INFINITY, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setUpperBounds(793.4981697966);
      double double0 = plotYAxis0.getUpperBounds();
      assertEquals(793.4981697966, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisTickLimits();
      double double0 = plotXAxis0.getTickStepSize();
      assertEquals(Double.NaN, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat("Pe*u9/C<CrCQL@");
      PlotXAxis plotXAxis0 = new PlotXAxis("01=`h7NjiJi$X\tsg]R", linearAxisScale0, decimalFormat0, (-2825));
      DecimalFormat decimalFormat1 = (DecimalFormat)plotXAxis0.getNumberFormat();
      assertEquals((-2825), plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals("Pe*u9/C<CrCQL@", decimalFormat1.getPositivePrefix());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis(",J9Df]kj1/>uT]c", linearAxisScale0, numberFormat0, (-3645));
      DecimalFormat decimalFormat0 = (DecimalFormat)plotYAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals((-3645), plotYAxis0.getGridStyle());
      assertEquals("\u00A4", decimalFormat0.getPositivePrefix());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      PlotYAxis plotYAxis0 = new PlotYAxis((String) null, linearAxisScale0, decimalFormat0, 23);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      
      PlotRun[] plotRunArray0 = new PlotRun[7];
      double[] doubleArray0 = new double[0];
      TabDSymbol tabDSymbol0 = new TabDSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, tabDSymbol0);
      plotRunArray0[0] = plotRun0;
      plotRunArray0[1] = plotRunArray0[0];
      plotRunArray0[2] = plotRun0;
      plotRunArray0[3] = plotRun0;
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotDatum plotDatum0 = new PlotDatum(2, 0, true, tabDSymbol0);
      plotDatumArray0[0] = plotDatum0;
      PlotRun plotRun1 = new PlotRun(plotDatumArray0);
      plotRunArray0[4] = plotRun1;
      plotRunArray0[5] = plotRun1;
      plotRunArray0[6] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotYAxis0.setAxisBounds(plotRunList0);
      double double0 = plotYAxis0.getLowerBounds();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      PlotYAxis plotYAxis0 = new PlotYAxis("", linearAxisScale0, numberFormat0, 3660);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      
      PlotDatum[] plotDatumArray0 = new PlotDatum[1];
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      plotYAxis0.setAxisBounds(plotRunList0);
      double double0 = plotYAxis0.getLowerBounds();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotYAxis plotYAxis0 = new PlotYAxis("apbs_mem_gui.Main$ExtensionFilter", linearAxisScale0, (NumberFormat) null, 0);
      String string0 = plotYAxis0.getLabel();
      assertNotNull(string0);
      assertEquals(0, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, numberFormat0, (-640));
      String string0 = plotXAxis0.getLabel();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-640), plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      int int0 = plotXAxis0.getGridStyle();
      assertEquals(1, int0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("");
      PlotYAxis plotYAxis0 = new PlotYAxis("", linearAxisScale0, choiceFormat0, (-1073741824));
      int int0 = plotYAxis0.getGridStyle();
      assertEquals((-1073741824), int0);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("jahuwaldt.plot.PlotAxis");
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotAxis", linearAxisScale0, choiceFormat0, 5);
      // Undeclared exception!
      try { 
        plotXAxis0.upperBoundsAsString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.scale = null;
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisTickLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun plotRun0 = new PlotRun();
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      plotRunList0.add((Object) null);
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("-");
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotXAxis plotXAxis0 = new PlotXAxis("-", linearAxisScale0, choiceFormat0, 2);
      // Undeclared exception!
      try { 
        plotXAxis0.lowerBoundsAsString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.text.ChoiceFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Box box0 = Box.createHorizontalBox();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, box0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualLB = true;
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NEGATIVE_INFINITY, plotXAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisTickLimits();
      plotXAxis0.setAxisTickLimits();
      double double0 = plotXAxis0.getTickStepSize();
      assertEquals(Double.NaN, plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setNumberFormat((NumberFormat) null);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      plotXAxis0.setNumberFormat(decimalFormat0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setScale((PlotAxisScale) null);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      plotXAxis0.setScale(linearAxisScale0);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("%VzOG|u)\"vw8+@H=M@");
      PlotXAxis plotXAxis0 = new PlotXAxis("%VzOG|u)\"vw8+@H=M@", (PlotAxisScale) null, choiceFormat0, (-776));
      plotXAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-776), plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setTickStepSize(0.4035);
      assertEquals(0.4035, plotXAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      String string0 = plotXAxis0.lowerBoundsAsString();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals("\u221E", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals((-1.7976931348623157E308), double0, 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      int int0 = plotYAxis0.scaleCoord(0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1, int0);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getTickStepSize();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setGridStyle(966);
      assertEquals(966, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualTickStepSize(true);
      plotXAxis0.setAxisTickLimits();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setLowerBounds(1.4);
      assertEquals(1.4, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getScale();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis plotYAxis1 = (PlotYAxis)plotYAxis0.clone();
      assertNotSame(plotYAxis1, plotYAxis0);
      assertEquals((-1.7976931348623157E308), plotYAxis1.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis1.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis1.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, decimalFormat0, 0);
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals(0, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, double0, 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualLowerBounds(true);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUpperBounds(true);
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.ENGLISH;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, numberFormat0, 0);
      NumberFormat numberFormat1 = plotXAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertTrue(numberFormat1.isParseIntegerOnly());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.setSize((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      String string0 = plotXAxis0.upperBoundsAsString();
      assertEquals("-\u221E", string0);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, decimalFormat0, 0);
      int int0 = plotXAxis0.getGridStyle();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0, int0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getLabel();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }
}
