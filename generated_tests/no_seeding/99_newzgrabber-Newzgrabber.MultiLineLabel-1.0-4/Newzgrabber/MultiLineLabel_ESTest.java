/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 12:04:08 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      Font font0 = new Font(hashMap0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("North", 2, 2, 2);
      multiLineLabel0.setFont(font0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(">y6[egd", (-317), (-1), 2);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.print(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("*+%;n{b#L3&i1CI]miB", (-1224), (-844));
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.num_lines = (-476);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      multiLineLabel0.paint(debugGraphics0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      DebugGraphics debugGraphics0 = new DebugGraphics();
      multiLineLabel0.paint(debugGraphics0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Font font0 = Font.decode("fL>34H]s");
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.DirectoryDialog", 3, 3, 3);
      BufferedImage bufferedImage0 = new BufferedImage(1, 3, 1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      multiLineLabel0.setFont(font0);
      multiLineLabel0.paint(graphics2D0);
      assertEquals(3, multiLineLabel0.getMarginHeight());
      assertEquals(3, multiLineLabel0.getMarginWidth());
      assertEquals(3, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 1462);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, dimension0.width);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(1462, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      Font font0 = new Font(hashMap0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("North", 2, 2, 2);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(19, dimension0.height);
      assertEquals(39, dimension0.width);
      assertEquals(2, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.setMarginWidth(800);
      assertEquals(800, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("r7kAD");
      assertEquals(0, multiLineLabel0.getAlignment());
      
      multiLineLabel0.setAlignment((-1));
      assertEquals((-1), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("WK3S]k_R7leWXIizc");
      Font font0 = new Font("WK3S]k_R7leWXIizc", (-453), (-453));
      multiLineLabel0.setFont(font0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Font font0 = Font.decode("U MtXYt\"T");
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("U MtXYt\"T");
      multiLineLabel0.num_lines = (-1297);
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.DirectoryDialog", 3, 3, 3);
      multiLineLabel0.newLabel("file.separator");
      assertEquals(3, multiLineLabel0.getMarginWidth());
      assertEquals(3, multiLineLabel0.getAlignment());
      assertEquals(3, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("DV0s9!J=D}+", (-1498));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>(481, 2);
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals((-1498), multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      Font font0 = new Font(hashMap0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("North", 2, 2, 2);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(2, multiLineLabel0.getMarginWidth());
      assertEquals(2, multiLineLabel0.getAlignment());
      assertEquals(2, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("DV0s9!J=D}+", (-1498));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>(481, 2);
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("");
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(20, dimension0.height);
      assertEquals(20, dimension0.width);
      assertEquals((-1498), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ye&(apE)mx", 0, 0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.width);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Nm", (-1779));
      multiLineLabel0.max_width = (-1567);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals((-1779), multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.height);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-1567), dimension0.width);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, String> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, String>();
      Font font0 = new Font(hashMap0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("North", 2, 2, 2);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(15, dimension0.height);
      assertEquals(2, multiLineLabel0.getMarginWidth());
      assertEquals(2, multiLineLabel0.getMarginHeight());
      assertEquals(2, multiLineLabel0.getAlignment());
      assertEquals(35, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      assertEquals(10, multiLineLabel0.getMarginWidth());
      
      multiLineLabel0.setMarginWidth(0);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1498), (-1498));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-1498), int0);
      assertEquals((-1498), multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-']#ppzv:Nkq}/", (-381));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-381), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("%N5_d98", 0, (-2302), 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-2302), int0);
      assertEquals(0, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("F#+^g/^PP;6*7rk2RDA", 1, 0, 1);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(1, int0);
      assertEquals(1, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", (-314), (-314), (-1));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-1), int0);
      assertEquals((-314), multiLineLabel0.getMarginHeight());
      assertEquals((-314), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERv;41N`qyU*~v)");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("b#dSsw)c>pA67D=>;", 2);
      String[] stringArray0 = new String[0];
      multiLineLabel0.lines = stringArray0;
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Create");
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 222, 222, 222);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 961);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h!*=h-", (-1498), (-1498), 1);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Font font0 = new Font("$*>;X", (-1), (-1));
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("$*>;X", (-1), (-1), (-1));
      multiLineLabel0.setFont(font0);
      assertEquals((-1), multiLineLabel0.getAlignment());
      assertEquals((-1), multiLineLabel0.getMarginWidth());
      assertEquals((-1), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(">y6[egd", (-317), (-1), 2);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(2, multiLineLabel0.getAlignment());
      assertEquals((-2), dimension0.height);
      assertEquals((-634), dimension0.width);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1498), (-1498));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-1498), multiLineLabel0.getMarginWidth());
      assertEquals((-1498), multiLineLabel0.getMarginHeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ye&(apE)mx", 0, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("North", 2, 2, 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, int0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Font font0 = Font.decode("fL>34H]s");
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.DirectoryDialog", 3, 3, 3);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.newLabel("file.separator");
      assertEquals(3, multiLineLabel0.getMarginHeight());
      assertEquals(3, multiLineLabel0.getAlignment());
      assertEquals(3, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1498), (-1498));
      Color color0 = Color.magenta;
      multiLineLabel0.setForeground(color0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-1498), multiLineLabel0.getMarginHeight());
      assertEquals((-1498), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("n");
      multiLineLabel0.setMarginHeight(314);
      assertEquals(314, multiLineLabel0.getMarginHeight());
  }
}
