/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 04 17:44:43 GMT 2019
 */

package Joshua.FoxHunt;

import org.junit.Test;
import static org.junit.Assert.*;
import Joshua.FoxHunt.Landmark;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Landmark_ESTest extends Landmark_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Image image0 = bufferedImage0.getScaledInstance(1, 1, 1);
      ImageIcon imageIcon0 = new ImageIcon(image0);
      Landmark landmark0 = new Landmark((-979.53), 0.0, imageIcon0);
      landmark0.setIcon((ImageIcon) null);
      assertEquals(0.0, landmark0.getLat(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      Landmark landmark0 = new Landmark((-237.8114064), 2519.74608152547, imageIcon0);
      landmark0.setLon(525.1042601368387);
      double double0 = landmark0.getLon();
      assertEquals(525.1042601368387, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Image image0 = bufferedImage0.getScaledInstance(1, 1, 1);
      ImageIcon imageIcon0 = new ImageIcon(image0);
      Landmark landmark0 = new Landmark((-979.53), 0.0, imageIcon0);
      landmark0.setLon((-979.53));
      double double0 = landmark0.getLon();
      assertEquals((-979.53), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("");
      Landmark landmark0 = new Landmark(80.7325, 80.7325, imageIcon0);
      double double0 = landmark0.getLat();
      assertEquals(80.7325, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Landmark landmark0 = new Landmark(0.0, 0.0, (ImageIcon) null);
      landmark0.setLat((-1915.0));
      double double0 = landmark0.getLat();
      assertEquals((-1915.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      Landmark landmark0 = new Landmark((-237.8114064), 2519.74608152547, imageIcon0);
      ImageIcon imageIcon1 = landmark0.getIcon();
      assertEquals(2519.74608152547, landmark0.getLat(), 0.01);
      assertNotNull(imageIcon1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Landmark landmark0 = new Landmark(0.0, 0.0, (ImageIcon) null);
      double double0 = landmark0.getLat();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Landmark landmark0 = new Landmark(0.0, 0.0, (ImageIcon) null);
      landmark0.getIcon();
      assertEquals(0.0, landmark0.getLat(), 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("");
      Landmark landmark0 = new Landmark(80.7325, 80.7325, imageIcon0);
      double double0 = landmark0.getLon();
      assertEquals(0.0, double0, 0.01);
      assertEquals(80.7325, landmark0.getLat(), 0.01);
  }
}
