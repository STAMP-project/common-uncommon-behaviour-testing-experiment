/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 21:52:05 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.UUDecoder;
import Newzgrabber.yEncDecoder;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MimeDecoder_ESTest extends MimeDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.LineCount = 375L;
      yEncDecoder0.setTotalLines(500L);
      // Undeclared exception!
      try { 
        yEncDecoder0.updateProgress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MimeDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.setLineCount(1L);
      yEncDecoder0.setTotalLines(1L);
      // Undeclared exception!
      try { 
        yEncDecoder0.updateProgress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MimeDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, byteArrayOutputStream0);
      PrintStream printStream0 = DebugGraphics.logStream();
      base64Decoder0.setOutputStream(printStream0);
      assertFalse(base64Decoder0.ABORT);
      assertFalse(base64Decoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      yEncDecoder yEncDecoder0 = new yEncDecoder(bufferedCustomInputStream0);
      yEncDecoder0.setBegin(true);
      assertFalse(yEncDecoder0.ABORT);
      assertFalse(yEncDecoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      yEncDecoder yEncDecoder0 = new yEncDecoder(bufferedCustomInputStream0);
      yEncDecoder0.decodeStream();
      assertFalse(yEncDecoder0.ProgressSet);
      assertFalse(yEncDecoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      yEncDecoder yEncDecoder0 = new yEncDecoder(bufferedCustomInputStream0);
      yEncDecoder0.getReader();
      assertFalse(yEncDecoder0.ProgressSet);
      assertFalse(yEncDecoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.getOutputStream();
      assertFalse(base64Decoder0.ProgressSet);
      assertFalse(base64Decoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      yEncDecoder yEncDecoder0 = new yEncDecoder(bufferedCustomInputStream0);
      yEncDecoder0.setLineCount(50);
      long long0 = yEncDecoder0.getLineCount();
      assertEquals(50L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      try { 
        yEncDecoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.yEncDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.updateProgress();
      assertFalse(base64Decoder0.ABORT);
      assertFalse(base64Decoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setLineCount((-1L));
      long long0 = base64Decoder0.getLineCount();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      base64Decoder0.setTotalLines((-1L));
      base64Decoder0.updateProgress();
      assertFalse(base64Decoder0.ABORT);
      assertFalse(base64Decoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      File file0 = MockFile.createTempFile("Subject Filter", "Subject Filter");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.getOutputStream();
      assertFalse(base64Decoder0.ABORT);
      assertFalse(base64Decoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UUDecoder uUDecoder0 = new UUDecoder((BufferedCustomInputStream) null, (OutputStream) null);
      uUDecoder0.setReader((InputStream) null);
      assertFalse(uUDecoder0.ProgressSet);
      assertFalse(uUDecoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.setStatusRow(1825);
      assertFalse(yEncDecoder0.ProgressSet);
      assertFalse(yEncDecoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.getReader();
      assertFalse(yEncDecoder0.ProgressSet);
      assertFalse(yEncDecoder0.ABORT);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(dataInputStream0, true);
      yEncDecoder yEncDecoder0 = new yEncDecoder(bufferedCustomInputStream0);
      yEncDecoder0.getLineCount();
      assertFalse(yEncDecoder0.ABORT);
      assertFalse(yEncDecoder0.ProgressSet);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      yEncDecoder yEncDecoder0 = new yEncDecoder((BufferedCustomInputStream) null);
      yEncDecoder0.setStatusObject((Object) null);
      assertFalse(yEncDecoder0.ProgressSet);
      assertFalse(yEncDecoder0.ABORT);
  }
}
