/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:51:10 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.ContourAttrib;
import jahuwaldt.plot.ContourGenerator;
import jahuwaldt.plot.ContourPath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContourGenerator_ESTest extends ContourGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1472, false);
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 391, true);
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1.1681195451752322);
      double[][] doubleArray1 = new double[3][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      double[][] doubleArray2 = new double[0][3];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray2, doubleArray1, (-323), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      ContourAttrib contourAttrib0 = new ContourAttrib(0.0);
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (ContourAttrib[]) null);
      contourGenerator0.getProgress();
      // Undeclared exception!
      try { 
        contourGenerator0.getContours();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContourAttrib contourAttrib0 = new ContourAttrib(0.0);
      double[] doubleArray0 = new double[9];
      double[][] doubleArray1 = new double[0][6];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, (ContourAttrib[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[8][3];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = 1825.5426885507;
      doubleArray2[1] = (-4080.3965);
      doubleArray2[2] = 3224.879769424;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = (-4433.6293120382);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (-4433.6293120382);
      doubleArray3[2] = (-4080.3965);
      doubleArray3[3] = (-4433.6293120382);
      doubleArray3[4] = 1825.5426885507;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 1825.5426885507;
      doubleArray4[1] = 3224.879769424;
      doubleArray4[2] = (-4433.6293120382);
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (-4433.6293120382);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[7];
      doubleArray6[0] = (-383.98471189751);
      doubleArray6[1] = (-4080.3965);
      doubleArray6[2] = 3224.879769424;
      doubleArray6[3] = 0.0;
      doubleArray6[4] = 3224.879769424;
      doubleArray6[5] = (-4080.3965);
      doubleArray6[6] = 330.863412628;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = 0.0;
      doubleArray7[1] = (-4433.6293120382);
      doubleArray7[2] = 0.0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[4];
      doubleArray8[0] = (-383.98471189751);
      doubleArray8[1] = (-4433.6293120382);
      doubleArray8[2] = (-383.98471189751);
      doubleArray8[3] = 3224.879769424;
      doubleArray0[7] = doubleArray8;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[7];
      ContourAttrib contourAttrib0 = new ContourAttrib(0.0);
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(0.0);
      contourAttribArray0[1] = contourAttrib1;
      ContourAttrib contourAttrib2 = new ContourAttrib((-1.0));
      contourAttribArray0[2] = contourAttrib2;
      ContourAttrib contourAttrib3 = new ContourAttrib((-2169.196234016918));
      contourAttrib3.getLevel();
      contourAttribArray0[3] = contourAttrib3;
      ContourAttrib contourAttrib4 = new ContourAttrib(1.0);
      contourAttribArray0[4] = contourAttrib4;
      ContourAttrib contourAttrib5 = new ContourAttrib(1.7976931348623157E308);
      contourAttribArray0[5] = contourAttrib5;
      ContourAttrib contourAttrib6 = new ContourAttrib(0.0);
      contourAttribArray0[6] = contourAttrib6;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, contourAttribArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data arrays must have more than one row or column.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1.1681195451752322);
      double[][] doubleArray1 = new double[3][2];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, (-1), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1465, false);
      contourGenerator0.cancel();
      contourGenerator0.getProgress();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[2] = 1.7976931348623157E308;
      double[][] doubleArray1 = new double[3][6];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (-2338.460377603);
      doubleArray2[1] = 1.7976931348623157E308;
      doubleArray2[2] = 3433.08592;
      doubleArray2[3] = (-1.1681195451752322);
      doubleArray2[4] = (-1.0);
      doubleArray2[5] = (double) (-1517);
      doubleArray2[6] = 1.7976931348623157E308;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray0, doubleArray1, 1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 2391.59630296877;
      doubleArray1[2] = (-857.37216999399);
      doubleArray1[3] = (-26.10661085903);
      doubleArray1[4] = 1046.67;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = (-2426.87155335);
      doubleArray1[8] = 699.924;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (-2426.87155335);
      doubleArray3[1] = (-2426.87155335);
      doubleArray3[2] = (-1.0);
      doubleArray3[3] = 819.4138483011983;
      doubleArray3[4] = 1046.67;
      doubleArray3[5] = (-857.37216999399);
      doubleArray3[6] = (-857.37216999399);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (-1.0);
      doubleArray4[1] = (-26.10661085903);
      doubleArray4[2] = 699.924;
      doubleArray4[3] = (-1.0);
      doubleArray4[4] = (-2426.87155335);
      doubleArray4[5] = (-857.37216999399);
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = 699.924;
      doubleArray5[1] = (-50.352);
      doubleArray5[2] = 0.0;
      doubleArray5[3] = 0.0;
      doubleArray5[4] = 699.924;
      doubleArray5[5] = (-857.37216999399);
      doubleArray5[6] = 699.924;
      doubleArray5[7] = (-26.10661085903);
      doubleArray5[8] = 699.924;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[2];
      doubleArray6[0] = (-26.10661085903);
      doubleArray6[1] = (-2426.87155335);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[4];
      doubleArray7[0] = (-50.352);
      doubleArray7[1] = (-1.0);
      doubleArray7[2] = 1046.67;
      doubleArray7[3] = (-50.352);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[7];
      doubleArray8[0] = 6201.4271962391;
      doubleArray8[1] = 0.0;
      doubleArray8[2] = 819.4138483011983;
      doubleArray8[3] = 0.0;
      doubleArray8[4] = (-1.0);
      doubleArray8[5] = (-1.0);
      doubleArray8[6] = (-2426.87155335);
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[7];
      doubleArray9[0] = 1046.67;
      doubleArray9[1] = (-857.37216999399);
      doubleArray9[2] = 819.4138483011983;
      doubleArray9[3] = 0.0;
      doubleArray9[4] = 0.0;
      doubleArray9[5] = 0.0;
      doubleArray9[6] = 2391.59630296877;
      doubleArray0[8] = doubleArray9;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[2];
      ContourAttrib contourAttrib0 = new ContourAttrib((-2426.87155335));
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib((-985.784968));
      contourAttribArray0[1] = contourAttrib1;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, contourAttribArray0);
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[4][7];
      doubleArray0[0] = null;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1970, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray0[1] = doubleArray1;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1483, false);
      contourGenerator0.getContours();
      contourGenerator0.getContours();
      contourGenerator0.cancel();
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (-855), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-829.477343154);
      doubleArray1[1] = 3477.6;
      doubleArray1[2] = 1.7976931348623157E308;
      doubleArray1[3] = 671.881;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 671.881;
      doubleArray2[2] = 3477.6;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = (-829.477343154);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 3477.6;
      doubleArray3[1] = 671.881;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = (-829.477343154);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 1.7976931348623157E308;
      doubleArray4[1] = 3477.6;
      doubleArray4[2] = 671.881;
      doubleArray4[3] = 671.881;
      doubleArray4[4] = 0.0;
      doubleArray4[5] = 0.0;
      doubleArray4[6] = 0.0;
      doubleArray4[7] = 1.7976931348623157E308;
      doubleArray4[8] = 3477.6;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = 1.7976931348623157E308;
      doubleArray5[1] = 1755.355922508832;
      doubleArray5[2] = 0.0;
      doubleArray5[3] = 1.7976931348623157E308;
      doubleArray5[4] = 0.0;
      doubleArray5[5] = 3477.6;
      doubleArray5[6] = 0.0;
      doubleArray5[7] = 0.0;
      doubleArray5[8] = 1.0;
      doubleArray0[4] = doubleArray5;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function data must be > 0 for logarithmic intervals.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 4105.404589133302;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 4105.404589133302;
      doubleArray2[1] = 4105.404589133302;
      doubleArray2[2] = 4105.404589133302;
      doubleArray2[3] = (-1459.728936);
      doubleArray2[4] = 4105.404589133302;
      doubleArray2[5] = 4105.404589133302;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 4105.404589133302;
      doubleArray3[1] = (-1459.728936);
      doubleArray3[2] = 4105.404589133302;
      doubleArray3[3] = (-1459.728936);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (-1459.728936);
      doubleArray4[1] = 4105.404589133302;
      doubleArray4[2] = (-1459.728936);
      doubleArray4[3] = (-1459.728936);
      doubleArray4[4] = 4105.404589133302;
      doubleArray4[5] = 4105.404589133302;
      doubleArray0[3] = doubleArray4;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 4, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data arrays must have more than one row or column.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.3221024258760108;
      double[][] doubleArray1 = new double[2][6];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 1, false);
      contourGenerator0.cancel();
      contourGenerator0.getProgress();
      contourGenerator0.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContourAttrib contourAttrib0 = new ContourAttrib(0.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      double[][] doubleArray1 = new double[9][9];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, (ContourAttrib[]) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray0[1] = doubleArray1;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1483, false);
      // Undeclared exception!
      try { 
        contourGenerator0.getContours();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.3276566757493188;
      doubleArray0[1] = 0.32084468664850135;
      doubleArray0[2] = 965.195022863;
      double[][] doubleArray1 = new double[3][1];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, (-1364), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 391, true);
      assertNotNull(contourGenerator0);
      assertEquals(0.0F, contourGenerator0.getProgress(), 0.01F);
      assertFalse(contourGenerator0.done());
      assertEquals(4, doubleArray0.length);
      
      contourGenerator0.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double[][] doubleArray1 = new double[3][2];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, (-1517), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-298.55798461168);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 1.7976931348623157E308;
      double[][] doubleArray1 = new double[5][5];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[0];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, contourAttribArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[][] doubleArray0 = new double[0][1];
      double[][] doubleArray1 = new double[4][4];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 1.7976931348623157E308;
      doubleArray2[1] = 914.95724;
      doubleArray2[2] = (-5002.932771008674);
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 72.94298335;
      doubleArray2[5] = 0.0;
      doubleArray2[6] = (-769.9753888320013);
      doubleArray2[7] = 1619.902258434634;
      doubleArray2[8] = 0.0;
      doubleArray1[0] = doubleArray2;
      double[] doubleArray3 = new double[0];
      assertFalse(doubleArray3.equals((Object)doubleArray2));
      
      doubleArray1[1] = doubleArray3;
      double[] doubleArray4 = new double[7];
      assertFalse(doubleArray4.equals((Object)doubleArray3));
      assertFalse(doubleArray4.equals((Object)doubleArray2));
      
      doubleArray4[0] = (-5002.932771008674);
      doubleArray4[1] = (-769.9753888320013);
      doubleArray4[2] = (-5002.932771008674);
      doubleArray4[3] = 914.95724;
      doubleArray4[4] = (-5002.932771008674);
      doubleArray4[5] = 1.7976931348623157E308;
      doubleArray4[6] = 914.95724;
      doubleArray1[2] = doubleArray4;
      double[] doubleArray5 = new double[0];
      assertFalse(doubleArray5.equals((Object)doubleArray2));
      assertFalse(doubleArray5.equals((Object)doubleArray4));
      assertFalse(doubleArray5.equals((Object)doubleArray3));
      
      doubleArray1[3] = doubleArray5;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, 570, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[][] doubleArray0 = new double[21][9];
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 1.0;
      doubleArray1[6] = 0.0;
      doubleArray0[1] = doubleArray1;
      int int0 = 1483;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1483, false);
      assertNotNull(contourGenerator0);
      assertEquals(0.0F, contourGenerator0.getProgress(), 0.01F);
      assertFalse(contourGenerator0.done());
      assertEquals(21, doubleArray0.length);
      
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, false);
      assertNotNull(contourGenerator0);
      assertEquals(0.0F, contourGenerator0.getProgress(), 0.01F);
      assertFalse(contourGenerator0.done());
      assertEquals(2, doubleArray0.length);
      
      ContourPath[] contourPathArray0 = contourGenerator0.getContours();
      assertNotNull(contourPathArray0);
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(contourGenerator0.done());
      assertEquals(2, doubleArray0.length);
      assertEquals(0, contourPathArray0.length);
      
      ContourPath[] contourPathArray1 = contourGenerator0.getContours();
      assertFalse(contourPathArray1.equals((Object)contourPathArray0));
      assertNotSame(contourPathArray1, contourPathArray0);
      assertNotNull(contourPathArray1);
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(contourGenerator0.done());
      assertEquals(2, doubleArray0.length);
      assertEquals(0, contourPathArray1.length);
      
      contourGenerator0.cancel();
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(contourGenerator0.done());
      assertEquals(2, doubleArray0.length);
      
      ContourPath[] contourPathArray2 = contourGenerator0.getContours();
      assertFalse(contourPathArray2.equals((Object)contourPathArray1));
      assertFalse(contourPathArray2.equals((Object)contourPathArray0));
      assertNotSame(contourPathArray2, contourPathArray1);
      assertNotSame(contourPathArray2, contourPathArray0);
      assertNotNull(contourPathArray2);
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(contourGenerator0.done());
      assertEquals(2, doubleArray0.length);
      assertEquals(0, contourPathArray2.length);
      
      boolean boolean0 = contourGenerator0.done();
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(contourGenerator0.done());
      assertTrue(boolean0);
      assertEquals(2, doubleArray0.length);
      
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, true);
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertNotNull(contourGenerator1);
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertFalse(contourGenerator1.done());
      assertEquals(2, doubleArray0.length);
      
      float float0 = contourGenerator1.getProgress();
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertNotSame(contourGenerator1, contourGenerator0);
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertFalse(contourGenerator1.done());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2, doubleArray0.length);
      
      contourGenerator1.cancel();
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertNotSame(contourGenerator1, contourGenerator0);
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertFalse(contourGenerator1.done());
      assertEquals(2, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 118.57;
      doubleArray1[2] = 2635.047965020546;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, true);
      assertNotNull(contourGenerator0);
      assertFalse(contourGenerator0.done());
      assertEquals(0.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      
      ContourPath[] contourPathArray0 = contourGenerator0.getContours();
      assertNotNull(contourPathArray0);
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, contourPathArray0.length);
      
      ContourPath[] contourPathArray1 = contourGenerator0.getContours();
      assertFalse(contourPathArray1.equals((Object)contourPathArray0));
      assertNotSame(contourPathArray1, contourPathArray0);
      assertNotNull(contourPathArray1);
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, contourPathArray1.length);
      
      contourGenerator0.cancel();
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      
      ContourPath[] contourPathArray2 = contourGenerator0.getContours();
      assertFalse(contourPathArray2.equals((Object)contourPathArray1));
      assertFalse(contourPathArray2.equals((Object)contourPathArray0));
      assertNotSame(contourPathArray2, contourPathArray1);
      assertNotSame(contourPathArray2, contourPathArray0);
      assertNotNull(contourPathArray2);
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      assertEquals(0, contourPathArray2.length);
      
      boolean boolean0 = contourGenerator0.done();
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertTrue(boolean0);
      assertEquals(4, doubleArray0.length);
      
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, false);
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertNotNull(contourGenerator1);
      assertFalse(contourGenerator1.done());
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      
      float float0 = contourGenerator1.getProgress();
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertNotSame(contourGenerator1, contourGenerator0);
      assertFalse(contourGenerator1.done());
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, doubleArray0.length);
      
      contourGenerator0.cancel();
      assertFalse(contourGenerator0.equals((Object)contourGenerator1));
      assertNotSame(contourGenerator0, contourGenerator1);
      assertTrue(contourGenerator0.done());
      assertEquals(1.0F, contourGenerator0.getProgress(), 0.01F);
      assertEquals(4, doubleArray0.length);
      
      boolean boolean1 = contourGenerator1.done();
      assertFalse(contourGenerator1.equals((Object)contourGenerator0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(contourGenerator1, contourGenerator0);
      assertFalse(contourGenerator1.done());
      assertEquals(0.0F, contourGenerator1.getProgress(), 0.01F);
      assertFalse(boolean1);
      assertEquals(4, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 0.0;
      doubleArray0[0] = 0.0;
      double[][] doubleArray1 = new double[3][6];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, 1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[][] doubleArray0 = new double[4][9];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 1465, false);
      assertNotNull(contourGenerator0);
      assertEquals(0.0F, contourGenerator0.getProgress(), 0.01F);
      assertFalse(contourGenerator0.done());
      assertEquals(4, doubleArray0.length);
      
      contourGenerator0.getContours();
  }
}
