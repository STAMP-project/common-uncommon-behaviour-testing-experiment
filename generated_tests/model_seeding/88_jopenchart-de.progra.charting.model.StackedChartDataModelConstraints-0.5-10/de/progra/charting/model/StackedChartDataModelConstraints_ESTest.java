/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 22:28:39 GMT 2019
 */

package de.progra.charting.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.model.AbstractChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackedChartDataModelConstraints_ESTest extends StackedChartDataModelConstraints_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (double) (-2239);
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, Integer.MAX_VALUE);
      stackedChartDataModelConstraints0.getMaximumColumnValue();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (double) (-2239);
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, Integer.MAX_VALUE);
      stackedChartDataModelConstraints0.getMinimumColumnValue();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[3];
      intArray1[1] = (-2239);
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0);
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[9];
      intArray1[2] = (-2239);
      intArray1[4] = (-2239);
      intArray0[2] = intArray1;
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0, false);
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[5];
      intArray1[2] = 7;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[6];
      double[] doubleArray0 = new double[7];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 1);
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[7];
      doubleArray1[2] = (-2239.0);
      String[] stringArray0 = new String[7];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray1, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, (-3251), false);
      stackedChartDataModelConstraints0.getMinimumColumnValue();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      String[] stringArray0 = new String[3];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(doubleArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 480);
      stackedChartDataModelConstraints0.getMaximumColumnValue();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, (-24));
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, (-1));
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumColumnValue();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, (-19));
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumColumnValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, (-1));
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, (-19));
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 480);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumColumnValue();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 1263, true);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumColumnValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[1];
      String[] stringArray0 = new String[6];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0);
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMaximumColumnValue();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, Integer.MAX_VALUE);
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumColumnValue();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[9];
      intArray1[4] = (-2239);
      intArray0[2] = intArray1;
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0);
      Number number0 = stackedChartDataModelConstraints0.getMinimumValue();
      assertEquals((-3000.0), number0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[9];
      intArray1[2] = (-2239);
      intArray0[2] = intArray1;
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 1);
      editableChartDataModel0.setManualScale(true);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      int[] intArray1 = new int[5];
      intArray1[2] = 7;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[6];
      double[] doubleArray0 = new double[7];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 1);
      Number number0 = stackedChartDataModelConstraints0.getMinimumValue();
      assertEquals(0.0, number0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0);
      Number number0 = stackedChartDataModelConstraints0.getMinimumValue();
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.setAutoScale(true);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0);
      Number number0 = stackedChartDataModelConstraints0.getMaximumValue();
      assertEquals(Double.NaN, number0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[0];
      String[] stringArray0 = new String[7];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, (-2239), true);
      Number number0 = stackedChartDataModelConstraints0.getMaximumValue();
      assertEquals(1, number0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[][] intArray0 = new int[4][6];
      double[] doubleArray0 = new double[1];
      String[] stringArray0 = new String[6];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 0, true);
      double double0 = stackedChartDataModelConstraints0.getMinimumColumnValue();
      assertEquals(0.0, double0, 0.01);
  }
}
