/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:18:02 GMT 2019
 */

package fr.unice.gfarce.interGraph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fr.unice.gfarce.interGraph.TableStockage;
import java.awt.AWTEventMulticaster;
import java.awt.event.MouseWheelListener;
import java.math.RoundingMode;
import javax.swing.JColorChooser;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.plaf.synth.SynthViewportUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TableStockage_ESTest extends TableStockage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      TableStockage tableStockage1 = new TableStockage(1492, 1556);
      assertEquals(1491, tableStockage1.getRowCount());
      assertEquals(1556, tableStockage1.getColumnCount());
      assertNotNull(tableStockage1);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      Class<?> class0 = tableStockage1.getColumnClass(764);
      assertEquals(1491, tableStockage1.getRowCount());
      assertEquals(1556, tableStockage1.getColumnCount());
      assertEquals(1, class0.getModifiers());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertFalse(class0.isAnnotation());
      assertEquals("class java.lang.Object", class0.toString());
      assertFalse(class0.isPrimitive());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertNotNull(class0);
      assertNotSame(tableStockage1, tableStockage0);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1, 1);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      boolean boolean0 = tableStockage0.isCellEditable(1, 1);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage0.getColumnCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<SynthViewportUI> class0 = SynthViewportUI.class;
      int int0 = tableStockage0.findColumn("-#");
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals((-1), int0);
      
      SynthViewportUI[] synthViewportUIArray0 = tableStockage0.getListeners(class0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(synthViewportUIArray0);
      assertEquals(0, synthViewportUIArray0.length);
      
      int int1 = (-1);
      tableStockage0.fireTableRowsUpdated((-1), (-1));
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      int int2 = 1736;
      tableStockage0.fireTableRowsInserted(1736, 1736);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      boolean boolean0 = tableStockage0.isCellEditable(1736, 1736);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertTrue(boolean0);
      
      String string0 = "]_XmUKOHh>0&#";
      TableModelListener[] tableModelListenerArray0 = tableStockage0.getTableModelListeners();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableModelListenerArray0);
      assertEquals(0, tableModelListenerArray0.length);
      
      // Undeclared exception!
      try { 
        tableStockage0.setColumnName((-1), "]_XmUKOHh>0&#");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(0, 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1551, 1551);
      assertEquals(1550, tableStockage0.getRowCount());
      assertEquals(1551, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      int int0 = 16;
      Class<String> class0 = String.class;
      tableStockage0.setColumnClass(16, class0);
      assertEquals(1550, tableStockage0.getRowCount());
      assertEquals(1551, tableStockage0.getColumnCount());
      
      Object object0 = tableStockage0.getValueAt(0, 435);
      assertEquals(1550, tableStockage0.getRowCount());
      assertEquals(1551, tableStockage0.getColumnCount());
      assertNull(object0);
      
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      assertNotNull(synthViewportUI0);
      
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(synthViewportUI0, 1554, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1553
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<Object> class0 = Object.class;
      tableStockage0.setColumnClass(1537, class0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Class<JColorChooser> class0 = JColorChooser.class;
      tableStockage0.setColumnClass(265, class0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      
      Class<String> class1 = String.class;
      tableStockage0.setColumnClass(1512, class1);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      
      TableStockage tableStockage1 = new TableStockage();
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(tableStockage1);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      tableStockage1.setColumnClass(537, class1);
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotSame(tableStockage1, tableStockage0);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      assertNotNull(synthViewportUI0);
      
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(synthViewportUI0, 0, 1520);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.plaf.synth.SynthViewportUI cannot be cast to java.lang.String
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      Object[][] objectArray0 = new Object[4][1];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      TableModelListener[] tableModelListenerArray0 = tableStockage0.getTableModelListeners();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableModelListenerArray0);
      assertEquals(0, tableModelListenerArray0.length);
      
      int int0 = tableStockage0.getColumnCount();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, int0);
      
      int int1 = tableStockage0.getRowCount();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      Class<Object> class0 = Object.class;
      tableStockage0.setColumnClass(7, class0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      
      TableStockage tableStockage1 = new TableStockage();
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(tableStockage1);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      int int2 = 0;
      String string0 = null;
      // Undeclared exception!
      try { 
        tableStockage1.setColumnName(0, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      int int0 = tableStockage0.getColumnCount();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1566, 1566);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Object object0 = tableStockage0.getValueAt(341, 0);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      assertNull(object0);
      
      Class<JColorChooser> class0 = JColorChooser.class;
      TableModelEvent tableModelEvent0 = new TableModelEvent(tableStockage0, 1566);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      assertNotNull(tableModelEvent0);
      
      tableStockage0.fireTableChanged(tableModelEvent0);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      
      tableStockage0.setColumnClass(341, class0);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, int0);
      
      tableStockage0.setValueAt(class0, 1, 0);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      
      boolean boolean0 = tableStockage0.isCellEditable(1565, 1);
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1566, tableStockage0.getColumnCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Object object0 = tableStockage0.getValueAt(341, 0);
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, tableStockage0.getColumnCount());
      assertNull(object0);
      
      int int0 = tableStockage0.getColumnCount();
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, tableStockage0.getColumnCount());
      assertEquals(1557, int0);
      
      int int1 = tableStockage0.getColumnCount();
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, tableStockage0.getColumnCount());
      assertTrue(int1 == int0);
      assertEquals(1557, int1);
      
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(100, (int)integer0);
      
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(integer0, 1, 1557);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1557
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      String string0 = "";
      int int0 = 0;
      TableModelListener[] tableModelListenerArray0 = tableStockage0.getTableModelListeners();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableModelListenerArray0);
      assertEquals(0, tableModelListenerArray0.length);
      
      int int1 = 68;
      tableStockage0.fireTableCellUpdated(0, 68);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      TableModelListener[] tableModelListenerArray1 = tableStockage0.getTableModelListeners();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableModelListenerArray1);
      assertNotSame(tableModelListenerArray1, tableModelListenerArray0);
      assertFalse(tableModelListenerArray1.equals((Object)tableModelListenerArray0));
      assertEquals(0, tableModelListenerArray1.length);
      
      int int2 = tableStockage0.findColumn("");
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-1), int2);
      
      String[] stringArray0 = tableStockage0.getNomColonnes();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(stringArray0);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass(68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 3033;
      TableStockage tableStockage0 = new TableStockage(3033, 3033);
      assertEquals(3033, tableStockage0.getColumnCount());
      assertEquals(3032, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(3033, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1566, 1566);
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Object object0 = tableStockage0.getValueAt(341, 0);
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
      assertNull(object0);
      
      Class<JColorChooser> class0 = JColorChooser.class;
      tableStockage0.setColumnClass(341, class0);
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
      assertEquals(1565, int0);
      
      SynthViewportUI synthViewportUI0 = new SynthViewportUI();
      assertNotNull(synthViewportUI0);
      
      tableStockage0.remplirMatrice(synthViewportUI0, 1565, 1565);
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
      
      tableStockage0.setColumnClass(1533, class0);
      assertEquals(1566, tableStockage0.getColumnCount());
      assertEquals(1565, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(7, 2134);
      assertEquals(6, tableStockage0.getRowCount());
      assertEquals(2134, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(class0, 2134, (-1172));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2133
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[0];
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(stringArray0, (Object[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(7, 10);
      assertEquals(10, tableStockage0.getColumnCount());
      assertEquals(6, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(class0, 10, (-1170));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      tableStockage0.fireTableRowsInserted((-1994), (-1065));
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      Object object0 = null;
      int int0 = 882;
      // Undeclared exception!
      try { 
        tableStockage0.setValueAt((Object) null, 882, 882);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      String[] stringArray0 = tableStockage0.getNomColonnes();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(3830, 3830);
      assertEquals(3830, tableStockage0.getColumnCount());
      assertEquals(3829, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      int int0 = tableStockage0.getColumnCount();
      assertEquals(3830, tableStockage0.getColumnCount());
      assertEquals(3829, tableStockage0.getRowCount());
      assertEquals(3830, int0);
      
      Class<Object> class0 = Object.class;
      tableStockage0.setColumnClass(649, class0);
      assertEquals(3830, tableStockage0.getColumnCount());
      assertEquals(3829, tableStockage0.getRowCount());
      
      Class<String> class1 = String.class;
      tableStockage0.setColumnClass(649, class1);
      assertEquals(3830, tableStockage0.getColumnCount());
      assertEquals(3829, tableStockage0.getRowCount());
      
      TableStockage tableStockage1 = new TableStockage();
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(0, tableStockage1.getColumnCount());
      assertNotNull(tableStockage1);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      // Undeclared exception!
      tableStockage0.setColumnClass(473, class1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 1590;
      TableStockage tableStockage0 = new TableStockage(1590, 1590);
      assertEquals(1589, tableStockage0.getRowCount());
      assertEquals(1590, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int int1 = tableStockage0.getColumnCount();
      assertEquals(1589, tableStockage0.getRowCount());
      assertEquals(1590, tableStockage0.getColumnCount());
      assertTrue(int1 == int0);
      assertEquals(1590, int1);
      
      int int2 = new Integer((-1));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-1), int2);
      
      tableStockage0.setColumnName(736, "HBc");
      assertEquals(1589, tableStockage0.getRowCount());
      assertEquals(1590, tableStockage0.getColumnCount());
      
      // Undeclared exception!
      try { 
        tableStockage0.getColumnName(1590);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1590
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "fr.unice.gfarce.interGraph.TableStockage";
      stringArray0[1] = "#x";
      stringArray0[2] = "zTAYUobue9zcI,1*";
      stringArray0[3] = "!oMx3j/1m*>3%xAt9!";
      Object[][] objectArray0 = new Object[2][1];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(4, tableStockage0.getColumnCount());
      assertEquals(2, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      assertEquals(4, stringArray0.length);
      assertEquals(2, objectArray0.length);
      
      Object object0 = tableStockage0.getValueAt(0, 0);
      assertEquals(4, tableStockage0.getColumnCount());
      assertEquals(2, tableStockage0.getRowCount());
      assertNotNull(object0);
      assertEquals("fr.unice.gfarce.interGraph.TableStockage", object0);
      assertEquals(4, stringArray0.length);
      assertEquals(2, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      assertEquals(1557, tableStockage0.getColumnCount());
      assertEquals(1556, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Object object0 = tableStockage0.getValueAt(341, 0);
      assertEquals(1557, tableStockage0.getColumnCount());
      assertEquals(1556, tableStockage0.getRowCount());
      assertNull(object0);
      
      int int0 = tableStockage0.getColumnCount();
      assertEquals(1557, tableStockage0.getColumnCount());
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, int0);
      
      int int1 = tableStockage0.getColumnCount();
      assertEquals(1557, tableStockage0.getColumnCount());
      assertEquals(1556, tableStockage0.getRowCount());
      assertTrue(int1 == int0);
      assertEquals(1557, int1);
      
      // Undeclared exception!
      try { 
        tableStockage0.setColumnName((-1), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = ">9&7XymM)2#&sr`";
      Object[][] objectArray0 = new Object[0][1];
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      tableStockage0.fireTableRowsInserted((-1553), 816);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      TableModelEvent tableModelEvent0 = new TableModelEvent(tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertNotNull(tableModelEvent0);
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      tableStockage0.fireTableChanged(tableModelEvent0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      int int0 = tableModelEvent0.getLastRow();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      tableStockage0.fireTableChanged(tableModelEvent0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      int int1 = 2401;
      tableStockage0.fireTableCellUpdated(2401, 0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      tableStockage0.fireTableRowsDeleted(3130, (-3391));
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      tableStockage0.fireTableRowsInserted(199, 0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(2, stringArray0.length);
      assertEquals(0, objectArray0.length);
      
      int int2 = (-1605);
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(">9&7XymM)2#&sr`", (-1605), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1606
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, int0);
      
      Class<Boolean> class0 = Boolean.TYPE;
      assertEquals("boolean", class0.toString());
      assertFalse(class0.isAnnotation());
      assertEquals(1041, class0.getModifiers());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertTrue(class0.isPrimitive());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertNotNull(class0);
      
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(0, (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "!oc(R+";
      stringArray0[1] = "fr.unice.gfarce.interGraph.TableStockage";
      stringArray0[2] = "/MCl4";
      stringArray0[3] = "{O]5t";
      stringArray0[4] = "~nq*coV+;,Q$CgXR64C";
      Object[][] objectArray0 = new Object[2][9];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(5, tableStockage0.getColumnCount());
      assertEquals(2, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      assertEquals(5, stringArray0.length);
      assertEquals(2, objectArray0.length);
      
      Class<?> class0 = tableStockage0.getColumnClass(1);
      assertEquals(5, tableStockage0.getColumnCount());
      assertEquals(2, tableStockage0.getRowCount());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isPrimitive());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertEquals("class java.lang.String", class0.toString());
      assertEquals(17, class0.getModifiers());
      assertNotNull(class0);
      assertEquals(5, stringArray0.length);
      assertEquals(2, objectArray0.length);
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(5, tableStockage0.getColumnCount());
      assertEquals(2, tableStockage0.getRowCount());
      assertEquals(2, int0);
      assertEquals(5, stringArray0.length);
      assertEquals(2, objectArray0.length);
      
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass((-2964));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2964
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1, 0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<String> class0 = String.class;
      tableStockage0.setColumnClass(0, class0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt(0, 2155);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "B8<a<.*\"@)@aQ)$";
      stringArray0[1] = "':x";
      stringArray0[2] = "";
      stringArray0[3] = "Uuv8?tP[D?{}2)cUKh";
      stringArray0[4] = "0VYj";
      Object[][] objectArray0 = new Object[5][7];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(5, tableStockage0.getRowCount());
      assertEquals(5, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      assertEquals(5, stringArray0.length);
      assertEquals(5, objectArray0.length);
      
      JTable jTable0 = new JTable();
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertNotNull(jTable0);
      
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      assertNull(mouseWheelListener1);
      
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      assertNull(mouseWheelListener2);
      
      jTable0.addMouseWheelListener((MouseWheelListener) null);
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      
      tableStockage0.removeTableModelListener(jTable0);
      assertEquals(5, tableStockage0.getRowCount());
      assertEquals(5, tableStockage0.getColumnCount());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertEquals(5, stringArray0.length);
      assertEquals(5, objectArray0.length);
      
      String string0 = tableStockage0.getColumnName(1);
      assertEquals(5, tableStockage0.getRowCount());
      assertEquals(5, tableStockage0.getColumnCount());
      assertNotNull(string0);
      assertEquals("':x", string0);
      assertEquals(5, stringArray0.length);
      assertEquals(5, objectArray0.length);
      
      int int0 = 1529;
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass(1529);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1529
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "BVmV'm";
      Object[][] objectArray0 = new Object[8][7];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      objectArray0[5] = (Object[]) stringArray0;
      objectArray0[6] = (Object[]) stringArray0;
      objectArray0[7] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(3, tableStockage0.getColumnCount());
      assertEquals(8, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      assertEquals(3, stringArray0.length);
      assertEquals(8, objectArray0.length);
      
      tableStockage0.addTableModelListener((TableModelListener) null);
      assertEquals(3, tableStockage0.getColumnCount());
      assertEquals(8, tableStockage0.getRowCount());
      assertEquals(3, stringArray0.length);
      assertEquals(8, objectArray0.length);
      
      Boolean boolean0 = new Boolean(true);
      assertNotNull(boolean0);
      assertTrue(boolean0);
      
      boolean boolean1 = Boolean.logicalAnd(true, true);
      assertTrue(boolean1);
      
      int int0 = (-978);
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(boolean0, (-978), (-978));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -979
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      Class<Boolean> class0 = Boolean.class;
      tableStockage0.setColumnClass(1970, class0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(class0, 0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to java.lang.String
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      tableStockage0.fireTableCellUpdated(2170, (-3162));
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      
      TableModelListener[] tableModelListenerArray0 = tableStockage0.getTableModelListeners();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableModelListenerArray0);
      assertEquals(0, tableModelListenerArray0.length);
      
      TableStockage tableStockage1 = new TableStockage();
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(tableStockage1);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      tableStockage1.fireTableRowsInserted((-2887), 2155);
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotSame(tableStockage1, tableStockage0);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      
      Class<String> class0 = String.class;
      tableStockage0.setColumnClass((-2887), class0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotSame(tableStockage0, tableStockage1);
      assertFalse(tableStockage0.equals((Object)tableStockage1));
      
      Class<RoundingMode> class1 = RoundingMode.class;
      tableStockage1.setColumnClass((-622), class1);
      assertEquals(0, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotSame(tableStockage1, tableStockage0);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Object[][] objectArray0 = new Object[1][1];
      objectArray0[0] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(1, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      assertEquals(0, stringArray0.length);
      assertEquals(1, objectArray0.length);
      
      int int0 = tableStockage0.getRowCount();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(1, tableStockage0.getRowCount());
      assertEquals(1, int0);
      assertEquals(0, stringArray0.length);
      assertEquals(1, objectArray0.length);
      
      int int1 = tableStockage0.getColumnCount();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(1, tableStockage0.getRowCount());
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(0, stringArray0.length);
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      Class<String> class0 = String.class;
      tableStockage0.setColumnClass(645, class0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      tableStockage0.getValueAt(341, 0);
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(1557, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1949, 1949);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(1949, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      TableStockage tableStockage1 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage1.setValueAt((Object) null, (-238), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1, 1);
      tableStockage0.getTableModelListeners();
      int int0 = tableStockage0.getColumnCount();
      assertEquals(1, int0);
      
      int int1 = tableStockage0.getRowCount();
      assertEquals(0, int1);
      
      Class<Object> class0 = Object.class;
      Class<String> class1 = String.class;
      tableStockage0.setColumnClass(26, class1);
      tableStockage0.setColumnClass(8, class0);
      Object object0 = new Object();
      tableStockage0.getNomColonnes();
      assertEquals(1, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      String string0 = "";
      TableStockage tableStockage0 = new TableStockage();
      int int0 = (-4568);
      Class<Boolean> class0 = Boolean.class;
      tableStockage0.setColumnClass(1921, class0);
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt((-80), 341);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -80
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Object[][] objectArray0 = new Object[1][0];
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "B8<a<.*\"@)@aQ)$";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "Uuv8?tP[D?{}2)cUKh";
      stringArray0[4] = "0VYj";
      Object[][] objectArray0 = new Object[5][7];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      JTable jTable0 = new JTable();
      tableStockage0.removeTableModelListener(jTable0);
      tableStockage0.getColumnName(1);
      int int0 = 1529;
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass(1529);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1529
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = ",bP>B,tiVYe:";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "p##04BUo+a>QL[,~d&r";
      stringArray0[5] = "Im";
      Object[][] objectArray0 = new Object[4][4];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) "";
      objectArray1[1] = (Object) "";
      objectArray1[2] = (Object) ",bP>B,tiVYe:";
      objectArray1[3] = (Object) "";
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "";
      objectArray1[6] = (Object) "";
      objectArray1[7] = (Object) ",bP>B,tiVYe:";
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = new Boolean("f@r<<]M_aW>G");
      objectArray1[8] = (Object) boolean1;
      objectArray0[2] = objectArray1;
      objectArray0[3] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt(0, (-3847));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3847
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      tableStockage0.isCellEditable(0, 1539);
      boolean boolean0 = tableStockage0.isCellEditable((-131), 1);
      assertTrue(boolean0);
      
      tableStockage0.getColumnName(1);
      tableStockage0.getColumnName(1511);
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      tableStockage0.getRowCount();
      // Undeclared exception!
      try { 
        tableStockage0.getColumnName(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(534, 534);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(534, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      
      Class<Boolean> class0 = Boolean.class;
      tableStockage0.setColumnClass((-3804), class0);
      assertEquals(0, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 1;
      TableStockage tableStockage0 = new TableStockage();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "BVmV'm";
      stringArray0[1] = "";
      stringArray0[2] = "BVmV'm";
      stringArray0[3] = "BVmV'm";
      stringArray0[4] = "";
      Boolean boolean0 = new Boolean(true);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(object0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage((-1017), (-1017));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      Object[][] objectArray0 = new Object[4][1];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      tableStockage0.getTableModelListeners();
      tableStockage0.getColumnCount();
      tableStockage0.getRowCount();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(7, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      tableStockage0.fireTableRowsDeleted(0, (-1));
      Class<SynthViewportUI> class0 = SynthViewportUI.class;
      tableStockage0.getListeners(class0);
      TableModelEvent tableModelEvent0 = new TableModelEvent(tableStockage0, 0);
      tableModelEvent0.getFirstRow();
      tableModelEvent0.getFirstRow();
      tableModelEvent0.getFirstRow();
      tableModelEvent0.getLastRow();
      tableModelEvent0.getLastRow();
      tableStockage0.findColumn("");
      tableStockage0.fireTableChanged(tableModelEvent0);
      tableStockage0.fireTableChanged(tableModelEvent0);
      JTable jTable0 = new JTable();
      jTable0.getActionMap();
      tableStockage0.addTableModelListener(jTable0);
      String string0 = "F]PPCLfkT-y";
      tableStockage0.findColumn("F]PPCLfkT-y");
      tableStockage0.getRowCount();
      tableStockage0.getRowCount();
      tableStockage0.isCellEditable(459, 0);
      tableStockage0.fireTableDataChanged();
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = (-762);
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage((-762), (-3396));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      tableStockage0.getValueAt(341, 0);
      tableStockage0.getColumnCount();
      // Undeclared exception!
      try { 
        tableStockage0.setColumnName((-1), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1557, 1557);
      tableStockage0.getValueAt(341, 0);
      tableStockage0.setColumnName(3, "");
      Class<Boolean> class0 = Boolean.class;
      tableStockage0.setColumnClass(0, class0);
      Class<Object> class1 = Object.class;
      tableStockage0.setColumnClass(341, class1);
      Object object0 = new Object();
      String[] stringArray0 = tableStockage0.getNomColonnes();
      assertEquals(1556, tableStockage0.getRowCount());
      assertEquals(1557, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      int int0 = 3879;
      tableStockage0.fireTableRowsInserted(558, 3879);
      Class<JColorChooser> class0 = JColorChooser.class;
      tableStockage0.setColumnClass(3559, class0);
      tableStockage0.fireTableStructureChanged();
      // Undeclared exception!
      try { 
        tableStockage0.getColumnName(3559);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3559
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 0;
      TableStockage tableStockage0 = new TableStockage(10, 0);
      int int1 = 2155;
      int int2 = 16;
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(16, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
