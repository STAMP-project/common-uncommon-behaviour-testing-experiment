/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:18:55 GMT 2019
 */

package ipac;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ipac.IPv4;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import javax.swing.Icon;
import javax.swing.JRadioButton;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IPv4_ESTest extends IPv4_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IPv4 iPv4_0 = new IPv4();
      iPv4_0.setComponentOrientation((ComponentOrientation) null);
      // Undeclared exception!
      try { 
        iPv4_0.displayError("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IPv4 iPv4_0 = new IPv4();
      // Undeclared exception!
      try { 
        iPv4_0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ipac.IPv4", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IPv4 iPv4_0 = new IPv4();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getLeafIcon();
      JRadioButton jRadioButton0 = new JRadioButton(icon0);
      iPv4_0.splittingPrefixRadioButton = jRadioButton0;
      ActionEvent actionEvent0 = new ActionEvent(iPv4_0, (-2677), (String) null);
      iPv4_0.actionPerformed(actionEvent0);
      assertEquals(0, actionEvent0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IPv4 iPv4_0 = new IPv4();
      ActionEvent actionEvent0 = new ActionEvent(iPv4_0, (-2677), (String) null);
      iPv4_0.actionPerformed(actionEvent0);
      assertFalse(iPv4_0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IPv4 iPv4_0 = new IPv4();
      // Undeclared exception!
      try { 
        iPv4_0.displayError("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
