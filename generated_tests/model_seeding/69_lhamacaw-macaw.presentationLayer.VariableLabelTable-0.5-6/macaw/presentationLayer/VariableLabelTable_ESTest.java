/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:36:38 GMT 2019
 */

package macaw.presentationLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DateFormat;
import javax.swing.DefaultCellEditor;
import javax.swing.JFormattedTextField;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.MacawCurationAPI;
import macaw.businessLayer.User;
import macaw.businessLayer.Variable;
import macaw.persistenceLayer.demo.DemonstrationCurationService;
import macaw.persistenceLayer.demo.DemonstrationRetrievalService;
import macaw.persistenceLayer.production.ProductionCurationService;
import macaw.presentationLayer.VariableLabelTable;
import macaw.system.SessionProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VariableLabelTable_ESTest extends VariableLabelTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService(sessionProperties0);
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationRetrievalService0, true);
      variableLabelTable0.addValueLabel();
      variableLabelTable0.addValueLabel();
      variableLabelTable0.addValueLabel();
      assertFalse(variableLabelTable0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService((SessionProperties) null, false);
      User user0 = new User();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationRetrievalService0, true);
      Variable variable0 = mock(Variable.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(variable0).getIdentifier();
      variableLabelTable0.setData(user0, variable0);
      assertEquals("UNVERIFIED", user0.getStatus());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DemonstrationRetrievalService demonstrationRetrievalService0 = new DemonstrationRetrievalService((SessionProperties) null, false);
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationRetrievalService0, true);
      // Undeclared exception!
      try { 
        variableLabelTable0.save();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      ProductionCurationService productionCurationService0 = new ProductionCurationService(sessionProperties0);
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(productionCurationService0, false);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        variableLabelTable0.setData(user0, derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to create connection.
         //
         verifyException("macaw.persistenceLayer.production.SQLConnectionManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SessionProperties sessionProperties0 = new SessionProperties();
      ProductionCurationService productionCurationService0 = new ProductionCurationService(sessionProperties0);
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(productionCurationService0, false);
      try { 
        variableLabelTable0.save();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to create connection.
         //
         verifyException("macaw.persistenceLayer.production.SQLConnectionManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VariableLabelTable variableLabelTable0 = new VariableLabelTable((MacawCurationAPI) null, false);
      variableLabelTable0.changeSelection(0, (-1), false, false);
      // Undeclared exception!
      try { 
        variableLabelTable0.deleteValueLabel();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VariableLabelTable variableLabelTable0 = new VariableLabelTable((MacawCurationAPI) null, false);
      variableLabelTable0.changeSelection(0, (-1), false, false);
      // Undeclared exception!
      try { 
        variableLabelTable0.addValueLabel();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DemonstrationCurationService demonstrationCurationService0 = new DemonstrationCurationService();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationCurationService0, false);
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      DateFormatter dateFormatter0 = new DateFormatter(dateFormat0);
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(dateFormatter0, dateFormatter0, dateFormatter0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jFormattedTextField0);
      variableLabelTable0.setCellEditor(defaultCellEditor0);
      variableLabelTable0.addValueLabel();
      assertTrue(variableLabelTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DemonstrationCurationService demonstrationCurationService0 = new DemonstrationCurationService();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationCurationService0, true);
      variableLabelTable0.addValueLabel();
      variableLabelTable0.deleteValueLabel();
      assertTrue(variableLabelTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VariableLabelTable variableLabelTable0 = new VariableLabelTable((MacawCurationAPI) null, true);
      variableLabelTable0.deleteValueLabel();
      assertFalse(variableLabelTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DemonstrationCurationService demonstrationCurationService0 = new DemonstrationCurationService();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationCurationService0, true);
      variableLabelTable0.addValueLabel();
      variableLabelTable0.addValueLabel();
      variableLabelTable0.deleteValueLabel();
      variableLabelTable0.addValueLabel();
      assertTrue(variableLabelTable0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DemonstrationCurationService demonstrationCurationService0 = new DemonstrationCurationService();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationCurationService0, true);
      variableLabelTable0.cancel();
      assertFalse(variableLabelTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DemonstrationCurationService demonstrationCurationService0 = new DemonstrationCurationService();
      VariableLabelTable variableLabelTable0 = new VariableLabelTable(demonstrationCurationService0, true);
      User user0 = new User();
      // Undeclared exception!
      try { 
        variableLabelTable0.setData(user0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
