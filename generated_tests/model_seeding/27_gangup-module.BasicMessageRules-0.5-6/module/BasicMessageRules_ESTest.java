/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:23:40 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import module.BasicMessageRules;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import state.GameState;
import state.Player;
import state.TextMessage;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BasicMessageRules_ESTest extends BasicMessageRules_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      GameState gameState0 = new GameState(0);
      Player player0 = new Player(4, "", 2);
      gameState0.addPlayer(player0);
      TextMessage textMessage0 = new TextMessage(4, 2, 1082, "RX$G&");
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage();
      // Undeclared exception!
      try { 
        basicMessageRules0.checkRules(textMessage0, (GameState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("module.BasicMessageRules", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage(1, 1, 2, (String) null);
      GameState gameState0 = new GameState(0);
      Player player0 = new Player(1, (String) null, 13);
      gameState0.addPlayer(player0);
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage(1, 1, (-1423), "");
      GameState gameState0 = new GameState(1);
      Player player0 = new Player(1, "", (-1423));
      gameState0.addPlayer(player0);
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage(1, 4047, 1, (String) null);
      GameState gameState0 = new GameState(0);
      Player player0 = new Player(1, "lSsI^U", 2);
      player0.setDead((long) 128);
      gameState0.addPlayer(player0);
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage(1, 4064, 2, (String) null);
      GameState gameState0 = new GameState(0);
      Player player0 = new Player(1, (String) null, 2);
      player0.setDead(1437L);
      gameState0.addPlayer(player0);
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BasicMessageRules basicMessageRules0 = new BasicMessageRules();
      TextMessage textMessage0 = new TextMessage(1, 4064, 2, (String) null);
      GameState gameState0 = new GameState(0);
      boolean boolean0 = basicMessageRules0.checkRules(textMessage0, gameState0);
      assertFalse(boolean0);
  }
}
