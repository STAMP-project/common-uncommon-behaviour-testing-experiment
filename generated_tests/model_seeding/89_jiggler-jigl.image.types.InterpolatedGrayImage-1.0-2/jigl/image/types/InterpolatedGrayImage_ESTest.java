/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 13:22:57 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import jigl.image.Image;
import jigl.image.InterpolationMethod;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterpolatedGrayImage_ESTest extends InterpolatedGrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(114, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      int int0 = interpolatedGrayImage0.interp(94.9292739568);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(114, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      Integer integer0 = Integer.valueOf(2902);
      interpolatedGrayImage0.clear(integer0);
      int int0 = interpolatedGrayImage0.interp(94.9292739568);
      assertEquals(2902, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 362);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(3.0, 178.71657433734, 1985);
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(38, 38);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.6254474774624336, 0.6254474774624336, 38);
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3, 8);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat(255.0, 0.0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      interpolatedGrayImage0.splat((-0.5), 942);
      assertEquals(12, interpolatedGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(24, 10);
      interpolatedGrayImage0.splat(4.0, 24);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat((-1606.363098), 5951);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1606
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(0.0, 1.0, (-1533));
      assertEquals((-3066), interpolatedGrayImage0.addSum());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(0.587, 0.0, 22);
      assertEquals(30, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(255, 255);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum(875.3476409905, 2.0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 875
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(114, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      Integer integer0 = Integer.valueOf(2902);
      interpolatedGrayImage0.clear(integer0);
      interpolatedGrayImage0.accum(5.0, 2);
      assertEquals(661658, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 2, 1.864743F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1395, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 1, (float) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp(1.0F, 3.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.interp(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(84, 114);
      Integer integer0 = Integer.valueOf((-431));
      interpolatedGrayImage0.clear(integer0);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      int int0 = interpolatedGrayImage0.interp((double) 9.0F);
      assertEquals((-431), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat((-0.9090963517167391), 0.0, 2);
      int int0 = interpolatedGrayImage0.interp((-0.9090963517167391));
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.0, 1.0, (-5148));
      assertEquals(2, interpolatedGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(84, 114);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      Integer integer0 = Integer.valueOf((-431));
      interpolatedGrayImage0.clear(integer0);
      Integer integer1 = interpolatedGrayImage0.interp(9.0F, 9.0F);
      assertEquals((-431), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      Integer integer0 = interpolatedGrayImage0.interp(0.0F, 0.0F);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(20, 20);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      Integer integer0 = interpolatedGrayImage0.interp(0.0F, 1.0F);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(26, 26);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((double) 26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.0, 0.0, 72);
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
      
      interpolatedGrayImage0.accum(0.587, 2);
      assertEquals(73, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      interpolatedGrayImage0.splat(0.0, 1842);
      interpolatedGrayImage0.accum(0.0, (-2160));
      assertEquals(12, interpolatedGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(0.0, 0.587, 1356);
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1352, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum((double) 1, 0.0, 1);
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(0.0, 0.0, 1367);
      assertEquals(1367, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(20, 20);
      interpolatedGrayImage0.clear();
      Integer integer0 = interpolatedGrayImage0.interp(0.0F, 1.0F);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(84, 114);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      interpolatedGrayImage0.clear(integer0);
      Integer integer1 = interpolatedGrayImage0.interp(9.0F, 9.0F);
      assertTrue(integer1.equals((Object)integer0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.splat(0.114, 0.114, (-1467));
      Integer integer0 = interpolatedGrayImage0.interp(0.0F, 0.0F);
      assertEquals((-1467), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1385, 1);
      interpolatedGrayImage0.clear();
      int int0 = interpolatedGrayImage0.interp(2.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      Integer integer0 = Integer.valueOf((-1));
      Image<Integer> image0 = interpolatedGrayImage0.clear(integer0);
      InterpolatedGrayImage interpolatedGrayImage1 = interpolatedGrayImage0.copy();
      assertEquals(2, interpolatedGrayImage1.X());
      assertNotSame(interpolatedGrayImage1, image0);
      assertEquals(2, interpolatedGrayImage1.Y());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.0, 0.0, 2);
      InterpolatedGrayImage interpolatedGrayImage1 = interpolatedGrayImage0.copy();
      assertEquals(InterpolationMethod.CUBIC, interpolatedGrayImage1.getInterpolationMethod());
      assertNotSame(interpolatedGrayImage1, interpolatedGrayImage0);
      assertEquals(2, interpolatedGrayImage1.addSum());
      assertEquals(2, interpolatedGrayImage1.Y());
      assertEquals(2, interpolatedGrayImage1.X());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      InterpolatedGrayImage interpolatedGrayImage1 = interpolatedGrayImage0.copy();
      assertNotSame(interpolatedGrayImage1, interpolatedGrayImage0);
      assertEquals(0, interpolatedGrayImage1.Y());
      assertEquals(0, interpolatedGrayImage1.X());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(29, 29);
      interpolatedGrayImage0.setInterpolationMethod((InterpolationMethod) null);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat(0.0, 0.0, 29);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1292, 1292);
      // Undeclared exception!
      interpolatedGrayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(377, 377);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((InterpolatedGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1348, 917);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(114, 32767);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((-43), (-43));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      assertFalse(interpolatedGrayImage1.equals((Object)interpolatedGrayImage0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.splat(1.0, 0.0, (-762));
      assertEquals(InterpolationMethod.LINEAR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(26, 26);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat((double) 26, 26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1352, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum((double) 1, 0.0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum((double) 2, (double) 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(20, 20);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum((double) 20, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum(0.0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(95, 134);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.interp(9.0F, 9.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(26, 26);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 26, (float) 26);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2931, 2931);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 2931, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2931
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(20, 1457);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 20, (float) 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1372, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.interp((float) 1, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1372, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      try { 
        interpolatedGrayImage0.interp((float) 1, (float) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3, 3);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      assertEquals(3, interpolatedGrayImage1.X());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((java.awt.Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1, 1);
      InterpolationMethod interpolationMethod0 = interpolatedGrayImage0.getInterpolationMethod();
      assertEquals(InterpolationMethod.NEIGHBOR, interpolationMethod0);
  }
}
