/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 21:33:52 GMT 2019
 */

package visu.handball.moves.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.player.Defender;
import visu.handball.moves.model.player.Offender;
import visu.handball.moves.model.player.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewSequenceAction_ESTest extends NewSequenceAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewSequenceAction newSequenceAction0 = null;
      try {
        newSequenceAction0 = new NewSequenceAction((HandballModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.NewSequenceAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender((-3824), (-2724));
      MoveEvent moveEvent0 = mock(MoveEvent.class, new ViolatedAssumptionAnswer());
      doReturn(defender0).when(moveEvent0).getPlayer();
      doReturn((-2417), 1, 1).when(moveEvent0).getSequenceNr();
      doReturn(true).when(moveEvent0).isDestinationPointSet();
      handballModel0.setActualMoveEvent(moveEvent0);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender((-3822), (-3822));
      MoveEvent moveEvent0 = mock(MoveEvent.class, new ViolatedAssumptionAnswer());
      doReturn(defender0).when(moveEvent0).getPlayer();
      doReturn(1, 1, (-3822)).when(moveEvent0).getSequenceNr();
      doReturn(true).when(moveEvent0).isDestinationPointSet();
      MoveEvent moveEvent1 = new MoveEvent(defender0, 1);
      handballModel0.addMoveEvent(moveEvent1);
      handballModel0.setActualMoveEvent(moveEvent0);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender((-3824), (-2724));
      MoveEvent moveEvent0 = mock(MoveEvent.class, new ViolatedAssumptionAnswer());
      doReturn(defender0).when(moveEvent0).getPlayer();
      doReturn((-2417)).when(moveEvent0).getSequenceNr();
      doReturn(true).when(moveEvent0).isDestinationPointSet();
      handballModel0.setActualMoveEvent(moveEvent0);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      handballModel0.setMarkedPlayer((Player) null);
      assertEquals("", handballModel0.getMoveName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Offender offender0 = new Offender(0, 1);
      ActionEvent actionEvent0 = new ActionEvent(offender0.counter, (-1785), "V;X?", 2249L, 2046);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.actionPerformed(actionEvent0);
      assertEquals(2249L, actionEvent0.getWhen());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender((-3822), (-3822));
      MoveEvent moveEvent0 = mock(MoveEvent.class, new ViolatedAssumptionAnswer());
      doReturn(defender0).when(moveEvent0).getPlayer();
      doReturn(1, 1).when(moveEvent0).getSequenceNr();
      doReturn(true).when(moveEvent0).isDestinationPointSet();
      handballModel0.setActualMoveEvent(moveEvent0);
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.actionPerformed((ActionEvent) null);
      assertEquals(HandballModel.State.EDIT_EVENT, handballModel0.getState());
      assertEquals(2, handballModel0.getAcutalSequenceNr());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewSequenceAction newSequenceAction0 = new NewSequenceAction(handballModel0);
      newSequenceAction0.modelChanged();
  }
}
