/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 16:20:15 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.SimplePlotXY;
import jahuwaldt.plot.TabDSymbol;
import jahuwaldt.plot.TabLSymbol;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimplePlotXY_ESTest extends SimplePlotXY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      double[] doubleArray0 = new double[6];
      double[] doubleArray1 = new double[6];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "]5{A-_pFg,@$", "", "eBv`srgWbJwE{kF|sbN", numberFormat0, numberFormat0);
      assertEquals("]5{A-_pFg,@$", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[2];
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Yus4K~");
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "", "", "", choiceFormat0, choiceFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, numberFormat0, (-4884));
      plotXAxis0.setUpperBounds(0.0);
      simplePlotXY0.setVerticalAxis(plotXAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(0.0, plotAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.PRC;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      PlotYAxis plotYAxis0 = new PlotYAxis("", linearAxisScale0, numberFormat0, 0);
      simplePlotXY0.setVerticalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals("", plotAxis0.getLabel());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      String string0 = simplePlotXY0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", (String) null, (String) null, numberFormat0, (NumberFormat) null);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, ")gP8/c.k.,V# ", ")gP8/c.k.,V# ", "", numberFormat0, numberFormat0);
      simplePlotXY0.getRuns();
      assertEquals(")gP8/c.k.,V# ", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setUpperBounds(0);
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertSame(plotAxis0, plotYAxis0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisTickLimits();
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(Double.NaN, plotAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.quantum = (double) 5;
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(0, PlotAxis.kNoGrid);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.aLB = (double) 0;
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(0.0, plotAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.aLB = (-1308.899);
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(0.0, plotAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setGridStyle(0);
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0.getLabel());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setGridStyle((-2349));
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(2, PlotAxis.kMajorGrid);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      Locale locale0 = Locale.CANADA;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "", "", numberFormat0, numberFormat0);
      Object object0 = simplePlotXY0.clone();
      assertNotSame(object0, simplePlotXY0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "y@A<uTFlA", "y@A<uTFlA", "y@A<uTFlA", numberFormat0, numberFormat0, tabLSymbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "zero", "zero", "zero", numberFormat0, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      DecimalFormat decimalFormat0 = new DecimalFormat("o4zlvent");
      double[] doubleArray1 = new double[0];
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray1, doubleArray0, "o4zlvent", "", "", decimalFormat0, decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DecimalFormat decimalFormat0 = new DecimalFormat("olvent");
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "olvent", "olvent", "olvent", decimalFormat0, decimalFormat0);
      Box box0 = Box.createVerticalBox();
      Rectangle rectangle0 = box0.getVisibleRect();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw((Graphics) null, box0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, (String) null, (String) null, (String) null, decimalFormat0, decimalFormat0);
      Box box0 = Box.createHorizontalBox();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, box0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray1 = new double[0];
      TabDSymbol tabDSymbol0 = new TabDSymbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray1, doubleArray0, "jahuwalUt.plot.SiplePlotXY", "jahuwalUt.plot.SiplePlotXY", "jahuwalUt.plot.SiplePlotXY", decimalFormat0, decimalFormat0, tabDSymbol0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setTitle("");
      assertEquals("", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "+]JOUdo}RD nnn+", "W=_xtVgb*=N", (String) null, numberFormat0, numberFormat0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals("+]JOUdo}RD nnn+", simplePlotXY0.getTitle());
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "+]JOUdo}RD nnn+", "W=_xtVgb*=N", (String) null, numberFormat0, numberFormat0);
      simplePlotXY0.getRuns();
      assertEquals("+]JOUdo}RD nnn+", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      // Undeclared exception!
      try { 
        simplePlotXY0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "+]JOUdo}RD nnn+", "W=_xtVgb*=N", (String) null, numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertNotNull(string0);
      assertEquals("+]JOUdo}RD nnn+", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setRuns((PlotRunList) null);
      assertNull(simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "OW!41pm{0<P", "OW!41pm{0<P", "OW!41pm{0<P", decimalFormat0, decimalFormat0, (PlotSymbol) null);
      assertEquals("OW!41pm{0<P", simplePlotXY0.getTitle());
  }
}
