/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 16:10:28 GMT 2019
 */

package com.jstevh.viewer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jstevh.tools.StringList;
import com.jstevh.viewer.SAXDirParser;
import java.io.FileNotFoundException;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXDirParser_ESTest extends SAXDirParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.endElement("", "Group", "s[+");
      assertEquals("", sAXDirParser0.getEditor());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("acceptsLineNumber", "acceptsLineNumber", "acceptsLineNumber", attributes2Impl0);
      char[] charArray0 = new char[9];
      charArray0[1] = '';
      sAXDirParser0.characters(charArray0, 1, 1);
      assertEquals("", sAXDirParser0.getLocalBrowser());
      assertEquals("", sAXDirParser0.lineNumberParameter());
      assertFalse(sAXDirParser0.acceptsLineNumber());
      assertEquals("", sAXDirParser0.getEditor());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXDirParser0.startElement("Editor", "Editor", "Editor", attributesImpl0);
      char[] charArray0 = new char[20];
      sAXDirParser0.webData = "C^zp;l";
      sAXDirParser0.characters(charArray0, (-21), (-21));
      assertEquals("", sAXDirParser0.lineNumberParameter());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("Local", "acceptsLineNumber", "Local", attributes2Impl0);
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        sAXDirParser0.characters(charArray0, 4, 97);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.jstevh.viewer.SAXDirParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXDirParser0.startElement("", "", "", attributesImpl0);
      assertEquals("", sAXDirParser0.lineNumberParameter());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.webData = "1nSC";
      String string0 = sAXDirParser0.getWebData();
      assertEquals("1nSC", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        sAXDirParser0.startElement((String) null, (String) null, (String) null, attributes2Impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jstevh.viewer.SAXDirParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      // Undeclared exception!
      try { 
        sAXDirParser0.endElement((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jstevh.viewer.SAXDirParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXDirParser0.startElement("", "BrowserLoc", "BrowserLoc", attributes2Impl0);
      // Undeclared exception!
      try { 
        sAXDirParser0.characters((char[]) null, 79, 79);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jstevh.viewer.SAXDirParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringList stringList0 = SAXDirParser.getLocalPackages();
      assertNull(stringList0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.endElement((String) null, ">]S!!1", "Group");
      assertEquals("", sAXDirParser0.getEditor());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.endElement("", "", "");
      assertFalse(sAXDirParser0.acceptsLineNumber());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXDirParser0.startElement("", "Local", "Local", attributes2Impl0);
      sAXDirParser0.characters((char[]) null, (-606), (-606));
      assertEquals("", sAXDirParser0.getWebData());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("acceptsLineNumber", "acceptsLineNumber", "Web", attributes2Impl0);
      sAXDirParser0.characters((char[]) null, 0, 0);
      assertEquals("", sAXDirParser0.lineNumberParameter());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("acceptsLineNumber", "acceptsLineNumber", "acceptsLineNumber", attributes2Impl0);
      char[] charArray0 = new char[9];
      sAXDirParser0.characters(charArray0, 1, 1);
      assertFalse(sAXDirParser0.acceptsLineNumber());
      assertEquals("", sAXDirParser0.getLocalBrowser());
      assertEquals("", sAXDirParser0.lineNumberParameter());
      assertEquals("", sAXDirParser0.getEditor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXDirParser0.startElement("parameter", "parameter", "parameter", attributes2Impl0);
      char[] charArray0 = new char[0];
      sAXDirParser0.characters(charArray0, (-5754), (-5754));
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      char[] charArray0 = new char[1];
      sAXDirParser0.characters(charArray0, 160, 160);
      assertEquals("", sAXDirParser0.lineNumberParameter());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXDirParser0.startElement("m$cV", "", "pkg", attributes2Impl0);
      assertEquals("", sAXDirParser0.getLocalBrowser());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("", "s%}nP,I}wMj]ZmhN8rn", "Names", (Attributes) null);
      assertEquals("", sAXDirParser0.getEditor());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      sAXDirParser0.startElement("", "", "Group", (Attributes) null);
      assertEquals("", sAXDirParser0.getWebData());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXDirParser0.startElement("BrowserLoc", "BrowserLoc", "BrowserLoc", attributes2Impl0);
      char[] charArray0 = new char[4];
      sAXDirParser0.characters(charArray0, 1, 1);
      assertEquals("\u0000", sAXDirParser0.getLocalBrowser());
      
      String string0 = SAXDirParser.getLocalBrowser();
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = SAXDirParser.getLocalBrowser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = SAXDirParser.lineNumberParameter();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXDirParser sAXDirParser0 = new SAXDirParser();
      String string0 = sAXDirParser0.getWebData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap hashMap0 = SAXDirParser.getDirectory();
      assertEquals(0, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = SAXDirParser.getEditor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[0];
      try { 
        SAXDirParser.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // /Users/pooria/Documents/GitHub/evosuite-model-seeding-empirical-evaluation/packagedirectory.xml (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = SAXDirParser.acceptsLineNumber();
      assertFalse(boolean0);
  }
}
