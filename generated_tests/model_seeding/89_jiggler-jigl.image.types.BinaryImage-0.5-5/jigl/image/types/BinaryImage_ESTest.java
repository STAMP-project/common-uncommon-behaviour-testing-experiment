/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:38:20 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.MagnitudeImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.toString();
      BinaryImage binaryImage1 = new BinaryImage(2485, 3);
      BinaryImage binaryImage2 = binaryImage1.compliment();
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage0.count();
      binaryImage1.getJavaImage();
      binaryImage0.max();
      Byte.compare((byte)3, (byte)3);
      // Undeclared exception!
      try { 
        binaryImage1.clear((Byte) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.X();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(4592, 1687);
      // Undeclared exception!
      binaryImage0.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = new BinaryImage(4, 16);
      // Undeclared exception!
      try { 
        binaryImage0.union(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KernelType kernelType0 = KernelType.SOBEL_Y;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage0.difference((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 37;
      GrayImage grayImage0 = new GrayImage(37, 37);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(grayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(16, (-23));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      BinaryImage binaryImage1 = binaryImage0.compliment();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage1.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      int int0 = 1;
      binaryImage0.shift(1, (-3056));
      Byte byte0 = new Byte((byte) (-1));
      // Undeclared exception!
      try { 
        binaryImage0.set(1, (int) (byte) (-1), byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(16, 16);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.min();
      KernelType kernelType0 = KernelType.SOBEL_Y;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage1 = new BinaryImage(imageKernel0);
      binaryImage1.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI();
      rOI0.setROI((-2099), (-2099), 0, 0);
      binaryImage0.toString();
      rOI0.setROI(0, 16, (-3353), 0);
      rOI0.setROI((-2099), 255, (-2996), (-2099));
      rOI0.setROI(1416, 1416, (-3353), 0);
      rOI0.setROI(3218, 3218, 1416, 1416);
      BinaryImage binaryImage1 = binaryImage0.shift((-32768), 0);
      binaryImage1.toString();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KernelType kernelType0 = KernelType.D_XX;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(32767, 11);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2, 2);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage1.min();
      KernelType kernelType0 = KernelType.D_XX;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage2 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage2.difference(binaryImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(2485, 2485);
      binaryImage0.count();
      Byte byte0 = binaryImage0.max();
      Byte.compare((byte)3, (byte)3);
      ROI rOI0 = new ROI(1, 0, (byte)3, 4);
      rOI0.X();
      rOI0.Y();
      binaryImage0.set(3, 5, byte0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(16, 2);
      binaryImage0.count();
      binaryImage1.shift(16, (-6));
      BinaryImage binaryImage2 = binaryImage1.shift((-35), 16);
      // Undeclared exception!
      try { 
        binaryImage2.get(1692, (-1391));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.copy();
      binaryImage0.min();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.intersection(binaryImage0);
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      binaryImage0.copy(rOI0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      // Undeclared exception!
      try { 
        binaryImage0.union((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(9964, 9964);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(6, 6, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.getJavaImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 447;
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(447, 447, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage0.intersection(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.X();
      binaryImage0.getJavaImage();
      binaryImage0.getJavaImage();
      ROI rOI0 = new ROI();
      BinaryImage binaryImage1 = new BinaryImage(0, 8, (byte[]) null);
      Byte byte0 = new Byte((byte)14);
      // Undeclared exception!
      try { 
        binaryImage1.set((-1804), (-32768), byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -32768
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(5, 5, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      ROI rOI0 = new ROI();
      rOI0.Y();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)123;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(4, 4, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-15);
      byteArray1[1] = (byte)60;
      byteArray1[2] = (byte)1;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.max();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.compliment();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage0.difference(binaryImage1);
      binaryImage0.get(1, 1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.difference(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.clear((Byte) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(3473, 3473);
      // Undeclared exception!
      binaryImage0.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage0.count();
      binaryImage1.getJavaImage();
      binaryImage0.compliment();
      binaryImage1.compliment();
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      binaryImage0.min();
      binaryImage0.compliment();
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      Byte byte0 = Byte.valueOf((byte)48);
      // Undeclared exception!
      try { 
        binaryImage1.set(9, 255, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      Byte byte0 = new Byte((byte)8);
      // Undeclared exception!
      try { 
        binaryImage0.set(16, 16, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(1, (-3056));
      binaryImage0.getJavaImage();
      binaryImage0.count();
      binaryImage0.getJavaImage();
      binaryImage0.max();
      try { 
        Byte.valueOf("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte) (-25);
      byteArray0[5] = (byte) (-56);
      byteArray0[6] = (byte) (-68);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)96;
      BinaryImage binaryImage0 = new BinaryImage(0, 4, byteArray0);
      Byte byte0 = new Byte((byte)9);
      // Undeclared exception!
      try { 
        binaryImage0.set(12, 0, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, 1137);
      binaryImage0.min();
      binaryImage0.compliment();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      KernelType kernelType0 = KernelType.D_XX;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage3 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage1.difference(binaryImage3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNSHARP;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      binaryImage0.toString();
      binaryImage0.count();
      binaryImage0.shift(1, 1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-375), (-375), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-3481), (-3481), (byte[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.count();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      ROI rOI0 = new ROI();
      binaryImage0.copy(rOI0);
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      int int1 = 0;
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.setROI(0, 0, 0, (-1319));
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1319
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(16, 1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MagnitudeImage magnitudeImage0 = mock(MagnitudeImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(magnitudeImage0).X();
      doReturn(0).when(magnitudeImage0).Y();
      MagnitudeImage magnitudeImage1 = new MagnitudeImage(magnitudeImage0);
      RealGrayImage realGrayImage0 = magnitudeImage1.add(715.9F);
      realGrayImage0.add(715.9F);
      RealGrayImage realGrayImage1 = realGrayImage0.add(5.0F);
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage1);
      realGrayImage0.addbuffer(0, 0, 0, 0, 5.0F);
      realGrayImage1.addbuffer(0, 0, 483, 0, 0.0F);
      binaryImage0.shift(0, (-400));
      binaryImage0.Y();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage1.min();
      binaryImage0.compliment();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][9];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-50);
      byteArray1[2] = (byte)7;
      byteArray1[3] = (byte) (-26);
      byteArray1[4] = (byte) (-101);
      byteArray1[5] = (byte) (-83);
      byteArray1[6] = (byte)54;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.copy();
      binaryImage0.Y();
      // Undeclared exception!
      try { 
        binaryImage0.get((byte)7, 2058);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 2076);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      binaryImage1.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.copy();
      binaryImage0.count();
      BinaryImage binaryImage1 = binaryImage0.compliment();
      BinaryImage binaryImage2 = binaryImage1.compliment();
      binaryImage1.intersection(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      byte[][] byteArray0 = new byte[0][7];
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][9];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte) (-50);
      byteArray1[2] = (byte)7;
      byteArray1[3] = (byte) (-26);
      byteArray1[4] = (byte) (-101);
      byteArray1[5] = (byte) (-83);
      byteArray1[6] = (byte)54;
      byteArray1[7] = (byte) (-95);
      byteArray1[8] = (byte)9;
      byteArray0[0] = byteArray1;
      Byte byte0 = new Byte((byte)7);
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.toString();
      // Undeclared exception!
      try { 
        binaryImage0.clear((Byte) (byte) (-50));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(4327, (-4123));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(23, 23);
      binaryImage0.copy();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage1.min();
      KernelType kernelType0 = KernelType.D_XX;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage2 = new BinaryImage(imageKernel0);
      binaryImage2.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-15), (-15));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(2485, 2485);
      binaryImage0.count();
      binaryImage1.getJavaImage();
      BinaryImage binaryImage2 = binaryImage0.compliment();
      ROI rOI0 = new ROI();
      rOI0.X();
      binaryImage0.copy();
      rOI0.Y();
      binaryImage2.copy(rOI0);
      binaryImage1.count();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)16;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)16;
      byteArray3[1] = (byte)16;
      byteArray3[2] = (byte)16;
      byteArray3[3] = (byte)16;
      byteArray3[4] = (byte)16;
      byteArray0[2] = byteArray3;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(13, 13);
      binaryImage0.count();
      binaryImage0.shift((-40), 8);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.copy();
      binaryImage0.count();
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage0.count();
      binaryImage1.getJavaImage();
      binaryImage0.Y();
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte) (-83);
      byte byte0 = (byte)26;
      byteArray0[5] = (byte)26;
      BinaryImage binaryImage0 = new BinaryImage(1, 1, byteArray0);
      binaryImage0.toString();
      Byte byte1 = new Byte((byte) (-1));
      binaryImage0.toString();
      byte1.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.clear((Byte) (byte) (-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.union(binaryImage0);
      binaryImage1.copy();
      // Undeclared exception!
      try { 
        binaryImage0.get(16, 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(4934, 4934);
      int int0 = (-3917);
      binaryImage1.shift((-3917), (-1561));
      KernelType kernelType0 = KernelType.UNSHARP_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      binaryImage0.difference(binaryImage1);
      int int1 = (-3220);
      binaryImage1.shift(int0, int1);
  }
}
