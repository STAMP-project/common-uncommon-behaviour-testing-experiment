/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:06:33 GMT 2019
 */

package weka.filters.unsupervised.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.BinarySparseInstance;
import weka.core.Instances;
import weka.filters.unsupervised.attribute.NominalToBinary;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NominalToBinary_ESTest extends NominalToBinary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setTransformAllValues(true);
      nominalToBinary0.getTransformAllValues();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      try { 
        nominalToBinary0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      // Undeclared exception!
      try { 
        nominalToBinary0.setAttributeIndices((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setBinaryAttributesNominal(false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setBinaryAttributesNominal(true);
      nominalToBinary0.getBinaryAttributesNominal();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.getBinaryAttributesNominal();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      // Undeclared exception!
      try { 
        nominalToBinary0.getCapabilities();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // weka/core/WekaPackageManager
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setInvertSelection(false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.getAttributeIndices();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.getInvertSelection();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.getTransformAllValues();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setTransformAllValues(true);
      nominalToBinary0.getOptions();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setBinaryAttributesNominal(true);
      nominalToBinary0.getOptions();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.setAttributeIndices("");
      String[] stringArray0 = nominalToBinary0.getOptions();
      nominalToBinary0.setOptions(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3);
      // Undeclared exception!
      try { 
        nominalToBinary0.input(binarySparseInstance0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No input instance format defined
         //
         verifyException("weka.filters.unsupervised.attribute.NominalToBinary", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.attributeIndicesTipText();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.invertSelectionTipText();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.binaryAttributesNominalTipText();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.getRevision();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.listOptions();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.transformAllValuesTipText();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      String[] stringArray0 = nominalToBinary0.getOptions();
      nominalToBinary0.setOptions(stringArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      // Undeclared exception!
      try { 
        nominalToBinary0.setInputFormat((Instances) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // weka/core/WekaPackageManager
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NominalToBinary nominalToBinary0 = new NominalToBinary();
      nominalToBinary0.globalInfo();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[2];
      NominalToBinary.main(stringArray0);
  }
}
