/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 16:48:12 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Image;
import java.awt.image.ImageProducer;
import jigl.image.ColorModel;
import jigl.image.ROI;
import jigl.image.types.RealColorImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RealColorImage_ESTest extends RealColorImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ImageProducer imageProducer0 = realColorImage0.getJavaImage();
      assertNotNull(imageProducer0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      realColorImage0.setPlane(0, (RealGrayImage) null);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(2, 2);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(2, realColorImage0.Y());
      assertEquals(2, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      String string0 = realColorImage0.toString(rOI0);
      assertNotNull(string0);
      assertEquals("2:2\nnull \n2:2\nnull \n2:2\nnull \n", string0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(2, realColorImage0.Y());
      assertEquals(2, realColorImage0.X());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      float[] floatArray0 = new float[5];
      RealColorImage realColorImage1 = realColorImage0.subtract(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage1.X());
      assertEquals(0, realColorImage1.Y());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(5, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = realColorImage0.subtract(2, (-188.61F));
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(0, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = realColorImage0.subtract(0.0F, 1.0F, (float) 0);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(0, realColorImage1.X());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      double[] doubleArray0 = realColorImage0.sqrSum();
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertNotNull(doubleArray0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(3, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      RealGrayImage realGrayImage0 = realColorImage0.plane(1);
      assertNotNull(realGrayImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      
      Float[] floatArray0 = new Float[4];
      Float float0 = Float.valueOf(3.4028235E38F);
      assertNotNull(float0);
      assertEquals(3.4028235E38F, (float)float0, 0.01F);
      
      floatArray0[0] = float0;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = floatArray0[0];
      RealColorImage realColorImage1 = realColorImage0.clear(floatArray0);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage1.Y());
      assertEquals(5, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(4, floatArray0.length);
      
      Float float1 = realColorImage0.minComponent();
      assertNotNull(float1);
      assertSame(realColorImage0, realColorImage1);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals(32767.0F, (float)float1, 0.01F);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      Float float0 = realColorImage0.maxComponent();
      assertNotNull(float0);
      assertEquals((-32768.0F), (float)float0, 0.01F);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      Float[] floatArray0 = realColorImage0.max();
      assertNotNull(floatArray0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(3, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      
      Float[] floatArray0 = new Float[4];
      Float float0 = Float.valueOf(3.4028235E38F);
      assertNotNull(float0);
      assertEquals(3.4028235E38F, (float)float0, 0.01F);
      
      floatArray0[0] = float0;
      floatArray0[1] = floatArray0[0];
      floatArray0[2] = float0;
      RealColorImage realColorImage1 = realColorImage0.clear(floatArray0);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(5, realColorImage1.Y());
      assertEquals(4, floatArray0.length);
      
      RealColorImage realColorImage2 = realColorImage1.diff(realColorImage0);
      assertNotNull(realColorImage2);
      assertSame(realColorImage0, realColorImage2);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertSame(realColorImage1, realColorImage2);
      assertSame(realColorImage2, realColorImage0);
      assertSame(realColorImage2, realColorImage1);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(5, realColorImage1.Y());
      assertEquals(5, realColorImage2.Y());
      assertEquals(5, realColorImage2.X());
      assertEquals(ColorModel.RGB, realColorImage2.getColorModel());
      assertEquals(4, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      RealColorImage realColorImage0 = new RealColorImage(53, 53);
      assertNotNull(realColorImage0);
      assertEquals(53, realColorImage0.Y());
      assertEquals(53, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = realColorImage0.copy(rOI0);
      assertNotNull(realColorImage1);
      assertNotSame(realColorImage0, realColorImage1);
      assertNotSame(realColorImage1, realColorImage0);
      assertFalse(realColorImage1.equals((Object)realColorImage0));
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(53, realColorImage0.Y());
      assertEquals(53, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(1, realColorImage1.Y());
      assertEquals(1, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      RealColorImage realColorImage1 = realColorImage0.copy();
      assertNotNull(realColorImage1);
      assertNotSame(realColorImage0, realColorImage1);
      assertNotSame(realColorImage1, realColorImage0);
      assertFalse(realColorImage1.equals((Object)realColorImage0));
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(0, realColorImage1.X());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = realColorImage0.copy();
      assertNotNull(realColorImage1);
      assertNotSame(realColorImage0, realColorImage1);
      assertNotSame(realColorImage1, realColorImage0);
      assertFalse(realColorImage1.equals((Object)realColorImage0));
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage1.X());
      assertEquals(5, realColorImage1.Y());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      float[] floatArray0 = new float[8];
      RealColorImage realColorImage1 = realColorImage0.addbuffer(0, 0, floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(realColorImage1);
      assertNotSame(realColorImage0, realColorImage1);
      assertNotSame(realColorImage1, realColorImage0);
      assertFalse(realColorImage1.equals((Object)realColorImage0));
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(0, realColorImage1.X());
      assertEquals(8, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      
      float[] floatArray0 = new float[4];
      RealColorImage realColorImage1 = realColorImage0.addbuffer(5, 5, 5, 5, floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(realColorImage1);
      assertNotSame(realColorImage0, realColorImage1);
      assertNotSame(realColorImage1, realColorImage0);
      assertFalse(realColorImage1.equals((Object)realColorImage0));
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage1.Y());
      assertEquals(5, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(4, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      float[] floatArray0 = realColorImage0.addSum();
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(3, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      float[] floatArray0 = new float[9];
      RealColorImage realColorImage1 = realColorImage0.add(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(0, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
      assertEquals(9, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = realColorImage0.add(realColorImage0);
      assertNotNull(realColorImage1);
      assertSame(realColorImage0, realColorImage1);
      assertSame(realColorImage1, realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage1.Y());
      assertEquals(0, realColorImage1.X());
      assertEquals(ColorModel.RGB, realColorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI(0, 20, 2, 9);
      assertNotNull(rOI0);
      assertEquals(9, rOI0.uy());
      assertEquals(3, rOI0.X());
      assertEquals(20, rOI0.ly());
      assertEquals(2, rOI0.lx());
      assertEquals(12, rOI0.Y());
      assertEquals(0, rOI0.ux());
      
      // Undeclared exception!
      try { 
        realColorImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract((float[]) null, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.subtract(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI(1441, 1441, 5, 1441);
      assertNotNull(rOI0);
      assertEquals(1, rOI0.Y());
      assertEquals(1441, rOI0.lx());
      assertEquals(5, rOI0.ux());
      assertEquals(1441, rOI0.uy());
      assertEquals(1437, rOI0.X());
      assertEquals(1441, rOI0.ly());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(realColorImage0, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(realColorImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      
      float[] floatArray0 = new float[2];
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract((-1746), 5, floatArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract((-1), (-1), (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      
      RealColorImage realColorImage0 = new RealColorImage(1, 1);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(1, realColorImage0.Y());
      assertEquals(1, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(1, 1, (float) 1, (float) 1, 0.0F, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(5, 5, (float) 5, (float) 5, (float) 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(5, (float) 5, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract((-23), (float) (-23));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -23
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      rOI0.setROI(128, (-1076), 438, 89);
      assertEquals(311, rOI0.X());
      assertEquals(128, rOI0.ux());
      assertEquals((-1076), rOI0.uy());
      assertEquals(438, rOI0.lx());
      assertEquals(89, rOI0.ly());
      assertEquals(1166, rOI0.Y());
      
      RealColorImage realColorImage0 = new RealColorImage(3328, 438);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(438, realColorImage0.Y());
      assertEquals(3328, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.subtract(0.0F, 0.0F, (float) 128, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1076
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.set(128, 128, (Float[]) null, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.set(1212, 1212, (Float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.plane(279);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 279
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply((float[]) null, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(realColorImage0, rOI0, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(12, 12, (float[]) null, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(5, 5, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(2, 250, (float) 250, (-480.86F), (float) 250, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 250
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(10, 10);
      assertNotNull(realColorImage0);
      assertEquals(10, realColorImage0.X());
      assertEquals(10, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(13, 13, (float) 13, (-245.64F), (float) 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      
      realColorImage0.planes = null;
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(195, (float) 195, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(8, (float) 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply((-2542.865F), (-2542.865F), (-2542.865F), rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.multiply(0.0F, 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      
      // Undeclared exception!
      try { 
        realColorImage0.min(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      
      // Undeclared exception!
      try { 
        realColorImage0.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.min(11, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.max((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 70);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(70, realColorImage0.Y());
      
      ROI rOI0 = new ROI(70, 2838, 46, 3603);
      assertNotNull(rOI0);
      assertEquals(46, rOI0.ux());
      assertEquals(25, rOI0.X());
      assertEquals(70, rOI0.lx());
      assertEquals(3603, rOI0.ly());
      assertEquals(2838, rOI0.uy());
      assertEquals(766, rOI0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.max(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2838
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.max((-1581), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1581
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.get(8, (-954), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -954
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.get(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.divide(floatArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.divide(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide((RealColorImage) null, rOI0, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.ly());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.divide(57, 57, floatArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide(13, 13, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide(1, 1, (float) 1, (float) 1, (float) 1, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(18, 18);
      assertNotNull(realColorImage0);
      assertEquals(18, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(18, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide(18, 18, 0.0F, (-1345.7F), 3676.72F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide(1, (float) 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.divide(1.0F, 1.0F, 4801.2114F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.diff(realColorImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ly());
      
      // Undeclared exception!
      try { 
        realColorImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      
      ROI rOI0 = new ROI(1441, 1441, 5, 1441);
      assertNotNull(rOI0);
      assertEquals(1441, rOI0.lx());
      assertEquals(1441, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(5, rOI0.ux());
      assertEquals(1441, rOI0.uy());
      assertEquals(1437, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1441
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(1614, 2156);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(2156, realColorImage0.Y());
      assertEquals(1614, realColorImage0.X());
      
      // Undeclared exception!
      realColorImage0.copy();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.clip(2093, 2093, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.clip(279, 279);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      Float[] floatArray0 = new Float[3];
      // Undeclared exception!
      try { 
        realColorImage0.clear(floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.byteSize(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      
      ROI rOI0 = new ROI(5, 5, 5, 274);
      assertNotNull(rOI0);
      assertEquals(5, rOI0.lx());
      assertEquals(274, rOI0.ly());
      assertEquals(5, rOI0.uy());
      assertEquals(1, rOI0.X());
      assertEquals(5, rOI0.ux());
      assertEquals(270, rOI0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.byteSize(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealGrayImage[] realGrayImageArray0 = new RealGrayImage[0];
      realColorImage0.planes = realGrayImageArray0;
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.byteSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      realColorImage0.addbuffer(3849, 3849, (float[]) null);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.addbuffer(5, 5, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.addbuffer((-298), (-298), floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        realColorImage0.addbuffer(816, 816, floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.X());
      assertEquals(5, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      float[] floatArray0 = new float[1];
      // Undeclared exception!
      realColorImage0.addbuffer(1034, 1034, 12, 255, floatArray0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      float[] floatArray0 = new float[3];
      // Undeclared exception!
      try { 
        realColorImage0.addbuffer(1250, 1250, (-72), 1250, floatArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.addbuffer((-1103), 454, 0, 4, (float[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.add((float[]) null, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(realColorImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(255, 255, (Float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(0, 0);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      float[] floatArray0 = realColorImage0.absSum();
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(3, floatArray0.length);
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(0, 0, floatArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(5, 5);
      assertNotNull(realColorImage0);
      assertEquals(5, realColorImage0.Y());
      assertEquals(5, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(0, (-1188), (float) (-1188), (float) (-1188), 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1188
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(6, (float) 6, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realColorImage0.add((-24.424583F), (-24.424583F), (-24.424583F), rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      // Undeclared exception!
      try { 
        realColorImage0.add(0.0F, 0.0F, (float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.X());
      assertEquals(0, realColorImage0.Y());
      
      // Undeclared exception!
      try { 
        realColorImage0.absSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(3863, 11);
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(11, realColorImage0.Y());
      assertEquals(3863, realColorImage0.X());
      
      RealColorImage realColorImage1 = new RealColorImage(realColorImage0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      
      RealColorImage realColorImage1 = null;
      try {
        realColorImage1 = new RealColorImage(realColorImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      assertNotNull(realColorImage0);
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealGrayImage[] realGrayImageArray0 = new RealGrayImage[0];
      realColorImage0.planes = realGrayImageArray0;
      assertEquals(0, realColorImage0.Y());
      assertEquals(0, realColorImage0.X());
      assertEquals(ColorModel.RGB, realColorImage0.getColorModel());
      
      RealColorImage realColorImage1 = null;
      try {
        realColorImage1 = new RealColorImage(realColorImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn((-1889)).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn((-1889)).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RealColorImage realColorImage0 = null;
      try {
        realColorImage0 = new RealColorImage(image0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage(2921, 4970);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RealColorImage realColorImage0 = null;
      try {
        realColorImage0 = new RealColorImage((-247), (-247));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      // Undeclared exception!
      try { 
        realColorImage0.maxComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RealColorImage realColorImage0 = new RealColorImage();
      // Undeclared exception!
      try { 
        realColorImage0.minComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }
}
