/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:42:12 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.DefaultChart;
import de.progra.charting.Legend;
import de.progra.charting.Title;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.DefaultDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.AbstractChartRenderer;
import de.progra.charting.render.InterpolationChartRenderer;
import de.progra.charting.render.PlotChartRenderer;
import de.progra.charting.render.RadarChartRenderer;
import de.progra.charting.render.RowColorModel;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChart_ESTest extends AbstractChart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Hashtable<InterpolationChartRenderer, PlotChartRenderer> hashtable0 = new Hashtable<InterpolationChartRenderer, PlotChartRenderer>();
      InterpolationChartRenderer interpolationChartRenderer0 = new InterpolationChartRenderer((CoordSystem) null, objectChartDataModel0);
      PlotChartRenderer plotChartRenderer0 = new PlotChartRenderer((CoordSystem) null, objectChartDataModel0);
      hashtable0.put(interpolationChartRenderer0, plotChartRenderer0);
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "@'Z");
      defaultChart0.setChartRenderer(hashtable0);
      assertEquals(1, hashtable0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.setRowColorModel((RowColorModel) null);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "");
      defaultChart0.setLegend((Legend) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      CoordSystem coordSystem0 = mock(CoordSystem.class, new ViolatedAssumptionAnswer());
      defaultChart0.setCoordSystem(coordSystem0);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "I-X!JFxSo%,a");
      defaultChart0.setChartDataModel(defaultChartDataModel0);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "I-X!JFxSo%,a");
      Title title0 = defaultChart0.getTitle();
      defaultChart0.setTitle(title0);
      assertEquals("I-X!JFxSo%,a", title0.getText());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertNull(rowColorModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "I-X!JFxSo%,a");
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertEquals(0, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Legend legend0 = defaultChart0.getLegend();
      assertNull(legend0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "~rW>do.");
      Legend legend0 = defaultChart0.getLegend();
      assertNotNull(legend0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart();
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer((CoordSystem) null, defaultChartDataModel0);
      defaultChart0.addChartRenderer(radarChartRenderer0, 0);
      Map map0 = defaultChart0.getChartRenderer();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setAutoScale(true);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "I-X!JFxSo%,a");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertFalse(chartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      String[] stringArray0 = new String[3];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray0[0], stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "", 1219);
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertTrue(chartDataModel0.isColumnNumeric());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("C", "n5Nfi}x=3<Zg`/7A");
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to de.progra.charting.render.AbstractChartRenderer
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      AbstractChartRenderer abstractChartRenderer0 = defaultChart0.getChartRenderer(1);
      assertNull(abstractChartRenderer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        defaultChart0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.DefaultChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Map map0 = defaultChart0.getChartRenderer();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "B=KOY]Tn3ip", 0);
      CoordSystem coordSystem0 = defaultChart0.getCoordSystem();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "eLI0y1AoGqV");
      defaultChart0.paintDefault((Graphics2D) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.addChartRenderer((AbstractChartRenderer) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Title title0 = defaultChart0.getTitle();
      assertNull(title0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[1];
      DefaultDataSet defaultDataSet0 = new DefaultDataSet(3210);
      dataSetArray0[0] = (DataSet) defaultDataSet0;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "Int. Temp.", 1);
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertEquals(1, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      CoordSystem coordSystem0 = defaultChart0.getCoordSystem();
      assertNull(coordSystem0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.setBounds(rectangle0);
      Rectangle rectangle1 = defaultChart0.getBounds();
      assertEquals(0.0, rectangle1.getMaxY(), 0.01);
  }
}
