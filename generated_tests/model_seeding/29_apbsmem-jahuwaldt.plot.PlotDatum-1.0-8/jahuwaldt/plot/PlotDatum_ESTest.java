/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 16:40:47 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.ThinRect2Symbol;
import jahuwaldt.plot.Triangle3Symbol;
import java.awt.Color;
import javax.swing.JEditorPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(298.15, 298.15, false);
      plotDatum0.setX(212.494224654451);
      assertEquals(212.494224654451, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(200.0, (-1882.79260659929), false);
      plotDatum0.setYError(200.0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(200.0, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(200.0, (-1882.79260659929), false);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError(200.0);
      double double0 = plotDatum0.getYError();
      assertEquals(200.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(298.15, 298.15, false);
      assertEquals(298.15, plotDatum0.y, 0.01);
      
      plotDatum0.setY(0.0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false, triangle3Symbol0);
      double double0 = plotDatum0.getY();
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(4360.0, 820.4271097388254, false);
      assertEquals(4360.0, plotDatum0.x, 0.01);
      
      plotDatum0.x = 0.0;
      double double0 = plotDatum0.getX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false, triangle3Symbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(140.612376127, 140.612376127, false, triangle3Symbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(140.612376127, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(140.612376127, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-1509.298208968), (-1.0), false, squareSymbol0);
      squareSymbol0.setSize((-807));
      plotDatum0.getPlotSymbol();
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertEquals((-1509.298208968), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1795.119), (-1795.119), false, triangle3Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals((-1795.119), plotDatum1.y, 0.01);
      assertEquals((-1795.119), plotDatum1.x, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1667.958873075935, 1667.958873075935, true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals(1667.958873075935, plotDatum1.x, 0.01);
      assertEquals(1667.958873075935, plotDatum1.y, 0.01);
      assertTrue(plotDatum1.connected());
      assertNotSame(plotDatum1, plotDatum0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1667.958873075935, 1667.958873075935, true);
      JEditorPane jEditorPane0 = new JEditorPane("", "");
      Color color0 = jEditorPane0.getSelectionColor();
      plotDatum0.setLineColor(color0);
      plotDatum0.getLineColor();
      assertTrue(plotDatum0.connected());
      assertEquals(1667.958873075935, plotDatum0.y, 0.01);
      assertEquals(1667.958873075935, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1638.1208674504162, 1638.1208674504162, true);
      plotDatum0.setLineColor((Color) null);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1638.1208674504162, plotDatum0.y, 0.01);
      assertEquals(1638.1208674504162, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-4250.262649315041), (-1.0), true);
      plotDatum0.setYError((-2101.74));
      double double0 = plotDatum0.getYError();
      assertEquals((-2101.74), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-4250.262649315041), (-1.0), true);
      double double0 = plotDatum0.getYError();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-4250.262649315041), plotDatum0.x, 0.01);
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1665.7270384144933, 1665.7270384144933, false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(boolean0);
      assertEquals(1665.7270384144933, plotDatum0.x, 0.01);
      assertEquals(1665.7270384144933, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-4311.340055796532), (-4311.340055796532), true);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertTrue(plotDatum0.connected());
      assertFalse(boolean0);
      assertEquals((-4311.340055796532), plotDatum0.x, 0.01);
      assertEquals((-4311.340055796532), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1668.4250642188695, 1668.4250642188695, true);
      plotDatum0.setConnected(true);
      assertTrue(plotDatum0.connected());
      assertEquals(1668.4250642188695, plotDatum0.x, 0.01);
      assertEquals(1668.4250642188695, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2137.1023427879), (-2137.1023427879), true);
      plotDatum0.getPlotSymbol();
      assertEquals((-2137.1023427879), plotDatum0.y, 0.01);
      assertEquals((-2137.1023427879), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1668.4250642188695, 1668.4250642188695, true);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1668.4250642188695, double0, 0.01);
      assertEquals(1668.4250642188695, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThinRect2Symbol thinRect2Symbol0 = new ThinRect2Symbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, thinRect2Symbol0);
      plotDatum0.setPlotSymbol(thinRect2Symbol0);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1667.958873075935, 1667.958873075935, true);
      plotDatum0.getLineColor();
      assertEquals(1667.958873075935, plotDatum0.x, 0.01);
      assertEquals(1667.958873075935, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1968.9225355, 2584.713, false);
      double double0 = plotDatum0.getX();
      assertEquals(1968.9225355, double0, 0.01);
      assertEquals(2584.713, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }
}
