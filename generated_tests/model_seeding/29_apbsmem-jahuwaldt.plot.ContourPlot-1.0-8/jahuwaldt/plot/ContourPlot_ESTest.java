/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 16:40:00 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.ContourPlot;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContourPlot_ESTest extends ContourPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double[][] doubleArray0 = new double[5][0];
      double[][] doubleArray1 = new double[8][8];
      Locale locale0 = Locale.GERMANY;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray1, doubleArray0, 35, true, "sdie ", "sdie ", "jahuwaldt.plot.ContourPlot", numberFormat0, numberFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ContourPlot contourPlot0 = new ContourPlot();
      // Undeclared exception!
      try { 
        contourPlot0.colorizeContours((Color) null, (Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double[][] doubleArray0 = new double[14][6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 300, false, "hQR File 2", "hQR File 2", "hQR File 2", decimalFormat0, decimalFormat0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double[][] doubleArray0 = new double[6][6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot((double[][]) null, doubleArray0, doubleArray0, 0, false, "998.122", "998.122", "998.122", decimalFormat0, decimalFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double[][] doubleArray0 = new double[3][6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, (-9), true, "PQR File 2", "PQR File 2", "PQR File 2", decimalFormat0, decimalFormat0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double[][] doubleArray0 = new double[0][8];
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      ContourPlot contourPlot0 = null;
      try {
        contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 408, false, "c@+D@y3:CKT1Lf96Y", "c@+D@y3:CKT1Lf96Y", "c@+D@y3:CKT1Lf96Y", numberFormat0, numberFormat0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double[][] doubleArray0 = new double[9][6];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 0, true, "jahuwaldt.plot.PlotXAxis", "total_charge_off_2 process exit: ", "ref", numberFormat0, numberFormat0);
      ContourPlot contourPlot1 = (ContourPlot)contourPlot0.clone();
      assertNotSame(contourPlot1, contourPlot0);
      assertEquals("jahuwaldt.plot.PlotXAxis", contourPlot1.getTitle());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double[][] doubleArray0 = new double[10][6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 1, false, "PjR ;ile 2", "PjR ;ile 2", "PjR ;ile 2", decimalFormat0, decimalFormat0);
      assertEquals("PjR ;ile 2", contourPlot0.getTitle());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      double[][] doubleArray0 = new double[9][6];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      ContourPlot contourPlot0 = new ContourPlot(doubleArray0, doubleArray0, doubleArray0, 0, true, "jahuwaldt.plot.PlotXAxis", "total_charge_off_2 process exit: ", "ref", numberFormat0, numberFormat0);
      Color color0 = new Color(2032);
      contourPlot0.colorizeContours(color0, color0);
      assertEquals("jahuwaldt.plot.PlotXAxis", contourPlot0.getTitle());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ContourPlot contourPlot0 = new ContourPlot();
      // Undeclared exception!
      try { 
        contourPlot0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }
}
