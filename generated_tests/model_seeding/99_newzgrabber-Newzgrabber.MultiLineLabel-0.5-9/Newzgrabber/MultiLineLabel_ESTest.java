/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 21:51:29 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import javax.swing.DebugGraphics;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultmineLabel", 1, (-1), 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("W\n", 1905, 1905);
      multiLineLabel0.newLabel("");
      DebugGraphics debugGraphics0 = new DebugGraphics();
      multiLineLabel0.paint(debugGraphics0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(1905, multiLineLabel0.getMarginWidth());
      assertEquals(1905, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("njwn\"U\"$ Iu85]</Aa", 22);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Font font0 = Font.decode("njwn\"U\"$ Iu85]</Aa");
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 1628, 2);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(1628, multiLineLabel0.getMarginHeight());
      assertEquals(2, multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 922, 3, (-1302));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(1844, dimension0.width);
      assertEquals(6, dimension0.height);
      assertEquals((-1302), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("nS%JH4cNCcZ_VIbv", 0, 1);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(2, dimension0.height);
      assertEquals(0, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERROR: ");
      Font font0 = Font.decode("ERROR: ");
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(35, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(69, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 0, (-4092));
      multiLineLabel0.setMarginHeight(10);
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-B^A(>HtRZ+r5'", 0, 0);
      assertEquals(0, multiLineLabel0.getAlignment());
      
      multiLineLabel0.setAlignment(1);
      assertEquals(1, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERROR: ", 844);
      Font font0 = new Font("7%MOa#x0#bDvJd", 1623, (-296));
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(844, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-2255));
      Font font0 = Font.decode("");
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-2255), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("0% ~.Ail;))? k8", 529, 529, 922);
      Font font0 = new Font("", 529, 0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals(529, multiLineLabel0.getMarginHeight());
      assertEquals(922, multiLineLabel0.getAlignment());
      assertEquals(529, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERROR: ");
      Font font0 = Font.decode("ERROR: ");
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZppX", (-2255));
      Font font0 = Font.decode("h6`MJcLZppX");
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("ya?");
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-2255), multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-B^A(>HtRZ+r5'", 0, 0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.height);
      assertEquals(0, dimension0.width);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("NERWi.", (-4), (-4), (-4));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals((-8), dimension0.height);
      assertEquals((-8), dimension0.width);
      assertEquals((-4), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZppX", (-2255));
      Font font0 = Font.decode("h6`MJcLZppX");
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(15, dimension0.height);
      assertEquals(80, dimension0.width);
      assertEquals((-2255), multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-B^A(>HtRZ+r5'", 0, 0);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0);
      multiLineLabel0.setMarginWidth((-4900));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-4900), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 24, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, int0);
      assertEquals(24, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-$utQ-E`5'\"X", (-1767));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-1767), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ZC7!`)^qX\"*5K");
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Can not change to ", (-574));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-574), int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("?*GBeQL9V8;=5/3US");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("\n", 10);
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("W\n", 1905, 1905);
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 22, 22, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, (-1357));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 1, 1905);
      multiLineLabel0.newLabel("Hy(<");
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZ2pX", 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Create", 1);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZppX");
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      multiLineLabel0.paint(graphics2D0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERROR: ", 137);
      multiLineLabel0.setAlignment(137);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(137, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 897, (-1), 2);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-1), multiLineLabel0.getMarginHeight());
      assertEquals(897, multiLineLabel0.getMarginWidth());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 927, (-4), (-4));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(927, multiLineLabel0.getMarginWidth());
      assertEquals((-4), multiLineLabel0.getAlignment());
      assertEquals((-4), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZppX", (-2255));
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("ya?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 300, (-2133));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("v:V7s}");
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("ERROR: ", 137);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(137, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("h6`MJcLZppX");
      BufferedImage bufferedImage0 = new BufferedImage(2, 2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JLayeredPane jLayeredPane0 = new JLayeredPane();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics2D0, jLayeredPane0);
      Font font0 = debugGraphics0.getFont();
      multiLineLabel0.setFont(font0);
      multiLineLabel0.paint(graphics2D0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("njwn\"U\"$ Iu85]</Aa", 22);
      multiLineLabel0.setForeground((Color) null);
      assertEquals(22, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }
}
