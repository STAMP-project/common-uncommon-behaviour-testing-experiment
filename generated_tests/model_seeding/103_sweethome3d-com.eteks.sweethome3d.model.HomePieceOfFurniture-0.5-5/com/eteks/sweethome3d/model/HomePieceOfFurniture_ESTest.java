/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 19:04:18 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.DoorOrWindow;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.setNameAngle(0.0F);
      homeLight2.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight0.isNameCenterPointAt(0.0F, 2387.1357F, (-711.0F));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Float float0 = new Float((float) (-3589L));
      Long long0 = new Long((-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LightSource[] lightSourceArray0 = new LightSource[4];
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      CatalogLight catalogLight0 = new CatalogLight("KnY\"", (String) null, "", uRLContent0, uRLContent0, uRLContent0, 1.0F, (-3589L), (-3589L), 3.4028235E38F, false, lightSourceArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$17", false, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setY((-1286.233F));
      homeLight0.setX(1.0F);
      homeLight0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Long long0 = new Long((-3607L));
      Float float0 = new Float((float) (-3607L));
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "&1", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3607L), (-3607L), (-3607L), 1006.0F, true, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "K`nY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3607L));
      homeLight0.setX(1006.0F);
      homeLight1.isPointAt(691.4066F, 0.0F, (-1.0F));
      homeLight0.isBottomRightPointAt((-88.53965F), 691.4066F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "`>?S6a/^@px'$%(", "`>?S6a/^@px'$%(", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), (-3614L), false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", false, true, false, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isResizable();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.getGroundElevation();
      homeLight0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Float float0 = new Float((float) (-3589L));
      Long long0 = new Long((-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[4];
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      CatalogLight catalogLight0 = new CatalogLight("KnY\"", (String) null, "", uRLContent0, uRLContent0, uRLContent0, 1.0F, (-3589L), (-3589L), 3.4028235E38F, false, lightSourceArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$17", false, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setY((-1286.233F));
      homeLight1.setX(1.0F);
      homeLight1.setVisible(false);
      // Undeclared exception!
      try { 
        homeLight0.setWidth(3.4028235E38F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight1.setLevel(level0);
      TextStyle textStyle0 = new TextStyle(1006.0F, false, true);
      homeLight0.setNameStyle(textStyle0);
      homeLight0.getNameStyle();
      homeLight1.isDeformable();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(false);
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle(2387.61F);
      homeLight0.setDepth(2539.07F);
      homeLight2.isNameCenterPointAt(1.0F, 7271.5F, 1722.4924F);
      homeLight0.isTopLeftPointAt((-3589L), 1.306507F, 1824.78F);
      homeLight1.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY-\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameYOffset((-5252.5254F));
      homeLight0.isTopRightPointAt((-3589L), 1.0F, 1.0F);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight0.setNameAngle((-3589.0F));
      HomeLight homeLight2 = homeLight0.clone();
      homeLight1.isPointAt(1006.0F, (-701.1433F), 1006.0F);
      homeLight1.setNameAngle(1016.7F);
      homeLight2.isTopLeftPointAt(1006.0F, 0.5F, (-270.8F));
      HomePieceOfFurniture.SortableProperty.values();
      homeLight0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Gk(AW=p", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setNameAngle(1832.892F);
      homeLight1.isTopLeftPointAt((-3589L), 1006.0F, 0.0F);
      homeLight1.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "temporarySubFolder");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "temporarySubFolder", "temporarySubFolder", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "temporarySubFolder", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameAngle((-229.793F));
      homeLight0.isBottomLeftPointAt(1006.0F, 314.847F, (-1491.0F));
      homeLight1.getValueAddedTax();
      homeLight0.setVisible(false);
      Level level0 = new Level("", 1.0F, 0.0F, 1006.0F);
      homeLight0.isAtLevel(level0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "@?UBWQj.0qAPK");
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY-\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setShininess((Float) null);
      homeLight0.isBottomLeftPointAt((-3589L), (-1385.6F), (-1385.6F));
      homeLight0.isTopRightPointAt((-3589L), (-3589L), 1006.0F);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.setElevation(1006.0F);
      homeLight1.isBottomLeftPointAt((-3589L), 489.3676F, (-1129.8566F));
      homeLight0.getValueAddedTax();
      homeLight0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getValueAddedTax();
      homeLight0.setMovable(true);
      homeLight0.getTexture();
      homeLight0.setY((-3589L));
      homeLight0.getDepth();
      homeLight0.isBottomLeftPointAt((-3589.0F), (-3589L), 3.4028235E38F);
      homeLight0.getName();
      homeLight0.containsPoint(3.4028235E38F, 3.4028235E38F, (-4862.28F));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Long long0 = new Long((-3611L));
      Float float0 = new Float((float) (-3611L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3611L), (-3611L), (-3611L), 985.3647F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.isNameCenterPointAt(985.3647F, 3004.04F, (-3611L));
      homeLight0.isBottomRightPointAt(3004.04F, 985.3647F, (-1142.24F));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.setNameAngle(0.0F);
      homeLight2.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight0.isNameCenterPointAt(0.0F, 2387.1357F, (-711.0F));
      homeLight2.getName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash(19.389402F, 0.0F, 0.0F, 0.0F, 0.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1021.4725F, 0.0F, (-3578.0132F), (-3578.0132F), 0.0F);
      sashArray0[1] = sash1;
      float[][] floatArray0 = new float[7][9];
      float[] floatArray1 = new float[4];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 0.0F;
      floatArray1[3] = 0.0F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[5];
      floatArray2[0] = 19.389402F;
      floatArray2[1] = 19.389402F;
      floatArray2[2] = 1021.4725F;
      floatArray2[3] = 0.0F;
      floatArray2[4] = 0.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[7];
      floatArray2[1] = 0.0F;
      floatArray3[1] = 1021.4725F;
      floatArray3[2] = 1021.4725F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray3[6] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[9];
      floatArray4[0] = 0.0F;
      floatArray4[1] = 0.0F;
      floatArray4[2] = 0.0F;
      floatArray4[3] = 0.0F;
      floatArray4[4] = 19.389402F;
      floatArray4[5] = 0.0F;
      floatArray4[6] = 0.0F;
      floatArray4[7] = 0.0F;
      floatArray4[8] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[7];
      floatArray5[0] = 0.0F;
      floatArray5[1] = (-1.0F);
      floatArray5[2] = 0.0F;
      floatArray5[4] = 0.0F;
      floatArray5[5] = 0.0F;
      floatArray5[6] = 0.0F;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[1] = 0.0F;
      floatArray6[2] = 0.0F;
      floatArray0[5] = floatArray6;
      floatArray0[6] = floatArray1;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("Content isn't a JAR entry", "Content isn't a JAR entry", "XwK7%o}M`$'Syj&.(S", (Content) null, (Content) null, (Content) null, 19.389402F, 19.389402F, 19.389402F, 19.389402F, false, 19.389402F, 19.389402F, sashArray0, floatArray0, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getY();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(4.0721884F, (-3589.0F), 2353.7363F);
      homeLight1.isPointAt((-3589.0F), (-3589.0F), (-3589.0F));
      homeLight1.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.setNameAngle(0.0F);
      homeLight1.setDescription("~k\"p;W02");
      HomeLight homeLight3 = homeLight2.clone();
      homeLight2.setNameAngle(0.0F);
      homeLight1.getPriceValueAddedTaxIncluded();
      homeLight3.getDepth();
      homeLight2.setHeight(1006.0F);
      homeLight1.getName();
      homeLight1.setX((-2183.5703F));
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      float float1 = 1006.0F;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        homeLight1.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight0.isPointAt(2938.14F, (-1624.0F), 2.0F);
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameVisible(true);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight0.isBottomLeftPointAt((-3589L), (-207.83F), (-3589L));
      homeLight1.setNameAngle(0.0F);
      homeLight1.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight1.isTopLeftPointAt((-2814.9F), (-228.31F), (-3589L));
      homeLight1.isDoorOrWindow();
      homeLight0.getDepth();
      homeLight1.setNameYOffset((-207.83F));
      homeLight1.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "L(,H+/\"';#Z", "L(,H+/\"';#Z", "L(,H+/\"';#Z", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.clone();
      homeLight0.setElevation(1006.0F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("KnY\"");
      HomeLight homeLight1 = homeLight0.clone();
      Float.isFinite((-706.12067F));
      homeLight0.move(664.64343F, (-706.12067F));
      homeLight1.setNameVisible(false);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight0.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setHeight((-3589.0F));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight1.setX((-2183.5703F));
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.getCatalogId();
      homeLight0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnSY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(false);
      homeLight1.setName("");
      homeLight0.setWidth((-3614.0F));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float1 = 985.3647F;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 985.3647F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      // Undeclared exception!
      try { 
        homeLight0.setShininess((Float) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Integer integer0 = Integer.getInteger("&1", 816);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("K`nY\"", uRLContent0, uRLContent0, 1023.57684F, (-4122.9F), (-7.0F), 2331.498F, false, false, integer0, (float[][]) null, true, (-4202.44F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Long long0 = new Long(293L);
      Float float0 = new Float((-1266.32F));
      Float float1 = new Float(0.0F);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("java.version", "", 1799, "", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      float[][] floatArray0 = new float[8][5];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 2723.258F;
      floatArray1[2] = (-1266.32F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[9];
      floatArray2[0] = 0.0F;
      floatArray2[1] = (float) 293L;
      floatArray2[2] = (-2198.3997F);
      floatArray2[3] = (float) 1799;
      floatArray2[4] = (float) 293L;
      floatArray2[5] = (-1.0F);
      floatArray2[6] = (float) 293L;
      floatArray2[7] = 0.0F;
      floatArray2[8] = (-1266.32F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = (-1266.32F);
      floatArray3[1] = (-1266.32F);
      floatArray3[2] = 0.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (-1.0F);
      floatArray4[2] = (-1266.32F);
      floatArray4[3] = (-1.0F);
      floatArray4[4] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[3];
      floatArray5[0] = (-1266.32F);
      floatArray5[1] = 2.0F;
      floatArray5[2] = (float) 293L;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[0] = 0.0F;
      floatArray6[1] = 0.0F;
      floatArray6[2] = (-1.0F);
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[8];
      floatArray7[0] = 2.0F;
      floatArray7[1] = (-2848.31F);
      floatArray7[2] = 1.0F;
      floatArray7[3] = (-1.0F);
      floatArray7[4] = 0.0F;
      floatArray7[5] = 0.0F;
      floatArray7[6] = 3645.0F;
      floatArray7[7] = 2.0F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[5];
      floatArray8[0] = (-1266.32F);
      floatArray8[1] = (-2198.3997F);
      floatArray8[2] = 2.0F;
      floatArray8[3] = 0.0F;
      floatArray8[4] = 3.4028235E38F;
      floatArray0[7] = floatArray8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "X", "com.eteks.sweethome3d.model.HomePieceOfFurniture$16", resourceURLContent0, resourceURLContent0, resourceURLContent0, (-1.0F), 2.0F, 1799, 2723.258F, true, floatArray0, (String) null, false, false, false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      level0.setFloorThickness((-3589L));
      homeLight1.setLevel(level0);
      homeLight1.setShininess(float0);
      homeLight1.getLevel();
      homeLight0.isTexturable();
      homeLight0.setNameYOffset(1.0F);
      homeLight1.isTopRightPointAt((-3589.0F), (-3589.0F), 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(false);
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      homeLight2.setNameAngle((-3589L));
      homeLight2.isNameCenterPointAt((-3589.0F), 0.0F, 0.0F);
      homeLight0.isNameCenterPointAt((-711.0F), (-3589.0F), 0.0F);
      homeLight0.setNameXOffset((-3589L));
      homeLight2.getModel();
      Integer integer0 = new Integer(3182);
      homeLight2.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setDescription("");
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.isResizable();
      Integer integer0 = new Integer(2146626882);
      homeLight1.setColor((Integer) null);
      HomeLight homeLight3 = new HomeLight(homeLight1);
      homeLight3.setY((-3589L));
      homeLight0.setMovable(false);
      homeLight0.getLevel();
      homeLight3.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.getX();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      Float float1 = new Float((-3589.0F));
      CatalogLight catalogLight0 = new CatalogLight("WIDTH", "8hR?pS", "KnY\"", (String) null, (String[]) null, long0, float1, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), 0.0F, 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "", false, false, false, (BigDecimal) null, (BigDecimal) null, ".tmp");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription((String) null);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.setModelMirrored(false);
      homeLight1.setDepth((-2070.9949F));
      Integer integer0 = new Integer(2146626882);
      homeLight0.setColor(integer0);
      homeLight1.setY(2146626882);
      homeLight1.setMovable(true);
      homeLight1.getLevel();
      homeLight0.setDepth((-3589L));
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameVisible(true);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setNameAngle(0.0F);
      homeLight1.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight1.isTopLeftPointAt((-2814.9F), (-228.31F), (-3589L));
      homeLight1.isDoorOrWindow();
      homeLight1.setAngle(7271.5F);
      homeLight0.clone();
      homeLight0.setNameYOffset((-228.31F));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "d'qmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WIDTH");
      homeLight0.setDescription("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.setElevation(1006.0F);
      homeLight1.setNameXOffset(1006.0F);
      homeLight0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setNameAngle((-3589L));
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, (-2711));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("]o]Q9OGHe3#p>y{l.", "]o]Q9OGHe3#p>y{l.", "]o]Q9OGHe3#p>y{l.", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, 1.0F, 1.0F, 1.0F, 1.0F, true, 3189.5703F, 3189.5703F, (Sash[]) null, (float[][]) null, "]o]Q9OGHe3#p>y{l.", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = null;
      try {
        homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogDoorOrWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      float float1 = new Long((-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".U<<[f;A", ".U<<[f;A", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, 4471.708F, 1006.0F, 0.5F, 1637.0F, true, lightSourceArray0, "]n-.o:Opm", (float[][]) null, ".U<<[f;A", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setDescription("com.eteks.sweethome3d.model.BackgroundImage");
      homeLight1.isPointAt((-3614L), 2678.41F, 1637.0F);
      homeLight1.setNameAngle(4471.708F);
      // Undeclared exception!
      try { 
        homeLight1.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      catalogLight0.getCategory();
      catalogLight0.setCategory((FurnitureCategory) null);
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight1.setLevel(level0);
      homeLight0.containsPoint(3.4028235E38F, 0.0F, (-3589.0F));
      homeLight0.containsPoint((-1.0F), (-3589.0F), 2243.357F);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt((-4122.9F), 1006.0F, 2353.7363F);
      homeLight0.setX(1006.0F);
      homeLight1.getCatalogId();
      homeLight0.isNameVisible();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Q@|*]EQY=!\"K:P{C(<X", propertyChangeListener0);
      homeLight0.addPropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      Float.isFinite((-3589L));
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY-\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setHeight(1006.0F);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setShininess((Float) null);
      homeLight1.isBottomLeftPointAt(1006.0F, 1.0F, 1006.0F);
      homeLight0.isDeformable();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.setModelMirrored(false);
      homeLight1.setDepth((-2070.9949F));
      Integer integer0 = new Integer(2146626882);
      homeLight0.setColor(integer0);
      homeLight1.setY(2146626882);
      homeLight1.setMovable(true);
      homeLight1.getLevel();
      homeLight0.setDepth((-3589L));
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, (-3589L), (-1.0F));
      homeLight0.isPointAt((-3589.0F), (-1624.0F), (-3589.0F));
      homeLight0.getGroundElevation();
      homeLight0.getAngle();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(true);
      homeLight1.setNameYOffset((-3589.0F));
      TextStyle textStyle0 = new TextStyle(1006.0F, true, true);
      homeLight1.setNameStyle(textStyle0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CatalogLight catalogLight0 = new CatalogLight("}m", "wbrKZ/izqeur", "", uRLContent0, uRLContent0, uRLContent0, 1.0F, 2715.3984F, (-3589L), (-228.31F), false, lightSourceArray0, (float[][]) null, "}m", false, true, true, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "o(W=Np", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("o(W=Np", "o(W=Np", "o(W=Np", "o(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setPower((-3589L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(false);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.clone();
      homeLight2.isPointAt((-1.0F), (-3589.0F), 3490.29F);
      homeLight0.isTopLeftPointAt(0.5F, (-1.0F), (-88.53965F));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.setNameAngle(0.0F);
      homeLight2.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight2.isTopLeftPointAt((-2814.9F), (-228.31F), (-3589L));
      homeLight2.isDoorOrWindow();
      homeLight1.isVisible();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      long long0 = (-3589L);
      Long long1 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      boolean boolean0 = true;
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long1, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.clone();
      Float float1 = new Float(0.0F);
      float1.floatValue();
      Float float2 = new Float((double) 0.0F);
      float2.floatValue();
      // Undeclared exception!
      try { 
        homeLight0.setShininess((Float) 0.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.setModelMirrored(false);
      Integer integer0 = new Integer(2146626882);
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setDescription("JjcKeDF*");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameAngle((-229.793F));
      homeLight1.setElevation((-3589L));
      homeLight0.isBottomLeftPointAt(1006.0F, 314.847F, (-1491.0F));
      homeLight1.getValueAddedTax();
      homeLight0.setVisible(false);
      homeLight0.getHeight();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "Go(W=Np", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setNameAngle((-3589L));
      homeLight1.setPower((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(false);
      homeLight0.containsPoint((-3589.0F), (-3589L), (-3589L));
      homeLight1.setWidth((-3589.0F));
      homeLight1.getPoints();
      homeLight0.isNameCenterPointAt((-3589.0F), (-3589L), 1922.4F);
      homeLight1.isBottomRightPointAt((-2500.6206F), (-1142.24F), 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = homeLight1.clone();
      homeLight0.setNameAngle((-3589.0F));
      HomeLight homeLight3 = homeLight0.clone();
      homeLight1.setNameAngle(1016.7F);
      homeLight3.isTopLeftPointAt(1006.0F, 0.5F, (-270.8F));
      homeLight2.getDepth();
      homeLight2.setMovable(false);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.sum((-3589.0F), 664.64343F);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      Float.isFinite((-706.12067F));
      homeLight0.move(664.64343F, (-706.12067F));
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight1.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Long long0 = new Long((-3594L));
      Float float0 = new Float((float) (-3594L));
      Long long1 = new Long((-3594L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[4];
      Level level0 = new Level("", 3.4028235E38F, 3.4028235E38F, (-34.3759F));
      CatalogLight catalogLight0 = new CatalogLight("", "b83*6", "5", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3594L), 1.0F, 376.89F, (-3594L), true, lightSourceArray0, (float[][]) null, "KnY\"", true, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("5", propertyChangeListener0);
      homeLight0.removePropertyChangeListener(propertyChangeListenerProxy0);
      homeLight0.setY(1.0F);
      homeLight0.setX(1.0F);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "Go(W=Np", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.isPointAt((-3589.0F), (-3589L), (-3589.0F));
      homeLight0.setNameAngle((-3589L));
      homeLight0.setModelMirrored(false);
      homeLight0.setY(2144.03F);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle(0.3926991F);
      homeLight0.isNameCenterPointAt((-1.0F), 1006.0F, 0.3926991F);
      homeLight0.isTopLeftPointAt(1045.9287F, 1.0F, 1.0F);
      homeLight0.isDoorOrWindow();
      // Undeclared exception!
      try { 
        homeLight0.setDepth(2338.3394F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", false, true, false, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isResizable();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.setMovable(false);
      homeLight0.getGroundElevation();
      homeLight0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      homeLight2.setDescription("KnY\"");
      homeLight0.clone();
      homeLight1.setNameAngle(5271.0635F);
      homeLight2.setElevation((-3589.0F));
      homeLight0.getLevel();
      homeLight1.setElevation(1006.0F);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setDescription("");
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.isResizable();
      Integer integer0 = new Integer(2146626882);
      homeLight1.setColor((Integer) null);
      HomeLight homeLight3 = new HomeLight(homeLight1);
      homeLight3.setY((-3589L));
      homeLight0.setMovable(false);
      homeLight0.getLevel();
      homeLight3.isDeformable();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "ygt|/+24", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight1.setLevel(level0);
      homeLight0.containsPoint(2144.03F, (-568.0F), (-1491.0F));
      homeLight1.setElevation(2144.03F);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setMovable(true);
      homeLight1.getLevel();
      homeLight0.getTexture();
      homeLight1.setTexture((HomeTexture) null);
      homeLight1.setY(0.0F);
      homeLight1.getTexture();
      homeLight0.containsPoint(5.1071777F, 5.1071777F, 0.0F);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Float float0 = new Float((float) (-3589L));
      Long long0 = new Long((-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[4];
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      CatalogLight catalogLight0 = new CatalogLight("KnY\"", (String) null, "", uRLContent0, uRLContent0, uRLContent0, 1.0F, (-3589L), (-3589L), 3.4028235E38F, false, lightSourceArray0, (float[][]) null, (String) null, false, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setY((-1286.233F));
      homeLight0.setX(1.0F);
      homeLight0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setMovable(true);
      homeLight1.getLevel();
      homeLight0.setLevel((Level) null);
      homeLight1.setShininess(float0);
      homeLight1.getLevel();
      homeLight0.isTexturable();
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setNameYOffset((-3589L));
      homeLight1.isTopRightPointAt(1006.0F, 0.22377796F, (-3589.0F));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Long long0 = new Long((-3594L));
      Float float0 = new Float((float) (-3594L));
      Long long1 = new Long((-3594L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[4];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Level level0 = new Level("", 3.4028235E38F, 3.4028235E38F, (-34.3759F));
      CatalogLight catalogLight0 = new CatalogLight("", "b83*6", "b83*6", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3594L), 1.0F, 376.89F, (-3594L), true, lightSourceArray0, (float[][]) null, "KnY\"", true, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setY(1.0F);
      homeLight0.setX(1.0F);
      homeLight0.getX();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setShininess((Float) null);
      homeLight1.setNameVisible(true);
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight1.isTopLeftPointAt(592.63586F, 2539.07F, (-1.0F));
      homeLight1.setNameVisible(false);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt((-4122.9F), 1006.0F, 2353.7363F);
      homeLight0.setX(1006.0F);
      homeLight1.getCatalogId();
      homeLight0.intersectsRectangle((-3589.0F), (-3589L), (-3589.0F), 1.0F);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight1.setLevel(level0);
      homeLight1.setShininess(float0);
      homeLight1.getLevel();
      homeLight0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("o(W=Np", "o(W=Np", "o(W=Np", "o(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, "o(W=Np", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setPower((-3589L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(false);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.clone();
      homeLight2.isPointAt((-1.0F), (-3589.0F), 3490.29F);
      homeLight0.isBottomRightPointAt((-3589L), (-3589.0F), (-88.53965F));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.isTopRightPointAt((-2183.5703F), 5.808511F, 1020.3999F);
      homeLight0.setNameAngle((-3589L));
      homeLight0.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.containsPoint((-568.0F), 1006.0F, (-406.0837F));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.setModelMirrored(false);
      Integer integer0 = new Integer(2146626882);
      homeLight0.setColor(integer0);
      homeLight1.setY(2146626882);
      homeLight1.setMovable(true);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(true);
      homeLight0.setHeight((-3589L));
      homeLight0.getName();
      homeLight0.setX((-3389.7278F));
      Random.setNextRandom(14);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeLight2.setNameAngle(0.0F);
      homeLight2.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight2.isTopLeftPointAt((-2814.9F), (-228.31F), (-3589L));
      homeLight1.setWidth((-1.0F));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.setModelMirrored(false);
      Integer integer0 = new Integer(2146626882);
      homeLight0.isBackFaceShown();
      homeLight0.getCurrency();
      homeLight1.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.min(0L, 0L);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "Go(W=Np", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, 0L, 0L, 0L, 0.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, ".tmp");
      Float.isFinite(0.0F);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle(0L);
      homeLight1.setNameAngle(0L);
      homeLight1.setPower(0L);
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setWidth(0.0F);
      homeLight0.isNameCenterPointAt(0.0F, 0L, 0L);
      homeLight1.isBottomRightPointAt((-2500.6206F), (-1142.24F), 3.4028235E38F);
      homeLight1.getWidth();
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeLight1.setNameAngle(0.0F);
      homeLight1.setVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.isBackFaceShown();
      homeLight1.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Long long0 = new Long(293L);
      Float float0 = new Float((-1266.32F));
      Float float1 = new Float(0.0F);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("java.version", "", 1799, "", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      float[][] floatArray0 = new float[8][5];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 2723.258F;
      floatArray1[2] = (-1266.32F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[9];
      floatArray2[0] = 0.0F;
      floatArray2[1] = (float) 293L;
      floatArray2[2] = (-2198.3997F);
      floatArray2[3] = (float) 1799;
      floatArray2[4] = (float) 293L;
      floatArray2[5] = (-1.0F);
      floatArray2[6] = (float) 293L;
      floatArray2[7] = 0.0F;
      floatArray2[8] = (-1266.32F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = (-1266.32F);
      floatArray3[1] = (-1266.32F);
      floatArray3[2] = 0.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (-1.0F);
      floatArray4[2] = (-1266.32F);
      floatArray4[3] = (-1.0F);
      floatArray4[4] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[3];
      floatArray5[0] = (-1266.32F);
      floatArray5[1] = 2.0F;
      floatArray5[2] = (float) 293L;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[0] = 0.0F;
      floatArray6[1] = 0.0F;
      floatArray6[2] = (-1.0F);
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[8];
      floatArray7[0] = 2.0F;
      floatArray7[1] = (-2848.31F);
      floatArray7[2] = 1.0F;
      floatArray7[3] = (-1.0F);
      floatArray7[4] = 0.0F;
      floatArray7[5] = 0.0F;
      floatArray7[6] = 3645.0F;
      floatArray7[7] = 2.0F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[5];
      floatArray8[0] = (-1266.32F);
      floatArray8[1] = (-2198.3997F);
      floatArray8[2] = 2.0F;
      floatArray8[3] = 0.0F;
      floatArray8[4] = 3.4028235E38F;
      floatArray0[7] = floatArray8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "X", "com.eteks.sweethome3d.model.HomePieceOfFurniture$16", resourceURLContent0, resourceURLContent0, resourceURLContent0, (-1.0F), 2.0F, 1799, 2723.258F, true, floatArray0, (String) null, false, false, false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getTexture();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.getNameYOffset();
      homeLight1.getStaircaseCutOutShape();
      homeLight1.setModelMirrored(false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getValueAddedTax();
      homeLight1.setMovable(true);
      homeLight0.getTexture();
      homeLight1.setTexture((HomeTexture) null);
      homeLight1.setY((-3589L));
      homeLight1.getTexture();
      homeLight0.getDepth();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.setMovable(false);
      homeLight1.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", true, false, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isResizable();
      homeLight0.setColor((Integer) null);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setY((-3614L));
      homeLight0.setMovable(false);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("GoW=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 0.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.getNameYOffset();
      homeLight0.getStaircaseCutOutShape();
      homeLight0.setModelMirrored(true);
      homeLight0.isNameCenterPointAt(0.0F, 5477.0F, 2539.07F);
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      long long0 = (-3589L);
      Long long1 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long1, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setMovable(true);
      homeLight0.getTexture();
      // Undeclared exception!
      try { 
        homeLight0.setTexture((HomeTexture) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Go(W=Np");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "~k\"p;W02", false, false, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setNameAngle((-229.793F));
      homeLight0.isBottomLeftPointAt(1006.0F, 314.847F, (-1491.0F));
      homeLight0.setVisible(false);
      homeLight0.getLevel();
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.getStaircaseCutOutShape();
      HomeLight homeLight3 = homeLight1.clone();
      homeLight3.setModelMirrored(false);
      homeLight3.getNameStyle();
      homeLight2.setNameStyle((TextStyle) null);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.getPrice();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Long long0 = new Long(293L);
      Float float0 = new Float((-1266.32F));
      Float float1 = new Float(0.0F);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("java.version", "", 1799, "Y", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      float[][] floatArray0 = new float[8][5];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 2723.258F;
      floatArray1[2] = (-1266.32F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[9];
      floatArray2[0] = 0.0F;
      floatArray2[1] = (float) 293L;
      floatArray2[2] = (-2198.3997F);
      floatArray2[3] = (float) 1799;
      floatArray2[4] = (float) 293L;
      floatArray2[5] = (-1.0F);
      floatArray2[6] = (float) 293L;
      floatArray2[7] = 0.0F;
      floatArray2[8] = (-1266.32F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = (-1266.32F);
      floatArray3[1] = (-1266.32F);
      floatArray3[2] = 0.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (-1.0F);
      floatArray4[2] = (-1266.32F);
      floatArray4[3] = (-1.0F);
      floatArray2[4] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[3];
      floatArray5[0] = (-1266.32F);
      floatArray5[1] = 2.3926024F;
      floatArray5[2] = (float) 293L;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[0] = 0.0F;
      floatArray6[1] = 0.0F;
      floatArray6[2] = (-1.0F);
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[8];
      floatArray7[0] = 2.3926024F;
      floatArray7[1] = (-2848.31F);
      floatArray7[2] = 1.0F;
      floatArray7[3] = (-1.0F);
      floatArray7[4] = 0.0F;
      floatArray7[5] = 0.0F;
      floatArray7[6] = 3645.0F;
      floatArray7[7] = 2.3926024F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[5];
      floatArray8[0] = (-1266.32F);
      floatArray8[1] = (-2198.3997F);
      floatArray8[2] = 2.3926024F;
      floatArray8[3] = 0.0F;
      floatArray8[4] = 3.4028235E38F;
      floatArray0[7] = floatArray8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "X", "com.eteks.sweethome3d.model.HomePieceOfFurniture$16", resourceURLContent0, resourceURLContent0, resourceURLContent0, (-1.0F), 2.3926024F, 1799, 2723.258F, true, floatArray0, "Y", true, true, false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      BigDecimal bigDecimal2 = new BigDecimal((long) 1799);
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getTexture();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "xP", "xP", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPoints();
      homeLight0.isBottomRightPointAt((-3589.0F), 1217.3412F, 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      System.setCurrentTimeMillis((-3589L));
      Float.valueOf(0.0F);
      Float float1 = Float.valueOf(0.0F);
      Sash[] sashArray0 = new Sash[6];
      Sash sash0 = new Sash(1.69F, 0.5F, (-3589.0F), 0.0F, (-3589.0F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1.69F, 1926.4958F, (-2057.0F), 3.4028235E38F, 0.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, (-2057.0F), 3.4028235E38F, (-2057.0F), 209.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(1020.3999F, (-1424.4F), 1.69F, 0.0F, (-3157.0F));
      sashArray0[3] = sash3;
      Sash sash4 = new Sash((-1142.24F), 1.0F, 1562.3F, 239.5412F, 0.0F);
      sashArray0[4] = sash4;
      Sash sash5 = new Sash(1.0F, 0.0F, 1798.0F, 209.0F, (-3589L));
      sashArray0[5] = sash5;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("X^'$c)n`)d`^", "~k\"p;W02", "X", "", (String[]) null, long0, float1, uRLContent0, uRLContent0, uRLContent0, 0.0F, (-3589.0F), (-3589.0F), 1006.0F, false, 2.467163F, 1020.3999F, sashArray0, (float[][]) null, (String) null, false, false, false, (BigDecimal) null, (BigDecimal) null, "X");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow1.clone();
      homePieceOfFurniture0.isPointAt(1.0F, 1.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "q", "q", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "q", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.isPointAt((-3589.0F), (-3589L), (-3589.0F));
      homeLight0.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight0.setLevel(level0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameAngle((-229.793F));
      homeLight1.setElevation((-3589L));
      homeLight0.isNameCenterPointAt((-229.793F), 0.0F, 1013.29846F);
      homeLight0.getValueAddedTax();
      homeLight1.setAngle(1006.0F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.sum((-3589.0F), 664.64343F);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight1.getValueAddedTax();
      homeLight1.isModelMirrored();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameVisible(true);
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight1.isBottomLeftPointAt((-3589L), (-207.83F), (-3589L));
      homeLight2.setNameAngle(0.0F);
      homeLight2.isNameCenterPointAt((-2814.9F), (-2814.9F), 0.0F);
      homeLight2.isTopLeftPointAt((-2814.9F), (-228.31F), (-3589L));
      homeLight2.isDoorOrWindow();
      homeLight1.getDepth();
      homeLight2.setNameYOffset(4746.46F);
      homeLight2.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight1.getPoints();
      homeLight1.setModelMirrored(false);
      Integer integer0 = new Integer(2146626882);
      homeLight0.setColor(integer0);
      homeLight1.setY(2146626882);
      homeLight1.setMovable(false);
      homeLight1.isMovable();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "COLOR", "KnY\"", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, 1006.0F, (-3918.2012F), (-3589L), (-3918.2012F), true, lightSourceArray0, "", (float[][]) null, "KnY\"", true, false, true, (BigDecimal) null, (BigDecimal) null, "~k\"p;W02");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setX(3.8792732F);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight0.setShininess((Float) null);
      homeLight1.isBottomLeftPointAt((-3589L), 1.0F, 1006.0F);
      homeLight1.getWidth();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Long long0 = new Long(293L);
      Float float0 = new Float((-1266.32F));
      Float float1 = new Float((float) 293L);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("java.version", "", 1799, "", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      float[][] floatArray0 = new float[8][5];
      float[] floatArray1 = new float[3];
      floatArray1[0] = (-1266.32F);
      floatArray1[1] = (-1.0F);
      floatArray1[2] = (-1266.32F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[9];
      floatArray2[0] = (float) 1799;
      floatArray2[1] = (float) 293L;
      floatArray2[2] = (-2198.3997F);
      floatArray2[3] = (float) 1799;
      floatArray2[5] = (-1.0F);
      floatArray2[6] = (float) 293L;
      floatArray2[7] = 2.0F;
      floatArray2[8] = (-1266.32F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = (-1266.32F);
      floatArray3[1] = (-1266.32F);
      floatArray3[2] = (float) 293L;
      floatArray3[3] = (float) 1799;
      floatArray3[5] = (-1266.32F);
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = (-1266.32F);
      floatArray4[1] = (-1.0F);
      floatArray4[2] = (-1266.32F);
      floatArray4[3] = (-1.0F);
      floatArray4[4] = 0.0F;
      float[] floatArray5 = new float[3];
      floatArray5[0] = (-1266.32F);
      floatArray5[1] = 2.0F;
      floatArray5[2] = (float) 293L;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[0] = 0.0F;
      floatArray6[1] = (float) 293L;
      floatArray6[2] = (-1.0F);
      floatArray0[6] = floatArray2;
      float[] floatArray7 = new float[5];
      floatArray7[0] = (-1266.32F);
      floatArray7[1] = (-2198.3997F);
      floatArray7[2] = 2.0F;
      floatArray7[3] = (float) 293L;
      floatArray7[4] = 3.4028235E38F;
      floatArray0[7] = floatArray7;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "X", "com.eteks.sweethome3d.model.HomePieceOfFurniture$16", resourceURLContent0, resourceURLContent0, resourceURLContent0, (-1.0F), 2.0F, 1799, (-1.0F), true, floatArray0, "", false, false, false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getTexture();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getValueAddedTax();
      homeLight0.setMovable(true);
      homeLight0.getTexture();
      homeLight0.setY((-3589L));
      homeLight0.getDepth();
      homeLight0.isBottomLeftPointAt((-3589.0F), (-3589L), 3.4028235E38F);
      homeLight0.getName();
      homeLight0.getLevel();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setShininess((Float) null);
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight0.isPointAt(2938.14F, (-1624.0F), 1006.0F);
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setDescription("");
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.isResizable();
      homeLight0.setModelMirrored(false);
      Integer integer0 = new Integer(2146626882);
      homeLight1.setColor(integer0);
      homeLight1.setY((-2070.9949F));
      homeLight2.setMovable(true);
      homeLight0.getNameXOffset();
      homeLight2.getWidth();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Long long0 = new Long((-3594L));
      Float float0 = new Float((float) (-3594L));
      Long long1 = new Long((-3594L));
      URL uRL0 = MockURL.getFileExample();
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[4];
      CatalogLight catalogLight0 = new CatalogLight(".&!-a3lDp[(Ad", "", "", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3594L), (-3594L), (-3594L), (-3594L), true, lightSourceArray0, "WIDTH", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "K/+'");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3594L));
      homeLight1.isTopRightPointAt((float) long1, (float) long1, 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.sum((-3589.0F), 664.64343F);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      Float.isFinite((-706.12067F));
      homeLight0.move(664.64343F, (-706.12067F));
      homeLight1.setNameVisible(false);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight1.getValueAddedTax();
      homeLight0.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HomeDoorOrWindow homeDoorOrWindow0 = null;
      try {
        homeDoorOrWindow0 = new HomeDoorOrWindow((DoorOrWindow) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Long long0 = new Long(293L);
      Float float0 = new Float((-1266.32F));
      Float float1 = new Float(0.0F);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("java.version", "", 1799, "Y", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      float[][] floatArray0 = new float[8][5];
      float[] floatArray1 = new float[3];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 2.3926024F;
      floatArray1[2] = (-1266.32F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[9];
      floatArray2[0] = 0.0F;
      floatArray2[1] = (float) 293L;
      floatArray2[2] = (-2198.3997F);
      floatArray2[3] = (float) 1799;
      floatArray2[4] = (float) 293L;
      floatArray2[5] = (-1.0F);
      floatArray2[6] = (float) 293L;
      floatArray2[7] = 0.0F;
      floatArray2[8] = (-1266.32F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = (-1266.32F);
      floatArray3[1] = (-1266.32F);
      floatArray3[2] = 0.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (-1.0F);
      floatArray4[2] = (-1266.32F);
      floatArray4[3] = (-1.0F);
      floatArray2[4] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[3];
      floatArray5[0] = (-1266.32F);
      floatArray5[1] = 2.3926024F;
      floatArray5[2] = (float) 293L;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[3];
      floatArray6[0] = 0.0F;
      floatArray6[1] = 0.0F;
      floatArray3[1] = (-1.0F);
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[8];
      floatArray7[0] = 2.3926024F;
      floatArray7[1] = (-2848.31F);
      floatArray7[2] = 0.0F;
      floatArray7[3] = (-1.0F);
      floatArray7[4] = 0.0F;
      floatArray7[5] = 0.0F;
      floatArray7[6] = 3645.0F;
      floatArray7[7] = 2.3926024F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[5];
      floatArray8[0] = (-1266.32F);
      floatArray8[1] = (-2198.3997F);
      floatArray8[2] = 2.3926024F;
      floatArray8[3] = 0.0F;
      floatArray8[4] = 0.0F;
      floatArray0[7] = floatArray8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "X", "com.eteks.sweethome3d.model.HomePieceOfFurniture$16", resourceURLContent0, resourceURLContent0, resourceURLContent0, (-1.0F), 2.3926024F, 1799, 0.0F, true, floatArray0, "Y", false, false, false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getTexture();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Long long0 = new Long((-3594L));
      Long long1 = new Long((-3594L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[4];
      CatalogLight catalogLight0 = new CatalogLight("", "b83*6", "b83*6", temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3594L), 1.0F, 376.89F, (-3594L), true, lightSourceArray0, (float[][]) null, "KnY\"", true, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setY(1.0F);
      homeLight0.setX(1.0F);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("KnY\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.KnY\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "&1", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", false, true, false, (BigDecimal) null, (BigDecimal) null, "K`nY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt((-4122.9F), 1006.0F, 2331.498F);
      homeLight0.setX(1006.0F);
      homeLight1.getCatalogId();
      homeLight1.isTopRightPointAt(2331.498F, (-1628.0096F), (-3589L));
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.sum((-3589.0F), 664.64343F);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt(592.63586F, 1006.0F, (-1.0F));
      homeLight1.getValueAddedTax();
      homeLight0.setNameVisible(false);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      Level level0 = new Level("WIDTH", (-3589L), 3.4028235E38F, 3.4028235E38F);
      homeLight1.setLevel(level0);
      homeLight0.containsPoint(2144.03F, (-568.0F), (-1491.0F));
      homeLight0.setWidth((-3589.0F));
      homeLight1.getPoints();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "`>?S6a/^@px'$%(", "`>?S6a/^@px'$%(", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), (-3614L), false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", false, true, false, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isResizable();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.getGroundElevation();
      homeLight2.getLevel();
      homeLight1.isTopRightPointAt((-3614L), 5146.9414F, (-3614.0F));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      Float.min((-3589.0F), (-3589.0F));
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setMovable(true);
      homeLight0.getTexture();
      homeLight1.setTexture((HomeTexture) null);
      homeLight1.setY((-3589L));
      homeLight1.getTexture();
      homeLight1.setVisible(false);
      homeLight1.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589L), false, lightSourceArray0, "", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getValueAddedTax();
      homeLight0.setMovable(true);
      homeLight0.getTexture();
      homeLight0.setY((-3589L));
      homeLight0.getDepth();
      homeLight0.isBottomLeftPointAt((-3589.0F), (-3589L), 3.4028235E38F);
      homeLight0.getName();
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      Float.isFinite(0.5F);
      Float.isFinite((-3589.0F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("", "KnY\"", "", uRLContent0, uRLContent0, 4746.46F, 931.92316F, 1848.62F, 4249.08F, false, lightSourceArray0, (float[][]) null, "", false, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isModelMirrored();
      homeLight0.getHeight();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", "/E~BpJd", "WIDTH", (Content) null, uRLContent0, (Content) null, (-2500.6206F), 2.0F, (-2500.6206F), (-4016.547F), true, (float[][]) null, "~k\"p;W02", true, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogLight0.compareTo(catalogPieceOfFurniture0);
      catalogLight0.getLightSources();
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash((-1), (-3589L), 2670.704F, (-1), (-385.0F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(2670.704F, (-1.0F), (-2486.2175F), (-2500.6206F), 895.4F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-2500.6206F), 1.0F, (-1.0F), 1221.0693F, 2066.9714F);
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("/E~BpJd", "", "}]-v~AZ", (Content) null, (Content) null, (Content) null, (-3589.0F), (-3589.0F), 4471.708F, 0.0F, true, (-1), (-4016.547F), sashArray0, (float[][]) null, "java.version", false, false, true, (BigDecimal) null, (BigDecimal) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.setName("");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.clone();
      homeLight0.setNameYOffset(0.0F);
      Float float1 = new Float(0.0F);
      float1.floatValue();
      Float float2 = new Float((double) 0.0F);
      float2.floatValue();
      // Undeclared exception!
      try { 
        homeLight0.setShininess((Float) 0.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Long long0 = new Long((-3588L));
      Float float0 = new Float((float) (-3588L));
      Float.min((-3588L), (-3588L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xP");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "xP", "xP", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3588L), (-3588L), (-3588L), 1006.0F, true, lightSourceArray0, "WIDTH", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight1.isPointAt(1006.0F, (-701.1433F), 1006.0F);
      homeLight0.isTopLeftPointAt(1006.0F, 0.5F, (-270.8F));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "Go(W=Np", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "Go(W=Np", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-3589L));
      homeLight0.setDescription("");
      homeLight0.isResizable();
      homeLight0.isNameCenterPointAt(1006.0F, (-3589L), (-3589L));
      homeLight0.setModelMirrored(false);
      homeLight0.setDepth((-2070.9949F));
      Integer.getInteger("Go(W=Np", 2146626882);
      homeLight0.setY(2146626882);
      homeLight0.setMovable(true);
      homeLight0.setDepth((-3589L));
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "Go(W=Np", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameVisible(true);
      homeLight1.setNameAngle((-3589L));
      homeLight0.isNameCenterPointAt((-4122.9F), 1006.0F, 2353.7363F);
      homeLight0.setX(1006.0F);
      homeLight1.containsPoint((-286.39F), (-3589L), 0.0F);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY-\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setNameXOffset(2.0F);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.addPropertyChangeListener((PropertyChangeListener) null);
      homeLight1.setShininess((Float) null);
      homeLight1.isBottomLeftPointAt(1006.0F, 1.0F, 1006.0F);
      homeLight0.isDeformable();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "Go(W=Np", "Go(W=Np", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, false, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription(".tmp");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.setWidth(1006.0F);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 985.3647F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      homeLight0.isBottomLeftPointAt(985.3647F, 1.0F, 985.3647F);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Long long0 = new Long((-3614L));
      Float float0 = new Float((float) (-3614L));
      Float.min((-3614L), (-3614L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "`>?S6a/^@px'$%(", "`>?S6a/^@px'$%(", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3614L), (-3614L), (-3614L), (-3614L), false, lightSourceArray0, "Go(W=Np", (float[][]) null, "", false, true, false, (BigDecimal) null, (BigDecimal) null, "Go(W=Np");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isResizable();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.isTopLeftPointAt((-3614L), 3.4028235E38F, 3089.0F);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight0.setElevation(1006.0F);
      homeLight1.clone();
      homeLight1.setY(1221.0693F);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      long long0 = (-3589L);
      Long long1 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long2 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "temporarySubFolder");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "temporarySubFolder", "temporarySubFolder", "", (String[]) null, long1, float0, temporaryURLContent0, temporaryURLContent0, temporaryURLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "temporarySubFolder", (float[][]) null, "~k\"p;W02", false, true, false, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameAngle((-229.793F));
      homeLight0.isBottomLeftPointAt(1006.0F, 314.847F, (-1491.0F));
      homeLight1.getValueAddedTax();
      // Undeclared exception!
      try { 
        homeLight0.setTexture((HomeTexture) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      Float.isFinite((-3589.0F));
      Integer integer0 = new Integer(3182);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogLight catalogLight0 = new CatalogLight("~k\"p;W02", "", ".tmp", uRLContent0, uRLContent0, uRLContent0, 1.0F, 1.0F, (-711.0F), (-1088.74F), false, lightSourceArray0, (float[][]) null, "# ^S", false, true, true, (BigDecimal) null, (BigDecimal) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getDepth();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long.sum((-594L), (-1L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, ".tmp", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.getWidth();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Float.min((-3589L), (-3589L));
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "WIDTH", uRLStreamHandler0);
      URLContent uRLContent0 = new URLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("Go(W=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), (-3589.0F), false, lightSourceArray0, "Go(W=Np", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      Float.isFinite((-3589.0F));
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setNameAngle((-3589L));
      homeLight1.setNameAngle((-3589L));
      homeLight0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setModelMirrored(true);
      homeLight1.setNameYOffset((-3589.0F));
      TextStyle textStyle0 = new TextStyle((-3589.0F), true, true);
      homeLight1.setNameStyle(textStyle0);
      homeLight1.getDescription();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Long long0 = new Long((-3589L));
      Float float0 = new Float((float) (-3589L));
      Long long1 = new Long((-3589L));
      Float.max((-3589L), 0.0F);
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      URLContent uRLContent0 = new URLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("GoW=Np", "", "", "", (String[]) null, long0, float0, uRLContent0, uRLContent0, uRLContent0, (-3589L), (-3589L), (-3589L), 1006.0F, false, lightSourceArray0, "", (float[][]) null, "~k\"p;W02", true, true, true, (BigDecimal) null, (BigDecimal) null, "KnY\"");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.getNameYOffset();
      homeLight0.getStaircaseCutOutShape();
      homeLight0.setModelMirrored(true);
      homeLight0.isNameCenterPointAt(0.0F, 5477.0F, 2539.07F);
      homeLight0.isTopLeftPointAt((-3589L), (-2500.6206F), 1006.0F);
  }
}
