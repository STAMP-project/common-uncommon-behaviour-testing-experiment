/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:22:26 GMT 2019
 */

package de.progra.charting.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.DefaultChart;
import de.progra.charting.Title;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.Line2D;
import javax.swing.border.BevelBorder;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractRenderer_ESTest extends AbstractRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BevelBorder bevelBorder0 = new BevelBorder((-1207), (Color) null, (Color) null, (Color) null, (Color) null);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) null, (-1207), 640, 640, 22);
      rectangle0.height = 22;
      Title title0 = new Title();
      rectangle0.height = 25;
      title0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Title title0 = new Title();
      Line2D.Double line2D_Double0 = new Line2D.Double(115, 25, 25, 115);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      rectangle0.setSize(115, (-823));
      title0.setBounds(rectangle0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      title0.render(graphics2D0);
      assertEquals("Chart Title", title0.getText());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Title title0 = new Title();
      Line2D.Double line2D_Double0 = new Line2D.Double(115, 25, 25, 115);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      title0.setBounds(rectangle0);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      title0.render(graphics2D0);
      assertEquals("Chart Title", title0.getText());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[1];
      DefaultDataSet defaultDataSet0 = new DefaultDataSet((-3375));
      dataSetArray0[0] = (DataSet) defaultDataSet0;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, "G.SD", (-387));
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Title title0 = new Title();
      BevelBorder bevelBorder0 = new BevelBorder((-1226), (Color) null, (Color) null, (Color) null, (Color) null);
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) null, 0, (-1226), (-1226), (-1226));
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals(2, rectangle1.x);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Title title0 = new Title();
      Line2D.Double line2D_Double0 = new Line2D.Double(115, 25, 25, 115);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      rectangle0.setSize(115, (-823));
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals(25, rectangle1.y);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Title title0 = new Title();
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(2124638077);
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals(0, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Title title0 = new Title();
      Line2D.Double line2D_Double0 = new Line2D.Double((-1224), 25, 25, (-1224));
      Rectangle rectangle0 = line2D_Double0.getBounds();
      title0.setBounds(rectangle0);
      Rectangle rectangle1 = title0.getBounds();
      assertEquals((-1224), rectangle1.y);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Title title0 = new Title("");
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (25) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Title title0 = new Title();
      // Undeclared exception!
      try { 
        title0.paintDefault((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Title", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Title title0 = new Title();
      Rectangle rectangle0 = title0.getBounds();
      assertEquals(2.147483647E9, rectangle0.getMaxX(), 0.01);
      assertEquals(2.147483647E9, rectangle0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Title title0 = new Title();
      // Undeclared exception!
      try { 
        title0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractRenderer", e);
      }
  }
}
