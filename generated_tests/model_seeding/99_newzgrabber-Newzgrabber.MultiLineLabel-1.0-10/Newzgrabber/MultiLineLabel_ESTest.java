/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 18:05:55 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.SystemColor;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Map;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8");
      multiLineLabel0.setAlignment(2);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      AttributeSet attributeSet0 = styleContext0.getEmptySet();
      Font font0 = defaultStyledDocument0.getFont(attributeSet0);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("&mXkSd&", 2, 2203, 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("k&]*kj/*p!o.Je^aW/o", (-6387));
      multiLineLabel0.num_lines = (-6387);
      multiLineLabel0.paint((Graphics) null);
      assertEquals((-6387), multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.width);
      assertEquals((-558), multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("}muv~?{k&N/D ");
      assertEquals(10, multiLineLabel0.getMarginWidth());
      
      multiLineLabel0.margin_width = (-15);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8");
      Font font0 = new Font("g`#xas&H0@Y]", 2, (-340));
      multiLineLabel0.setFont(font0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8");
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.newLabel("8");
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8");
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals((-558), multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("gO3b(,gV[^7vF5f*x6");
      assertEquals(0, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals((-558), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-;~{zKMW{ESnP");
      multiLineLabel0.max_width = (-1690);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(20, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-1670), dimension0.width);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 126, (-1571), 0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(252, dimension0.width);
      assertEquals((-3142), dimension0.height);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.max_width = 4099;
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(4099, dimension0.width);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-;~{zKMW{ESnP");
      multiLineLabel0.max_width = (-1690);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-1690), dimension0.width);
      assertEquals(0, dimension0.height);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.newLabel("jD+.WXuc!C");
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(15, dimension0.height);
      assertEquals(0, dimension0.width);
      assertEquals((-558), multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("BID");
      multiLineLabel0.line_height = (-1035);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-1035), dimension0.height);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-558), multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginHeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("&mXkSd&", 2, 2203, 2);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(2203, multiLineLabel0.getMarginHeight());
      assertEquals(2, multiLineLabel0.getAlignment());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, int0);
      assertEquals((-558), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("mDkF`", 2, 2, 2);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(2, int0);
      assertEquals(2, multiLineLabel0.getMarginWidth());
      assertEquals(2, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 10, 10, (-1));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-1), int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Z6");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("South");
      String[] stringArray0 = new String[0];
      multiLineLabel0.lines = stringArray0;
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8");
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S");
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 0, (-1), 625);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 1321, 1321);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 2109);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("~", 1);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.paint((Graphics) null);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("(");
      Font font0 = new Font("(", 0, 1);
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      multiLineLabel0.setAlignment((-558));
      assertEquals((-558), multiLineLabel0.getMarginHeight());
      assertEquals((-558), multiLineLabel0.getAlignment());
      assertEquals((-558), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("-;~{zKMW{ESnP");
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals((-558), multiLineLabel0.getMarginWidth());
      assertEquals((-558), int0);
      assertEquals((-558), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("gO3b(,gV[^7vF5f*x6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.setMarginWidth(2752);
      assertEquals(2752, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("8", (-690), (-1));
      assertEquals((-1), multiLineLabel0.getMarginHeight());
      assertEquals((-690), multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, (-558));
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-558), int0);
      assertEquals((-558), multiLineLabel0.getMarginHeight());
      assertEquals((-558), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",@<'qbm!z[#XF(S", (-558), (-558), (-558));
      HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = new Font(hashMap0);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("+:foKHod'/S=z#");
      SystemColor systemColor0 = SystemColor.textInactiveText;
      multiLineLabel0.setForeground(systemColor0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("622G#S,c");
      multiLineLabel0.setMarginHeight(65);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }
}
