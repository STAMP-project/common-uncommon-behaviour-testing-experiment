/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:59:32 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.PlotXAxis;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.text.NumberFormat;
import java.util.Stack;
import java.util.TreeSet;
import javax.swing.JInternalFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotXAxis_ESTest extends PlotXAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle(779, 1, 5, 3);
      BufferedImage bufferedImage0 = new BufferedImage(1, 9, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      plotXAxis0.setTickStepSize(3);
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      PlotRunList plotRunList0 = new PlotRunList(treeSet0);
      plotXAxis0.setAxisBounds(plotRunList0);
      JTextArea jTextArea0 = new JTextArea(0, 17);
      plotXAxis0.draw(graphics0, jTextArea0, rectangle0);
      assertEquals(2, PlotAxis.kMajorGrid);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(455, 5, 0, 2);
      BufferedImage bufferedImage0 = new BufferedImage(455, 2, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      plotXAxis0.resizeAxis(rectangle0);
      // Undeclared exception!
      try { 
        plotXAxis0.draw(graphics0, jInternalFrame0, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(0, (-2738), (-378), 2);
      BufferedImage bufferedImage0 = new BufferedImage(2, 5, 5);
      Graphics graphics0 = bufferedImage0.getGraphics();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotXAxis plotXAxis0 = new PlotXAxis("CA&9.d*a+*OS-s6on", linearAxisScale0, (NumberFormat) null, (-2738));
      // Undeclared exception!
      try { 
        plotXAxis0.draw(graphics0, jInternalFrame0, rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle();
      plotXAxis0.setSize(rectangle0);
      assertEquals(0.0, rectangle0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Stack<PlotDatum> stack0 = new Stack<PlotDatum>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 2);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      JScrollPane jScrollPane0 = new JScrollPane(jTable0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      plotXAxis0.resizeAxis(rectangle0);
      assertEquals(5, PlotAxis.kTick);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double[] doubleArray0 = new double[6];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, (PlotSymbol) null);
      PlotRun[] plotRunArray0 = new PlotRun[6];
      plotRunArray0[0] = plotRun0;
      plotXAxis0.manualQuant = true;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.resizeAxis((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(5, 0, 2, 5);
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, jInternalFrame0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(455, 5, 0, 2);
      BufferedImage bufferedImage0 = new BufferedImage(455, 2, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      plotXAxis0.setTickStepSize(5);
      // Undeclared exception!
      try { 
        plotXAxis0.draw(graphics0, jInternalFrame0, rectangle0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.LinearAxisScale", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(1, 0, 2, 1);
      plotXAxis0.setLabel("Q?:");
      BufferedImage bufferedImage0 = new BufferedImage(1, 5, 1);
      plotXAxis0.setGridStyle(0);
      Graphics graphics0 = bufferedImage0.getGraphics();
      plotXAxis0.draw(graphics0, jInternalFrame0, rectangle0);
      assertEquals(0.0, rectangle0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = new Rectangle(455, 5, 0, 2);
      BufferedImage bufferedImage0 = new BufferedImage(455, 2, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      plotXAxis0.setTickStepSize(2);
      PlotRunList plotRunList0 = new PlotRunList();
      plotXAxis0.setAxisBounds(plotRunList0);
      plotXAxis0.draw(graphics0, jInternalFrame0, rectangle0);
      assertTrue(jInternalFrame0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double[] doubleArray0 = new double[18];
      PlotRunList plotRunList0 = new PlotRunList();
      plotXAxis0.manualLowerBounds(true);
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      plotRunList0.add((Object) plotRun0);
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals(4.9E-324, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotRun plotRun0 = new PlotRun();
      PlotRun[] plotRunArray0 = new PlotRun[9];
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double[] doubleArray0 = new double[18];
      PlotRunList plotRunList0 = new PlotRunList();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      plotRunList0.add((Object) plotRun0);
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals(4.9E-324, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisBounds((PlotRunList) null);
      assertEquals(1.0, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUB = true;
      PlotRunList plotRunList0 = new PlotRunList();
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals((-1.0), plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotRun[] plotRunArray0 = new PlotRun[1];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotXAxis0.manualUB = true;
      plotXAxis0.manualLowerBounds(true);
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals(2, PlotAxis.kMajorGrid);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotRunList plotRunList0 = new PlotRunList();
      plotXAxis0.manualLowerBounds(true);
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals(1.0, plotXAxis0.getUpperBounds(), 0.01);
  }
}
