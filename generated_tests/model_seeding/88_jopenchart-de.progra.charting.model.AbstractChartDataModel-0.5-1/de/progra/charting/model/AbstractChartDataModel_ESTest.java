/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 16:22:00 GMT 2019
 */

package de.progra.charting.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.event.ChartDataModelListener;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.EditableDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import java.math.BigInteger;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChartDataModel_ESTest extends AbstractChartDataModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ArrayList<DefaultTableModel> arrayList0 = new ArrayList<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      arrayList0.add(defaultTableModel0);
      editableChartDataModel0.data = arrayList0;
      EditableChartDataModel editableChartDataModel1 = new EditableChartDataModel();
      boolean boolean0 = editableChartDataModel0.equals(editableChartDataModel1);
      assertFalse(editableChartDataModel1.equals((Object)editableChartDataModel0));
      assertFalse(editableChartDataModel1.isAutoScale());
      assertFalse(editableChartDataModel1.isManualScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Short short0 = new Short((short) (-4));
      objectChartDataModel0.minvalue = (Number) short0;
      Number number0 = objectChartDataModel0.getManualMaximumValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      
      objectChartDataModel0.setManualScale(true);
      boolean boolean0 = objectChartDataModel0.isManualScale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.isColumnNumeric();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.mincolumn = 0.5;
      double double0 = objectChartDataModel0.getManualMinimumColumnValue();
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[1];
      EditableDataSet editableDataSet0 = new EditableDataSet(0);
      editableDataSetArray0[0] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      editableChartDataModel0.getAxisBinding(0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      // Undeclared exception!
      try { 
        defaultChartDataModel0.getDataSetName(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getDataSetName((-3390));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getAxisBinding(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getAxisBinding((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.fireChartDataModelChangedEvent((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ArrayList<DefaultTableModel> arrayList0 = new ArrayList<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      arrayList0.add(defaultTableModel0);
      editableChartDataModel0.data = arrayList0;
      boolean boolean0 = editableChartDataModel0.equals(editableChartDataModel0);
      assertFalse(boolean0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      EditableDataSet editableDataSet0 = new EditableDataSet();
      DataSet[] dataSetArray0 = new DataSet[5];
      dataSetArray0[0] = (DataSet) editableDataSet0;
      dataSetArray0[1] = (DataSet) editableDataSet0;
      dataSetArray0[2] = (DataSet) editableDataSet0;
      dataSetArray0[3] = (DataSet) editableDataSet0;
      dataSetArray0[4] = (DataSet) editableDataSet0;
      DefaultChartDataModel defaultChartDataModel1 = new DefaultChartDataModel(dataSetArray0);
      boolean boolean0 = defaultChartDataModel0.equals(defaultChartDataModel1);
      assertFalse(defaultChartDataModel1.isManualScale());
      assertFalse(defaultChartDataModel1.isAutoScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      boolean boolean0 = defaultChartDataModel0.equals((Object) null);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(boolean0);
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      boolean boolean0 = editableChartDataModel0.equals(editableChartDataModel0);
      assertTrue(boolean0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      defaultChartDataModel0.fireChartDataModelChangedEvent(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      double double0 = editableChartDataModel0.getManualMinimumColumnValue();
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, double0, 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      BigInteger bigInteger0 = BigInteger.ONE;
      objectChartDataModel0.setMaximumValue(bigInteger0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setMaximumColumnValue(3050);
      double double0 = objectChartDataModel0.getManualMaximumColumnValue();
      assertEquals(3050.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMinimumColumnValue((-2862));
      assertEquals((-2862.0), editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.isManualScale();
      assertFalse(boolean0);
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getColumnClass();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertFalse(defaultChartDataModel0.isAutoScale());
      
      defaultChartDataModel0.setAutoScale(true);
      boolean boolean0 = defaultChartDataModel0.isAutoScale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setValueAt(427, 871, "");
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.getManualMinimumValue();
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setAxisBinding((-1818), 0);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      double double0 = objectChartDataModel0.getManualMaximumColumnValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, double0, 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      boolean boolean0 = defaultChartDataModel0.isAutoScale();
      assertFalse(boolean0);
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      BigInteger bigInteger0 = BigInteger.ONE;
      objectChartDataModel0.setMinimumValue(bigInteger0);
      Number number0 = objectChartDataModel0.getManualMinimumValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertNotNull(number0);
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.addChartDataModelListener((ChartDataModelListener) null);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.removeChartDataModelListener((ChartDataModelListener) null);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }
}
