/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 16:14:45 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.CoordSystem;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.DefaultChartDataModelConstraints;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.text.DecimalFormat;
import java.util.NoSuchElementException;
import javax.swing.JInternalFrame;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CoordSystem_ESTest extends CoordSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "{", (String) null);
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints((-1035));
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(chartDataModelConstraints0);
      assertEquals("{", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      boolean boolean0 = coordSystem0.isPaintLabels();
      assertFalse(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertTrue(boolean0);
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, true);
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (DecimalFormat) null, false, true, false);
      assertFalse(coordSystem0.isDrawArrows());
      
      coordSystem0.shouldDrawArrows = true;
      boolean boolean0 = coordSystem0.isDrawArrows();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getPointToPixelTranslator((-6034));
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "+O68`Qe", "B2__t");
      coordSystem0.setFirstYAxis((Axis) null);
      assertEquals("+O68`Qe", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("B2__t", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setManualScale(true);
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 1, true);
      Axis axis0 = new Axis(15, defaultChartDataModelConstraints0);
      coordSystem0.setSecondYAxis(axis0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(1);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(Double.NEGATIVE_INFINITY, affineTransform0.getDeterminant(), 0.01);
      assertEquals(Double.NaN, affineTransform0.getTranslateY(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(Double.NaN, affineTransform0.getTranslateX(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMaximumColumnValue(4947.146109741324);
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      coordSystem0.setBounds(rectangle0);
      AffineTransform affineTransform0 = coordSystem0.getTransform(1);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertNull(affineTransform0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertTrue(coordSystem0.isPaintAltTick());
      
      coordSystem0.shouldPaintAltTick = false;
      boolean boolean0 = coordSystem0.isPaintAltTick();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (String) null, (String) null);
      String string0 = coordSystem0.getYAxisUnit();
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertNull(string0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.yaxis_unit = "";
      coordSystem0.getYAxisUnit();
      assertEquals("", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, (String) null, "de.progra.charting.model.EditableDataSet");
      String string0 = coordSystem0.getXAxisUnit();
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("de.progra.charting.model.EditableDataSet", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertNull(string0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "&I#^[3vu");
      String string0 = coordSystem0.getXAxisUnit();
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("", string0);
      assertEquals("&I#^[3vu", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMaximumColumnValue(4947.146109741324);
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      coordSystem0.setBounds(rectangle0);
      Axis axis0 = coordSystem0.getXAxis();
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals((-47), axis0.getLength());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 1.0, 0.0, 0.0);
      coordSystem0.y1transform = affineTransform0;
      AffineTransform affineTransform1 = coordSystem0.getTransform(0);
      assertNotNull(affineTransform1);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      int int0 = coordSystem0.getTopMargin();
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, Integer.MAX_VALUE, false);
      Axis axis0 = new Axis(Integer.MAX_VALUE, defaultChartDataModelConstraints0);
      coordSystem0.setSecondYAxis(axis0);
      Rectangle rectangle0 = new Rectangle(0, 0, 619, 0);
      editableChartDataModel0.setMaximumColumnValue(4074.230006933631);
      coordSystem0.setBounds(rectangle0);
      Axis axis1 = coordSystem0.getSecondYAxis();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals((-41), axis1.getLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, (String) null, "de.progra.charting.model.EditableDataSet");
      Axis axis0 = coordSystem0.getXAxis();
      coordSystem0.setSecondYAxis(axis0);
      Axis axis1 = coordSystem0.getSecondYAxis();
      assertEquals(1, axis1.getAlignment());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("de.progra.charting.model.EditableDataSet", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertNotNull(axis1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      int int0 = coordSystem0.getRightMargin();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(30, int0);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (String) null, (String) null);
      int int0 = coordSystem0.getLeftMargin();
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(50, int0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setLeftMargin(0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(1.0737418085E9, rectangle0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      coordSystem0.setTopMargin((-1142));
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals((-1.0737424105E9), rectangle0.getCenterY(), 0.01);
      assertEquals(1.0737418335E9, rectangle0.getCenterX(), 0.01);
      assertFalse(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      coordSystem0.setRightMargin((-1836));
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1.0737418185E9, rectangle0.getCenterY(), 0.01);
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isDrawArrows());
      assertEquals((-1.0737408815E9), rectangle0.getCenterX(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMaximumColumnValue(4947.146109741324);
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      coordSystem0.setBounds(rectangle0);
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals((-41), axis0.getLength());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(2, axis0.getAlignment());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Rectangle rectangle0 = new Rectangle((-5), (-5), 619, 0);
      rectangle0.setFrameFromCenter((double) 2, 3.0, (-1025.9064172385), 5.0);
      editableChartDataModel0.setMaximumColumnValue(4074.230006933631);
      coordSystem0.setBounds(rectangle0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform((-1202));
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals((-994.0), affineTransform0.getTranslateX(), 0.01);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(0.4930993087236193, affineTransform0.getScaleX(), 0.01);
      assertEquals(-0.0, affineTransform0.getScaleY(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Rectangle rectangle0 = new Rectangle();
      editableChartDataModel0.setMaximumColumnValue((-1.0));
      coordSystem0.setBounds(rectangle0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20.0, affineTransform0.getTranslateX(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(1225.0, affineTransform0.getDeterminant(), 0.01);
      assertEquals((-20.0), affineTransform0.getTranslateY(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      editableChartDataModel0.setMinimumColumnValue(20);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform((-1202));
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals((-1.0737418235E8), affineTransform0.getScaleX(), 0.01);
      assertEquals(0.0, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(2.147483697E9, affineTransform0.getTranslateX(), 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      int int0 = coordSystem0.getBottomMargin();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(30, int0);
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setBottomMargin((-564));
      int int0 = coordSystem0.getBottomMargin();
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals((-564), int0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.c = null;
      // Undeclared exception!
      try { 
        coordSystem0.setBounds((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.paintDefault((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(20);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, (DecimalFormat) null, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, "^iK", "^iK");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setTransform((AffineTransform) null, 0);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setTransform((AffineTransform) null, 1);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, false, false);
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertNotNull(axis0);
      
      coordSystem0.setXAxis(axis0);
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(coordSystem0.isDrawArrows());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(2, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, true, true);
      Axis axis0 = coordSystem0.getSecondYAxis();
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(axis0);
      assertFalse(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Font font0 = coordSystem0.getFont();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(9, font0.getSize());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("sans", font0.getName());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(font0.isPlain());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      FontRenderContext fontRenderContext0 = coordSystem0.getFontRenderContext();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(fontRenderContext0.isAntiAliased());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getXDecimalFormat();
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      String string0 = coordSystem0.getYAxisUnit();
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", string0);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      String string0 = coordSystem0.getXAxisUnit();
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setYAxisUnit("(WEk&:z?/X");
      assertEquals("(WEk&:z?/X", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getYDecimalFormat();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "de.progra.charting.model.EditableDataSet", "de.progra.charting.model.EditableDataSet");
      coordSystem0.setXAxisUnit("|=kbNA2E!x");
      assertEquals("|=kbNA2E!x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, (String) null, "de.progra.charting.model.EditableDataSet");
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(1);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertNotNull(chartDataModelConstraints0);
      assertEquals("de.progra.charting.model.EditableDataSet", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (String) null, "+O68`Qe");
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(0);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
      assertNotNull(chartDataModelConstraints0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("+O68`Qe", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getPointToPixelTranslator(2);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getTransform(15);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setTransform((AffineTransform) null, 20);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "de.progra.charting.model.EditableDataSet", "de.progra.charting.model.EditableDataSet");
      assertTrue(coordSystem0.isPaintLabels());
      
      coordSystem0.setPaintLabels(false);
      assertFalse(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Dimension dimension0 = coordSystem0.getPreferredSize();
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(Integer.MIN_VALUE, dimension0.width);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(Integer.MIN_VALUE, dimension0.height);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, (DecimalFormat) null, false, true, false);
      boolean boolean0 = coordSystem0.isDrawArrows();
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(boolean0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      JInternalFrame jInternalFrame0 = new JInternalFrame("+");
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setFont((Font) null);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.setXAxis((Axis) null);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      boolean boolean0 = coordSystem0.isPaintAltTick();
      assertTrue(boolean0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setManualScale(true);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Rectangle rectangle0 = new Rectangle((-5), (-5), 619, 0);
      // Undeclared exception!
      coordSystem0.setBounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Axis axis0 = coordSystem0.yaxis;
      coordSystem0.setFirstYAxis(axis0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(2, axis0.getAlignment());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      Rectangle rectangle0 = new Rectangle((-5), (-5), 619, 0);
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      coordSystem0.getPointToPixelTranslator(0);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }
}
