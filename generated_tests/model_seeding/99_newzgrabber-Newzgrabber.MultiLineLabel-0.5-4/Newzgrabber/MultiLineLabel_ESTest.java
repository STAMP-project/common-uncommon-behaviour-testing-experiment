/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 18:14:23 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.DebugGraphics;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", (-2013), 0, 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("%5hpoOHC?5Ck2}N+0", 205, 0, (-992));
      Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("6{'0/MDIL%5%Xvh#{A", 10, (-3070));
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, 1922);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, dimension0.width);
      assertEquals(0, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(1922, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, (-1803), (-1803));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals((-1803), multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.width);
      assertEquals((-3606), dimension0.height);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Center");
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(35, dimension0.height);
      assertEquals(62, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("P3;KcR[)[Z2p6qzxDo", (byte)62, 2, 1);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(2, int0);
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(62, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Center");
      multiLineLabel0.setMarginWidth((-85));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-85), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Center");
      multiLineLabel0.setMarginHeight((-484));
      assertEquals((-484), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Font font0 = new Font("oPE", 124, (-1803));
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("file.separator", 0, 1, 126);
      multiLineLabel0.setFont(font0);
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(126, multiLineLabel0.getAlignment());
      assertEquals(1, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, (-1803), (-1803));
      multiLineLabel0.newLabel("SL,>]yK`z");
      assertEquals((-1803), multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals((-1803), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("zd7w9/hK:");
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.newLabel("zd7w9/hK:");
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 750);
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(750, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1));
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-1), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-766), (-766), (-544));
      Font font0 = Font.decode("P3;KcR[)[Z2p6qzxDo");
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel("");
      assertEquals((-544), multiLineLabel0.getAlignment());
      assertEquals((-766), multiLineLabel0.getMarginHeight());
      assertEquals((-766), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-766), (-766), (-544));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals((-1532), dimension0.width);
      assertEquals((-1532), dimension0.height);
      assertEquals((-544), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("L%k*J7BY\"", (-3556));
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(61, dimension0.width);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-3556), multiLineLabel0.getAlignment());
      assertEquals(15, dimension0.height);
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, 0);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("!", 0, 0, 0);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(0, int0);
      assertEquals(0, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, (-1803), (-1803));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-1803), int0);
      assertEquals((-1803), multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Center");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Font font0 = Font.decode("");
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.num_lines = 3552;
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont(font0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("kX]:0 DN~RR=FvP(p~FZ");
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("rb:dG,p");
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 3924, 54, 3924);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 54, 54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, (-3506));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(2, 1, 1);
      Graphics graphics0 = bufferedImage0.getGraphics();
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.MultiLineLabel", 1);
      multiLineLabel0.paint(graphics0);
      assertEquals(1, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("rb:dNG,2p");
      BufferedImage bufferedImage0 = new BufferedImage(120, 2, 2);
      Graphics graphics0 = bufferedImage0.getGraphics();
      multiLineLabel0.paint(graphics0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("k5hpoOHC?5?Ck2}N+0");
      Font font0 = new Font("k5hpoOHC?5?Ck2}N+0", 0, 0);
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("7[!#");
      multiLineLabel0.setAlignment(30);
      assertEquals(30, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("!", 30, 0, 30);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(30, int0);
      assertEquals(0, multiLineLabel0.getMarginHeight());
      assertEquals(30, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-206), (-206), 3804);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(3804, multiLineLabel0.getAlignment());
      assertEquals((-206), multiLineLabel0.getMarginWidth());
      assertEquals((-206), int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-206), (-206), 3804);
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 2, 3562);
      multiLineLabel0.paint((Graphics) null);
      assertEquals(2, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(3562, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1));
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("tjsAr~{(0M3`x( Mfa", (-1));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(10, int0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals((-1), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("4}8@0l;rS[?r'/");
      Color color0 = Color.LIGHT_GRAY;
      multiLineLabel0.setForeground(color0);
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }
}
