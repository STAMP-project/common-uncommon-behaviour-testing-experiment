/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 10:53:32 GMT 2019
 */

package dsachat.gm.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dsachat.gm.gui.MultiHeroTreeModel;
import dsachat.gm.gui.ValueHolder;
import dsachat.share.hero.FightValue;
import dsachat.share.hero.Hero;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JTree;
import javax.swing.event.TreeModelListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiHeroTreeModel_ESTest extends MultiHeroTreeModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("javax.swing.plaf.basic.BasicTreeUI$TreeModelHandler@0000000005", vector0);
      vector0.add((Hero) null);
      JTree jTree0 = new JTree(multiHeroTreeModel0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      multiHeroTreeModel0.fireTreeStructureChanged(vector0);
      assertFalse(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Streitkolben");
      boolean boolean0 = multiHeroTreeModel0.isLeaf("Streitkolben");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null, (Vector<Hero>) null);
      Object object0 = multiHeroTreeModel0.getRoot();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Q0");
      Object object0 = multiHeroTreeModel0.getRoot();
      assertEquals("Q0", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Err?V=$U'G");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.list = null;
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.isLeaf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChildCount((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Panzerstecher");
      Stack<Hero> stack0 = new Stack<Hero>();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("javax.swing.plaf.basic.BasicTreeUI$TreeModelHandler@0000000005", vector0);
      vector0.add((Hero) null);
      multiHeroTreeModel0.addTreeModelListener((TreeModelListener) null);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000003");
      FightValue fightValue0 = new FightValue("java.lang.String@0000000003", 1, 1);
      boolean boolean0 = multiHeroTreeModel0.isLeaf(fightValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000003");
      FightValue fightValue0 = new FightValue("java.lang.String@0000000003", 2839, 2839);
      int int0 = multiHeroTreeModel0.getIndexOfChild(fightValue0, "java.lang.String@0000000003");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000004", vector0);
      ValueHolder valueHolder0 = new ValueHolder("Spitzhacke", (Hero) null);
      ValueHolder valueHolder1 = new ValueHolder("Weapons", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder1, valueHolder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("BCt%}@\"_/.");
      ValueHolder valueHolder0 = new ValueHolder("Attributes", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder0, "BCt%}@\"_/.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValueHolder valueHolder0 = new ValueHolder("Talents", (Hero) null);
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Talents");
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder0, valueHolder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000004", vector0);
      ValueHolder valueHolder0 = new ValueHolder("%nJ3s7WO-y$I&q,As", (Hero) null);
      int int0 = multiHeroTreeModel0.getIndexOfChild(valueHolder0, (Object) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000004");
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel(" iI|*Kp^", stack0);
      ValueHolder valueHolder0 = new ValueHolder("[QOKFi", (Hero) null);
      int int0 = multiHeroTreeModel0.getIndexOfChild("[QOKFi", "java.lang.String@0000000004");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("O;xZ>rYg;[Lg");
      FightValue fightValue0 = new FightValue("", (-2091058319), (-2091058319));
      int int0 = multiHeroTreeModel0.getChildCount(fightValue0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000004");
      int int0 = multiHeroTreeModel0.getChildCount("java.lang.String@0000000004");
      assertEquals(0, int0);
      
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("java.lang.String@0000000004");
      MultiHeroTreeModel multiHeroTreeModel2 = new MultiHeroTreeModel("java.lang.String@0000000004", vector0);
      MultiHeroTreeModel multiHeroTreeModel3 = new MultiHeroTreeModel("java.lang.String@0000000006", vector0);
      JTree jTree0 = new JTree(multiHeroTreeModel3);
      assertTrue(vector0.isEmpty());
      assertEquals(0, vector0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000004", vector0);
      ValueHolder valueHolder0 = new ValueHolder("%nJ3s7WO-y$I&q,As", (Hero) null);
      int int0 = multiHeroTreeModel0.getChildCount(valueHolder0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000003");
      FightValue fightValue0 = new FightValue("java.lang.String@0000000003", (-2109209709), (-2109209709));
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(fightValue0, (-2109209709));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.ValueHolder@0000000007", vector0);
      ValueHolder valueHolder0 = new ValueHolder("Weapons", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder0, 3177);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValueHolder valueHolder0 = new ValueHolder("Talents", (Hero) null);
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Talents");
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder0, (-1510));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("BCt%}@\"_/.", stack0);
      ValueHolder valueHolder0 = new ValueHolder("Attributes", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder0, 1838);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000004");
      multiHeroTreeModel0.getChildCount("java.lang.String@0000000004");
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("java.lang.String@0000000004");
      // Undeclared exception!
      try { 
        multiHeroTreeModel1.getChild("mV-Nx*&9w/,>E7w", 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Ogerf\u00E4nger", vector0);
      Object object0 = multiHeroTreeModel0.getChild("Echsisches Szepter", (-2091058319));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Ogerf\u00E4nger", vector0);
      ValueHolder valueHolder0 = new ValueHolder("Q0", (Hero) null);
      Object object0 = multiHeroTreeModel0.getChild(valueHolder0, (-1));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel(",PL*X,=HQ!~FD");
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = synthTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.valueForPathChanged((TreePath) null, basicTreeUI_TreeModelHandler0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("javax.swing.plaf.basic.BasicTreeUI$TreeModelHandler@0000000005", vector0);
      multiHeroTreeModel0.removeTreeModelListener((TreeModelListener) null);
  }
}
