/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 13:58:38 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Image;
import jigl.image.InterpolationMethod;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterpolatedGrayImage_ESTest extends InterpolatedGrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 855);
      interpolatedGrayImage0.interp(1.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3, 3);
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.5021113642785912, 0.5021113642785912, 3);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat((-700.49355), 1.0, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -700
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(0.0, 2.0, 7);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat(3846.18761789, 1868);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3846
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(4393, 3848);
      interpolatedGrayImage0.splat((double) 6, 6);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.splat(0.587, (-16777216));
      assertEquals(8, interpolatedGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(2.0, (double) 0, 450);
      assertEquals(900, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum(2.0, (double) 0, 450);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum(0.0, (-2291.2855147103), 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2291
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 2.0, 6);
      assertEquals(36L, interpolatedGrayImage0.sqrSum());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum((-0.5), 1654);
      assertEquals(6839290L, interpolatedGrayImage0.sqrSum());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp(32767.0F, (float) 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      try { 
        interpolatedGrayImage0.interp((float) 8, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.interp(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 894);
      int int0 = interpolatedGrayImage0.interp(1.0);
      assertEquals(894, interpolatedGrayImage0.addSum());
      assertEquals(894, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      int int0 = interpolatedGrayImage0.interp(1.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(119, 119);
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      interpolatedGrayImage0.splat(1.0, (-0.5), 16);
      assertEquals(InterpolationMethod.CUBIC, interpolatedGrayImage0.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      interpolatedGrayImage0.splat(1.0, 0.0, 2);
      assertEquals(8, interpolatedGrayImage0.X());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      Integer integer0 = interpolatedGrayImage0.interp(3.0F, 3.0F);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(10, 10);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp((double) 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 2.0, 0);
      assertEquals(0, interpolatedGrayImage0.absSum());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 855);
      int int0 = interpolatedGrayImage0.interp(1.0);
      assertEquals(855, interpolatedGrayImage0.addSum());
      assertEquals(855, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum(1.0, 894);
      int int0 = interpolatedGrayImage0.interp((-0.04905251843018697));
      assertEquals(799236L, interpolatedGrayImage0.sqrSum());
      assertEquals((-43), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      interpolatedGrayImage0.clear();
      interpolatedGrayImage0.accum((-0.5), 1654);
      interpolatedGrayImage0.copy();
      assertEquals(2735716L, interpolatedGrayImage0.sqrSum());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      InterpolatedGrayImage interpolatedGrayImage1 = interpolatedGrayImage0.copy();
      assertEquals(0, interpolatedGrayImage1.Y());
      assertEquals(0, interpolatedGrayImage1.X());
      assertNotSame(interpolatedGrayImage1, interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(185, 185);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((InterpolatedGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1159, 1159);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((-4376), 5033);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(8, 8);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage1.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      InterpolationMethod interpolationMethod0 = interpolatedGrayImage0.getInterpolationMethod();
      assertEquals(InterpolationMethod.NEIGHBOR, interpolationMethod0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.splat((double) 12, 12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum(4454.271396, 4454.271396, (-3389));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4454
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum((double) 6, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3, 3);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.accum((double) 0.49834535F, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp((-1952.0F), (-1952.0F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1952
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(10, 10);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.interp(1.0F, 1.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(10, 10);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp(1.0F, (float) 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(6, 6);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp((float) 6, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(16, 16);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp(0.0F, (float) 16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(16, 16);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp((float) 16, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(10, 10);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      try { 
        interpolatedGrayImage0.interp((float) 10, (float) 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractArrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(20, 20);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedGrayImage0.interpolationMethod = interpolationMethod0;
      interpolatedGrayImage0.clear();
      int int0 = interpolatedGrayImage0.interp(1.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(174, 174);
      // Undeclared exception!
      interpolatedGrayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(12, 12);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      assertEquals(12, interpolatedGrayImage1.X());
  }
}
