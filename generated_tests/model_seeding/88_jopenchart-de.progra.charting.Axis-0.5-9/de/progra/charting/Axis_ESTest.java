/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 21:45:13 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.DefaultChartDataModelConstraints;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ObjectChartDataModel objectChartDataModel1 = new ObjectChartDataModel();
      ObjectChartDataModel objectChartDataModel2 = new ObjectChartDataModel();
      int int0 = Axis.LOGARITHMIC;
      Float float0 = new Float((double) 38);
      ChartDataModelConstraints chartDataModelConstraints0 = mock(ChartDataModelConstraints.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(chartDataModelConstraints0).getMinimumValue();
      objectChartDataModel2.setChartDataModelConstraints(38, chartDataModelConstraints0);
      ChartDataModelConstraints chartDataModelConstraints1 = objectChartDataModel2.getChartDataModelConstraints(38);
      Axis axis0 = new Axis(2, chartDataModelConstraints1);
      // Undeclared exception!
      try { 
        axis0.getPixelForValue(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[1][9];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 407;
      doubleArray1[1] = (double) 407;
      String[] stringArray0 = new String[3];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray1, stringArray0);
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(defaultChartDataModel0, 407, false);
      Axis axis0 = new Axis(407, defaultChartDataModelConstraints0);
      double double0 = axis0.getPixelForValue(64.0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = mock(ChartDataModelConstraints.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(chartDataModelConstraints0).getMaximumColumnValue();
      doReturn(0.0).when(chartDataModelConstraints0).getMinimumColumnValue();
      objectChartDataModel0.setChartDataModelConstraints(0, chartDataModelConstraints0);
      ChartDataModelConstraints chartDataModelConstraints1 = objectChartDataModel0.getChartDataModelConstraints(0);
      Axis axis0 = new Axis(0, chartDataModelConstraints1);
      double double0 = axis0.getPointToPixelRatio();
      assertEquals(1, axis0.getAlignment());
      assertEquals(0.0, double0, 0.01);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(1682);
      Axis axis0 = new Axis(525, chartDataModelConstraints0);
      axis0.setLength((-2696));
      double double0 = axis0.getPointToPixelRatio();
      assertEquals((-2696), axis0.getLength());
      assertEquals((-3.70919881305638E-4), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(1682);
      Axis axis0 = new Axis(525, chartDataModelConstraints0);
      double double0 = axis0.getPixelForValue(0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(312);
      Axis axis0 = new Axis(0, chartDataModelConstraints0);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      
      axis0.setLength(0);
      int int0 = axis0.getLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(1682);
      Axis axis0 = new Axis(525, chartDataModelConstraints0);
      axis0.setLength((-2696));
      int int0 = axis0.getLength();
      assertEquals((-2696), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints(1556);
      Axis axis0 = new Axis((-2), chartDataModelConstraints0);
      // Undeclared exception!
      try { 
        axis0.getPointToPixelRatio();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(defaultChartDataModel0, 3);
      Axis axis0 = new Axis((-1465), defaultChartDataModelConstraints0);
      // Undeclared exception!
      try { 
        axis0.getPixelForValue((-1465));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Axis axis0 = new Axis(2, (ChartDataModelConstraints) null);
      // Undeclared exception!
      try { 
        axis0.getPointToPixelRatio();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 4042);
      Axis axis0 = new Axis(4042, defaultChartDataModelConstraints0);
      double double0 = axis0.getPointToPixelRatio();
      assertEquals(1, axis0.getAlignment());
      assertEquals(4.656612875245797E-10, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 4042);
      Axis axis0 = new Axis(4042, defaultChartDataModelConstraints0);
      int int0 = axis0.getAlignment();
      assertEquals(1, int0);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(38);
      Axis axis0 = new Axis(2, chartDataModelConstraints0);
      double double0 = axis0.getPixelForValue(2);
      assertEquals(4.294967294E9, double0, 0.01);
      assertEquals(2, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, (-1));
      Axis axis0 = new Axis(2, stackedChartDataModelConstraints0);
      // Undeclared exception!
      axis0.getPixelForValue(2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 2);
      Axis axis0 = new Axis(2, stackedChartDataModelConstraints0);
      // Undeclared exception!
      axis0.getPointToPixelRatio();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Axis axis0 = new Axis(1, (ChartDataModelConstraints) null);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(1682);
      Axis axis0 = new Axis(525, chartDataModelConstraints0);
      int int0 = axis0.getLength();
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(1, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 4042);
      Axis axis0 = new Axis(4042, defaultChartDataModelConstraints0);
      axis0.setLength((-1159));
      double double0 = axis0.getPixelForValue(4042);
      assertEquals((-1159), axis0.getLength());
      assertEquals((-4684678.0), double0, 0.01);
  }
}
