/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 17:41:05 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jigl.image.ROI;
import jigl.image.types.TiledImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiledImage_ESTest extends TiledImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("jigl.image.types.GrayImage", 13, 687, (-1), Integer.MAX_VALUE);
      assertNotNull(tiledImage0);
      assertEquals(687, tiledImage0.Y());
      assertEquals(13, tiledImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage("", 13, (-1), 1, 1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Negative position: -26
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("NoXhTZ)lSNzSdU@", 27, 27, 27, 27);
      assertNotNull(tiledImage0);
      assertEquals(27, tiledImage0.Y());
      assertEquals(27, tiledImage0.X());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("M}n\"", (-436), (-2216), 35, (-436));
      assertNotNull(tiledImage0);
      assertEquals((-436), tiledImage0.X());
      assertEquals((-2216), tiledImage0.Y());
      
      int int0 = tiledImage0.X();
      assertEquals((-436), int0);
      assertEquals((-436), tiledImage0.X());
      assertEquals((-2216), tiledImage0.Y());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      TiledImage tiledImage0 = new TiledImage("P6 ", 0, 650, 1, 650);
      assertNotNull(tiledImage0);
      assertEquals(650, tiledImage0.Y());
      assertEquals(0, tiledImage0.X());
      
      try { 
        tiledImage0.get(6, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("$VALUES", 10, 10, 10, 10);
      assertNotNull(tiledImage0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      int int0 = tiledImage0.Y();
      assertEquals(10, int0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      int[] intArray0 = new int[8];
      tiledImage0.flush();
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      intArray0[0] = 10;
      intArray0[1] = 16;
      intArray0[2] = 10;
      intArray0[3] = 1656;
      intArray0[4] = 10;
      intArray0[5] = 1656;
      intArray0[6] = 843;
      intArray0[7] = 10;
      try { 
        tiledImage0.set(1656, 16, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = 7;
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage((String) null, 1487, 1487, 1487, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage(".JR:", (-844), (-844), 1986, 1986);
      assertNotNull(tiledImage0);
      assertEquals((-844), tiledImage0.X());
      assertEquals((-844), tiledImage0.Y());
      
      tiledImage0.flush();
      assertEquals((-844), tiledImage0.X());
      assertEquals((-844), tiledImage0.Y());
      
      tiledImage0.close();
      assertEquals((-844), tiledImage0.X());
      assertEquals((-844), tiledImage0.Y());
      
      tiledImage0.flush();
      assertEquals((-844), tiledImage0.X());
      assertEquals((-844), tiledImage0.Y());
      
      int int0 = tiledImage0.X();
      assertEquals((-844), int0);
      assertEquals((-844), tiledImage0.X());
      assertEquals((-844), tiledImage0.Y());
      
      int[] intArray0 = new int[1];
      intArray0[0] = 1986;
      try { 
        tiledImage0.set((-340), (-844), intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("$VALUES", 10, 10, 10, 10);
      assertNotNull(tiledImage0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      int int0 = tiledImage0.Y();
      assertEquals(10, int0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      int[] intArray0 = new int[9];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 843;
      intArray0[4] = 10;
      intArray0[5] = 10;
      intArray0[6] = 10;
      intArray0[7] = 843;
      TiledImage tiledImage1 = new TiledImage("$VALUES", 843, 575);
      assertFalse(tiledImage1.equals((Object)tiledImage0));
      assertNotNull(tiledImage1);
      assertEquals(10, tiledImage1.Y());
      assertEquals(10, tiledImage1.X());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("$VALUES", 10, 10, 10, 10);
      assertNotNull(tiledImage0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      int int0 = tiledImage0.Y();
      assertEquals(10, int0);
      assertEquals(10, tiledImage0.X());
      assertEquals(10, tiledImage0.Y());
      
      TiledImage tiledImage1 = new TiledImage("a9h;}[pZr^e1L7#YYwA", 10, 1, 10, 0);
      assertFalse(tiledImage1.equals((Object)tiledImage0));
      assertNotNull(tiledImage1);
      assertEquals(1, tiledImage1.Y());
      assertEquals(10, tiledImage1.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      // Undeclared exception!
      try { 
        tiledImage1.getImage(rOI0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 2541;
      TiledImage tiledImage0 = new TiledImage("r(*ph{", 2541, 2541, 2541, 2541);
      assertNotNull(tiledImage0);
      assertEquals(2541, tiledImage0.Y());
      assertEquals(2541, tiledImage0.X());
      
      TiledImage.Tile tiledImage_Tile0 = tiledImage0.new Tile();
      assertNotNull(tiledImage_Tile0);
      assertEquals(2541, tiledImage0.Y());
      assertEquals(2541, tiledImage0.X());
      
      // Undeclared exception!
      try { 
        tiledImage_Tile0.write(2541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage$Tile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 2541;
      TiledImage tiledImage0 = new TiledImage("r(*ph{", 2541, 2541, 2541, 2541);
      assertNotNull(tiledImage0);
      assertEquals(2541, tiledImage0.X());
      assertEquals(2541, tiledImage0.Y());
      
      tiledImage0.flush();
      assertEquals(2541, tiledImage0.X());
      assertEquals(2541, tiledImage0.Y());
      
      TiledImage.Tile tiledImage_Tile0 = tiledImage0.new Tile();
      assertNotNull(tiledImage_Tile0);
      assertEquals(2541, tiledImage0.X());
      assertEquals(2541, tiledImage0.Y());
      
      // Undeclared exception!
      try { 
        tiledImage_Tile0.write(2541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage$Tile", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("r(*ph{", 2550, 2550, 2550, 2550);
      assertNotNull(tiledImage0);
      assertEquals(2550, tiledImage0.X());
      assertEquals(2550, tiledImage0.Y());
      
      int[] intArray0 = new int[2];
      intArray0[0] = 335;
      intArray0[1] = 2550;
      try { 
        tiledImage0.set(2550, 335, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 4269;
      intArray0[1] = 158;
      TiledImage tiledImage0 = new TiledImage(" ", 4269, 158, (-2914), 1325);
      assertNotNull(tiledImage0);
      assertEquals(158, tiledImage0.Y());
      assertEquals(4269, tiledImage0.X());
      
      try { 
        tiledImage0.get(2391, 2267);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("jigl.image.types.GrayImage", 13, 687, (-1), Integer.MAX_VALUE);
      assertNotNull(tiledImage0);
      assertEquals(687, tiledImage0.Y());
      assertEquals(13, tiledImage0.X());
      
      try { 
        tiledImage0.get(13, 687);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("r(*ph{", 2541, 2541, 2541, 2541);
      assertNotNull(tiledImage0);
      assertEquals(2541, tiledImage0.Y());
      assertEquals(2541, tiledImage0.X());
      
      tiledImage0.flush();
      assertEquals(2541, tiledImage0.Y());
      assertEquals(2541, tiledImage0.X());
      
      TiledImage.Tile tiledImage_Tile0 = tiledImage0.new Tile();
      assertNotNull(tiledImage_Tile0);
      assertEquals(2541, tiledImage0.Y());
      assertEquals(2541, tiledImage0.X());
      
      // Undeclared exception!
      try { 
        tiledImage_Tile0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage$Tile", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 8;
      int int1 = 1168;
      TiledImage tiledImage0 = new TiledImage("RGB", 8, 256, 1168, 1168);
      assertNotNull(tiledImage0);
      assertEquals(256, tiledImage0.Y());
      assertEquals(8, tiledImage0.X());
      
      int int2 = tiledImage0.X();
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(8, int2);
      assertEquals(256, tiledImage0.Y());
      assertEquals(8, tiledImage0.X());
      
      int int3 = (-2332);
      int int4 = (-3540);
      try { 
        tiledImage0.get((-2332), (-3540));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("jigl.image.types.GrayImage", 13, 687, (-1), Integer.MAX_VALUE);
      assertNotNull(tiledImage0);
      assertEquals(13, tiledImage0.X());
      assertEquals(687, tiledImage0.Y());
      
      TiledImage tiledImage1 = new TiledImage("jigl.image.types.GrayImage", 13, 687, 13, (-2091));
      assertFalse(tiledImage1.equals((Object)tiledImage0));
      assertNotNull(tiledImage1);
      assertEquals(13, tiledImage1.X());
      assertEquals(687, tiledImage1.Y());
      
      try { 
        tiledImage0.get(6, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }
}
