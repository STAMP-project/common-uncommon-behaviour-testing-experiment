/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:47:25 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import javax.swing.JLayeredPane;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createWarningMessage("d04gGygB%{0m(_#1x", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-524L));
      Object[] objectArray0 = new Object[2];
      Message message0 = MessageFactory.createWarningMessage("-T0YKN2Q^z5CW", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Message message0 = new Message(",gang,", ",gang,", integer0);
      Message message1 = MessageFactory.createWarningMessage("XJ4", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("WARNING", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createMessage("ZZ8", "ZZ8", (Object) "ZZ8");
      assertEquals(4, Message.DELIVERED);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-4253L));
      Message message0 = MessageFactory.createMessage("<", "<", (Object) "<");
      assertTrue(message0.getIsManaged());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Message message0 = new Message("}?#mf)B!P", "}?#mf)B!P");
      Message message1 = MessageFactory.createMessage("", "", (Object) message0);
      assertEquals(4, Message.DELIVERED);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(65, "IRC");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-2844L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "B9}LE");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Message message0 = new Message("ID", objectArray0[3]);
      Message message1 = MessageFactory.createConnectionDroppedMessage(1, (String) null);
      assertEquals("*", message1.getRecipient());
      assertEquals("DROPPED", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        MessageFactory.getInstance();
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MessageFactory.createWarningMessage("[-5r7ee.*)\\Rqb}C", objectArray0);
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("[-5r7ee.*)\\Rqb}C", objectArray0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("n6", "n6", (Object) "n6");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("", (Object) messageFactory0);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("(C2SA4zLDkICT$E", (Object[]) null);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFactory.createWarningMessage("<0L{v}\n[D`w", (Object[]) null);
      // Undeclared exception!
      try { 
        MessageFactory.createConnectionDroppedMessage(2, "<0L{v}\n[D`w");
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("", (Object) "");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage(">&", (Object[]) null);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
