/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 21:49:02 GMT 2019
 */

package de.progra.charting.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.model.AbstractChartDataModel;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.awt.Choice;
import java.util.HashMap;
import java.util.NoSuchElementException;
import java.util.TreeSet;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackedChartDataModelConstraints_ESTest extends StackedChartDataModelConstraints_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 9975;
      TreeSet<DefaultTableModel> treeSet0 = new TreeSet<DefaultTableModel>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn(480, 9975, 9989, 9997, 9989).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1832, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      doReturn((Number) null).when(abstractChartDataModel0).getValueAt(anyInt() , anyInt());
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeSet<Choice> treeSet0 = new TreeSet<Choice>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn((-1168.1)).when(abstractChartDataModel0).getManualMinimumColumnValue();
      doReturn(treeSet0).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false, true).when(abstractChartDataModel0).isManualScale();
      doReturn(9971, (-332), 9971, (-1), 1798).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1798, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      stackedChartDataModelConstraints0.getMinimumValue();
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      stackedChartDataModelConstraints0.allowManualColScale = true;
      stackedChartDataModelConstraints0.allowManualColScale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, (-1354), false);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumColumnValue();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      HashMap<String, Choice> hashMap0 = new HashMap<String, Choice>();
      defaultChartDataModel0.valuesbyaxis = hashMap0;
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 0, false);
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.maxcolumn = 2.0;
      int int0 = 1;
      boolean boolean0 = true;
      objectChartDataModel0.autoscale = true;
      Float float0 = new Float((-2625.0189562));
      Float.isFinite(1);
      objectChartDataModel0.maxvalue = (Number) float0;
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 1, true);
      objectChartDataModel0.columns = null;
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumColumnValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.ObjectChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn((TreeSet) null).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn(0, 0, 0, 0, 0).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1832, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[0];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      objectChartDataModel0.minvalue = (Number) integer0;
      objectChartDataModel0.autoscale = true;
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 0);
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      objectChartDataModel0.manualscale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      objectChartDataModel0.setMaximumValue(integer0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 225, false);
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TreeSet<Choice> treeSet0 = new TreeSet<Choice>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn(9971).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 0, 1798).when(abstractChartDataModel0).getDataSetNumber();
      doReturn((Number) null).when(abstractChartDataModel0).getValueAt(anyInt() , anyInt());
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TreeSet<Choice> treeSet0 = new TreeSet<Choice>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn(0.0).when(abstractChartDataModel0).getManualMinimumColumnValue();
      doReturn(treeSet0).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false, true).when(abstractChartDataModel0).isManualScale();
      doReturn(9971, (-332), 9971, (-1), 1798).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1798, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      stackedChartDataModelConstraints0.getMinimumValue();
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      stackedChartDataModelConstraints0.allowManualColScale = true;
      stackedChartDataModelConstraints0.allowManualColScale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 480);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 0, false);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumColumnValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 480);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumColumnValue();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 480);
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(editableChartDataModel0, 3);
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn((TreeSet<String>) null).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn(0, 1731, 1832, 1832, (-2753)).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1832, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn(9997, 4299, 9978, 9997, 4299).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1832, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      doReturn((Number) null).when(abstractChartDataModel0).getValueAt(anyInt() , anyInt());
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setMaximumColumnValue((-53.964083));
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, Integer.MIN_VALUE, false);
      stackedChartDataModelConstraints0.allowManualColScale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbstractChartDataModel abstractChartDataModel0 = null;
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 0);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 1112);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[0];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      objectChartDataModel0.minvalue = (Number) integer0;
      objectChartDataModel0.autoscale = true;
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 0);
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      objectChartDataModel0.manualscale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMaximumValue();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 480);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMinimumValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TreeSet<Choice> treeSet0 = new TreeSet<Choice>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn((double)4299).when(abstractChartDataModel0).getManualMinimumColumnValue();
      doReturn(treeSet0).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false, true).when(abstractChartDataModel0).isManualScale();
      doReturn(9971, (-332), 9971, (-1), 1798).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1798, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      stackedChartDataModelConstraints0.getMinimumValue();
      stackedChartDataModelConstraints0.getMinimumColumnValue();
      stackedChartDataModelConstraints0.allowManualColScale = true;
      stackedChartDataModelConstraints0.allowManualColScale = true;
      // Undeclared exception!
      stackedChartDataModelConstraints0.getMinimumValue();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      AbstractChartDataModel abstractChartDataModel0 = mock(AbstractChartDataModel.class, new ViolatedAssumptionAnswer());
      doReturn((-886.2)).when(abstractChartDataModel0).getLastColumnValue();
      doReturn(treeSet0).when(abstractChartDataModel0).getOrderedValues(anyInt());
      doReturn(false).when(abstractChartDataModel0).isAutoScale();
      doReturn(false).when(abstractChartDataModel0).isManualScale();
      doReturn((-1), 9997, (-1), 692, 692).when(abstractChartDataModel0).getDataSetLength(anyInt());
      doReturn(4299, 9997, 1832, 9975, 9971).when(abstractChartDataModel0).getDataSetNumber();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(abstractChartDataModel0, (-2132));
      stackedChartDataModelConstraints0.getMaximumColumnValue();
      Number number0 = stackedChartDataModelConstraints0.getMinimumValue();
      assertEquals(0, number0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints((AbstractChartDataModel) null, 9987, false);
      // Undeclared exception!
      try { 
        stackedChartDataModelConstraints0.getMaximumColumnValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.StackedChartDataModelConstraints", e);
      }
  }
}
