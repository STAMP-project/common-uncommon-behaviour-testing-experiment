/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:05:56 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import jigl.image.ROI;
import jigl.image.types.TiledImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiledImage_ESTest extends TiledImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("jigl.image.types.TiledImage", (-2724), (-2968), 9, (-2724));
      TiledImage tiledImage1 = new TiledImage("jigl.image.types.TiledImage", (-2968), (-2968));
      tiledImage0.Y();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 1429;
      int int1 = 0;
      TiledImage tiledImage0 = new TiledImage("9P-K-eqct(2Oo{D&", 0, 1429, 1429, 0);
      ROI rOI0 = new ROI();
      int int2 = 0;
      int int3 = 3;
      int int4 = 4;
      int int5 = 0;
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      try { 
        tiledImage0.set((-1541), 0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("cvp#H%t9W+fe1=J(", 2963, 9, (-1218), 128);
      tiledImage0.flush();
      ROI rOI0 = new ROI(334, 368, 2083, 3);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage("", (-298), (-298));
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("HLS", 2490, 1334, 2, 2);
      ROI rOI0 = new ROI();
      rOI0.setROI(16, 32, 16, 2);
      tiledImage0.getImage(rOI0);
      tiledImage0.get(2, 2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("jigl.mage.types.TildImage", (-2724), (-2968), (-2724), (-2724));
      TiledImage tiledImage1 = new TiledImage("jigl.mage.types.TildImage", (-2968), (-2968));
      tiledImage0.Y();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("1<-bSjklQvO#v~", 0, (-32768), 0, (-32768));
      int[] intArray0 = new int[3];
      intArray0[0] = (-454);
      intArray0[1] = 0;
      intArray0[2] = 3;
      try { 
        tiledImage0.set(3, (-454), intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, 35);
      tiledImage0.close();
      tiledImage0.Y();
      TiledImage.Tile tiledImage_Tile0 = tiledImage0.new Tile();
      ROI rOI0 = new ROI((-1), (-1), (-1), (-1));
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      TiledImage tiledImage0 = new TiledImage("G3.f$yU4j", 32767, 0, 32767, 32767);
      tiledImage0.flush();
      tiledImage0.X();
      tiledImage0.X();
      try { 
        tiledImage0.get(1225, (-2452));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      int int1 = (-5695);
      TiledImage tiledImage0 = new TiledImage(" ", 0, (-5695), (-5695), (-5695));
      int int2 = (-1679);
      int[] intArray0 = new int[8];
      intArray0[0] = (-5695);
      intArray0[1] = (-5695);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 2;
      TiledImage tiledImage0 = new TiledImage("HLS", 2490, 1334, 2, 2);
      ROI rOI0 = new ROI();
      rOI0.setROI(16, 32, 16, 2);
      tiledImage0.getImage(rOI0);
      tiledImage0.get(2, 2);
      int int1 = 13714;
      try { 
        tiledImage0.get(2, 13714);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "cvp#H%t9W+fe1=J(";
      int int0 = 2083;
      TiledImage tiledImage0 = new TiledImage("cvp#H%t9W+fe1=J(", 2083, 2003, 2083, (-587));
      int[] intArray0 = new int[4];
      intArray0[0] = 2003;
      tiledImage0.flush();
      intArray0[1] = (-587);
      intArray0[2] = 2003;
      intArray0[3] = 3;
      // Undeclared exception!
      try { 
        tiledImage0.set(2003, 3, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, 35);
      tiledImage0.close();
      int int0 = 475;
      int[] intArray0 = new int[0];
      try { 
        tiledImage0.set(14, 34, intArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0/4~1JORBa|b86#", 256, 256, 256, 256);
      tiledImage0.flush();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, 35);
      tiledImage0.close();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      intArray0[1] = 2964;
      intArray0[2] = (-1);
      try { 
        tiledImage0.set((-1), 2964, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("Array is invalid", (-842), (-842), 6, (-842));
      int int0 = 5;
      int[] intArray0 = new int[1];
      tiledImage0.close();
      intArray0[0] = (-842);
      tiledImage0.flush();
      try { 
        tiledImage0.set(0, 5, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 0;
      int int1 = (-16777216);
      TiledImage tiledImage0 = new TiledImage("~c", 0, 0, (-16777216), (-1637));
      tiledImage0.close();
      int[] intArray0 = new int[2];
      intArray0[0] = (-16777216);
      intArray0[1] = (-16777216);
      tiledImage0.close();
      try { 
        tiledImage0.set((-1637), 0, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("DOta5ZL(^3pTr&i", 128, 1385, 5492, (-3918));
      tiledImage0.flush();
      ROI rOI0 = new ROI((-1058), (-1058), 1, 128);
      ROI rOI1 = new ROI();
      rOI1.ux();
      rOI1.lx();
      rOI1.X();
      rOI1.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("qG<Qs/%hSKT)i3n-xA", 0, 0, 32, 860);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("cvp#H%t9W+fe1=J(", 2083, 2003, 0, (-590));
      ROI rOI0 = new ROI(368, 368, 368, 368);
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      rOI0.ly();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, 35);
      tiledImage0.close();
      ROI rOI0 = new ROI(2640, 53, 2640, 2640);
      rOI0.X();
      ROI rOI1 = new ROI(1, 1, 497, 256);
      rOI1.Y();
      rOI1.uy();
      rOI0.ly();
      try { 
        tiledImage0.getImage(rOI1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage("jigl.image.types.TledImage", 16, (-2724), 16, 16);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Negative position: -130736
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("cvp#H%t9W+fe1=J(", 860, 0, 753, 0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 2003;
      int int1 = (-587);
      TiledImage tiledImage0 = new TiledImage("cvp#H%t9W+fe1=J(", 2083, 2003, 2083, (-587));
      int[] intArray0 = new int[4];
      intArray0[2] = 2003;
      intArray0[3] = 3;
      // Undeclared exception!
      try { 
        tiledImage0.set(2003, 3, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage((String) null, (-298), (-298));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0/4~1JORBa|b86#", 256, 256, 256, 256);
      try { 
        tiledImage0.get(256, (-298));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, (-823));
      tiledImage0.close();
      TiledImage tiledImage1 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 1219, 255);
      tiledImage1.X();
      ROI rOI0 = new ROI();
      tiledImage1.getImage(rOI0);
      tiledImage1.Y();
      TiledImage.Tile tiledImage_Tile0 = tiledImage1.new Tile();
      String string0 = "\\";
      // Undeclared exception!
      try { 
        tiledImage_Tile0.write(1219);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage$Tile", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "0\"^*-Qrb\"{J]WS2_";
      TiledImage tiledImage0 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 35, 35, 35, (-823));
      tiledImage0.close();
      TiledImage tiledImage1 = new TiledImage("0\"^*-Qrb\"{J]WS2_", 1219, 255);
      tiledImage1.X();
      int int0 = 6;
      int[] intArray0 = new int[8];
      intArray0[0] = 1219;
      intArray0[1] = 1219;
      intArray0[2] = (-1070);
      intArray0[3] = 35;
      intArray0[4] = 8;
      intArray0[5] = (-823);
      intArray0[6] = 475;
      intArray0[7] = 35;
      try { 
        tiledImage1.set(6, 475, intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TiledImage tiledImage0 = new TiledImage("G3.f$yU4j", 32767, 0, 32767, 32767);
      tiledImage0.flush();
      ROI rOI0 = new ROI(368, 368, 368, 368);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        tiledImage0.getImage(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.TiledImage", e);
      }
  }
}
