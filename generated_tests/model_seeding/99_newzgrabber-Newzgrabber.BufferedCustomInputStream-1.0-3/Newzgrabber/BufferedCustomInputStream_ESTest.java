/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 14:06:17 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.BufferedCustomInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BufferedCustomInputStream_ESTest extends BufferedCustomInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      bufferedCustomInputStream0.setRemoveCarriages(false);
      bufferedCustomInputStream0.setTempfile("p9T6j~It0`O");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      bufferedCustomInputStream0.ready();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p9T6j~It0`O";
      stringArray0[1] = "L4%w?5|=@'ydkYlE:";
      bufferedCustomInputStream0.read();
      bufferedCustomInputStream0.readByteLine();
      bufferedCustomInputStream0.readByteLine();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-1401);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, true);
      bufferedCustomInputStream1.closeTemp();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-1401));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 13);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pushbackInputStream0, 13, false);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, true);
      bufferedCustomInputStream1.close();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      bufferedCustomInputStream0.setTempfile("p9T6j~It0`O");
      bufferedCustomInputStream0.ready();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p9T6j~It0`O";
      stringArray0[1] = "L4%w?5|=@'ydkYlE:";
      BufferedCustomInputStream.main(stringArray0);
      bufferedCustomInputStream0.ready();
      bufferedCustomInputStream0.readLine();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      sequenceInputStream0.read();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0, 1, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)13, false);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      bufferedCustomInputStream1.mark(2095);
      BufferedCustomInputStream bufferedCustomInputStream2 = new BufferedCustomInputStream(sequenceInputStream0, false);
      bufferedCustomInputStream2.read();
      bufferedCustomInputStream1.readByteLine();
      bufferedCustomInputStream1.readByteLine();
      bufferedCustomInputStream2.readByteLine();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ">W(#0A?;";
      stringArray0[3] = "";
      BufferedCustomInputStream.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      bufferedCustomInputStream0.setTempfile("L4%w?5|=@'ydkYlE:");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "L4%w?5|=@'ydkYlE:";
      stringArray0[1] = "L4%w?5|=@'ydkYlE:";
      stringArray0[2] = "L4%w?5|=@'ydkYlE:";
      stringArray0[3] = "L4%w?5|=@'ydkYlE:";
      stringArray0[4] = "L4%w?5|=@'ydkYlE:";
      stringArray0[5] = "L4%w?5|=@'ydkYlE:";
      BufferedCustomInputStream.main(stringArray0);
      bufferedCustomInputStream0.ready();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pushbackInputStream0);
      bufferedCustomInputStream0.readByteLine();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[1];
      BufferedCustomInputStream.main(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 2246);
      bufferedCustomInputStream1.setTempfile("L4%w?5|=@'ydkYlE:");
      bufferedCustomInputStream1.ready();
      bufferedCustomInputStream0.readLine();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[1];
      BufferedCustomInputStream.main(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      bufferedCustomInputStream0.setTempfile("t9r3`AQ");
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 2246);
      bufferedCustomInputStream1.close();
      bufferedCustomInputStream1.ready();
      bufferedCustomInputStream0.readLine();
      bufferedCustomInputStream1.close();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "WO";
      BufferedCustomInputStream.main(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      bufferedCustomInputStream0.setTempfile("WO");
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(bufferedCustomInputStream0, 2246);
      bufferedCustomInputStream1.setTempfile("L4%w?5|=@'ydkYlE:");
      bufferedCustomInputStream1.ready();
      bufferedCustomInputStream0.readLine();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)67;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-34);
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte) (-71);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = null;
      try {
        bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      bufferedCustomInputStream0.setTempfile("p9T6j~It0`O");
      bufferedCustomInputStream0.ready();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "p9T6j~It0`O";
      stringArray0[1] = "L4%w?5|=@'ydkYlE:";
      bufferedCustomInputStream0.readByteLine();
      BufferedCustomInputStream.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[1];
      BufferedCustomInputStream.main(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(pipedInputStream0);
      bufferedCustomInputStream0.setTempfile("t9r3`AQ");
      BufferedCustomInputStream bufferedCustomInputStream1 = new BufferedCustomInputStream(pipedInputStream0, 2246);
      bufferedCustomInputStream0.close();
      bufferedCustomInputStream1.setTempfile("t9r3`AQ");
      bufferedCustomInputStream1.ready();
      bufferedCustomInputStream1.readLine();
      bufferedCustomInputStream0.close();
      bufferedCustomInputStream0.closeTemp();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-77);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(sequenceInputStream0);
      byteArrayInputStream0.read(byteArray0);
      bufferedCustomInputStream0.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      BufferedCustomInputStream.main(stringArray0);
      byteArrayInputStream0.read(byteArray0);
      bufferedCustomInputStream0.readByteLine();
      bufferedCustomInputStream0.readByteLine();
      bufferedCustomInputStream0.readByteLine();
  }
}
