/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:26:54 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.CoordSystem;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.EditableDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.text.DecimalFormat;
import java.util.NoSuchElementException;
import javax.swing.JScrollPane;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CoordSystem_ESTest extends CoordSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "!^N(zBzwfL1");
      coordSystem0.getChartDataModelConstraints((-1588));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[0];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, true, true);
      coordSystem0.isPaintAltTick();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getPointToPixelTranslator(2147483569);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-1604), false);
      Axis axis0 = new Axis(15, stackedChartDataModelConstraints0);
      coordSystem0.setSecondYAxis(axis0);
      coordSystem0.setBounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.getFirstYAxis();
      coordSystem0.setFirstYAxis(axis0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      coordSystem0.setTopMargin((-1500));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[0];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, true, true);
      coordSystem0.setRightMargin(46);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      Axis axis0 = coordSystem0.xaxis;
      coordSystem0.setSecondYAxis(axis0);
      coordSystem0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        coordSystem0.render(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      DecimalFormat decimalFormat0 = coordSystem0.getXDecimalFormat();
      CoordSystem coordSystem1 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, true);
      coordSystem1.isPaintAltTick();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      coordSystem0.isDrawArrows();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      coordSystem0.getYAxisUnit();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      coordSystem0.getXAxisUnit();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setBounds(rectangle0);
      coordSystem0.getXAxis();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = new Rectangle(Integer.MIN_VALUE, Integer.MIN_VALUE, 0, (-620));
      coordSystem0.setBounds(rectangle0);
      coordSystem0.getTransform(0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getTopMargin();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.yaxis;
      axis0.length = (-1500);
      coordSystem0.setSecondYAxis(axis0);
      coordSystem0.getSecondYAxis();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getRightMargin();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getLeftMargin();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setLeftMargin((-986));
      coordSystem0.getLeftMargin();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("");
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[0];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, false, true, true);
      coordSystem0.setLeftMargin(1);
      coordSystem0.getInnerBounds();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = new Rectangle(Integer.MIN_VALUE, Integer.MIN_VALUE, 0, (-620));
      coordSystem0.setBounds(rectangle0);
      Rectangle rectangle1 = coordSystem0.getInnerBounds();
      assertEquals((-2.1474839635E9), rectangle1.getCenterY(), 0.01);
      assertEquals((-2.1474836395E9), rectangle1.getCenterX(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      coordSystem0.setBounds(rectangle0);
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(2, axis0.getAlignment());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals((-44), axis0.getLength());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setLeftMargin((-1));
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals((-4.6116860141324206E18), affineTransform0.getDeterminant(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertEquals(2.147483617E9, affineTransform0.getTranslateY(), 0.01);
      assertEquals((-1.0), affineTransform0.getTranslateX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = new Rectangle(0, 20, 0, 0);
      coordSystem0.setBounds(rectangle0);
      Axis axis0 = coordSystem0.xaxis;
      coordSystem0.setSecondYAxis(axis0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(1);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals((-2209.0), affineTransform0.getDeterminant(), 0.01);
      assertEquals(32.0, affineTransform0.getTranslateX(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals((-6.0), affineTransform0.getTranslateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.yaxis;
      axis0.length = (-1500);
      coordSystem0.setSecondYAxis(axis0);
      assertEquals(2, axis0.getAlignment());
      
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(1);
      assertEquals(2.147483617E9, affineTransform0.getTranslateY(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(3.2212254705E12, affineTransform0.getDeterminant(), 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(50.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      int int0 = coordSystem0.getBottomMargin();
      assertEquals(30, int0);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, " Ypc c7# I", " Ypc c7# I");
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.setBounds((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      coordSystem0.font = null;
      // Undeclared exception!
      try { 
        coordSystem0.setBounds(rectangle0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null font passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      coordSystem0.setBounds(rectangle0);
      coordSystem0.setYAxisUnit("");
      // Undeclared exception!
      try { 
        coordSystem0.render(graphics2D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.paintDefault(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "eN(1Qo", "eN(1Qo");
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(15);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, decimalFormat0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null, "x", "x");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CoordSystem coordSystem0 = null;
      try {
        coordSystem0 = new CoordSystem((ChartDataModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getTransform(0);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(3098);
      coordSystem0.setTransform(affineTransform0, 0);
      assertEquals(2.147483647E9, affineTransform0.getScaleX(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(-0.0, affineTransform0.getDeterminant(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(50.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "2.", "sans");
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertNotNull(axis0);
      
      coordSystem0.setXAxis(axis0);
      assertEquals("sans", coordSystem0.getYAxisUnit());
      assertEquals("2.", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(2, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.getSecondYAxis();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNull(axis0);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Font font0 = coordSystem0.getFont();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(font0.isPlain());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("sans", font0.getName());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(9.0F, font0.getSize2D(), 0.01F);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      FontRenderContext fontRenderContext0 = coordSystem0.getFontRenderContext();
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(fontRenderContext0.isAntiAliased());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "eN(1Qo", "eN(1Qo");
      coordSystem0.setBottomMargin(3353);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("eN(1Qo", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("eN(1Qo", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.getXAxis();
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, axis0.getAlignment());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      String string0 = coordSystem0.getYAxisUnit();
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", string0);
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      String string0 = coordSystem0.getXAxisUnit();
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", string0);
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getYDecimalFormat();
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "eN(1Qo", "eN(1Qo");
      coordSystem0.setXAxisUnit("de.progra.charting.CoordSystem");
      assertEquals("de.progra.charting.CoordSystem", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(20);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertNull(chartDataModelConstraints0);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "de.progra.charting.test.GraphFrame");
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(0);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("de.progra.charting.test.GraphFrame", coordSystem0.getYAxisUnit());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertNotNull(chartDataModelConstraints0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      ChartDataModelConstraints chartDataModelConstraints0 = coordSystem0.getChartDataModelConstraints(1);
      assertNotNull(chartDataModelConstraints0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getPointToPixelTranslator((-199));
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      coordSystem0.setBounds(rectangle0);
      // Undeclared exception!
      try { 
        coordSystem0.render(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getTransform(15);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getTransform(1);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(1, 0.0, 0.0);
      coordSystem0.setTransform(affineTransform0, 1);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      AffineTransform affineTransform0 = coordSystem0.getDefaultTransform(0);
      coordSystem0.setTransform(affineTransform0, (-2646));
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, affineTransform0.getShearX(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(50.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals((-4.6116860141324206E18), affineTransform0.getDeterminant(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(2.147483617E9, affineTransform0.getTranslateY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(boolean0);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "** Error creating the nevilletest.png file, showing the Neville Interpolation.", "** Error creating the nevilletest.png file, showing the Neville Interpolation.");
      assertTrue(coordSystem0.isPaintLabels());
      
      coordSystem0.setPaintLabels(false);
      boolean boolean0 = coordSystem0.isPaintLabels();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, true, false, false);
      boolean boolean0 = coordSystem0.isDrawArrows();
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertFalse(coordSystem0.isPaintOnlyTick());
      assertFalse(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(boolean0);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystem0.getDefaultTransform(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "1999", "1999");
      Dimension dimension0 = coordSystem0.getPreferredSize();
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("1999", coordSystem0.getXAxisUnit());
      assertEquals("1999", coordSystem0.getYAxisUnit());
      assertEquals(Integer.MIN_VALUE, dimension0.width);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(Integer.MIN_VALUE, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (DecimalFormat) null, true, true, false);
      boolean boolean0 = coordSystem0.isPaintOnlyTick();
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(boolean0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "** Error creating the nevilletest.png file, showing the Neville Interpolation.", "** Error creating the nevilletest.png file, showing the Neville Interpolation.");
      boolean boolean0 = coordSystem0.isPaintLabels();
      assertTrue(boolean0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("** Error creating the nevilletest.png file, showing the Neville Interpolation.", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("** Error creating the nevilletest.png file, showing the Neville Interpolation.", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("de.progra.charting.test.ImageFilter", 20, 0);
      coordSystem0.setFont(font0);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.setXAxis((Axis) null);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "", "");
      coordSystem0.setFirstYAxis((Axis) null);
      Axis axis0 = coordSystem0.getFirstYAxis();
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(axis0);
      assertEquals("", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Axis axis0 = coordSystem0.xaxis;
      coordSystem0.setSecondYAxis(axis0);
      Axis axis1 = coordSystem0.getSecondYAxis();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertNotNull(axis1);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals(1, axis1.getAlignment());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getBounds();
      coordSystem0.setBounds(rectangle0);
      AffineTransform affineTransform0 = coordSystem0.getTransform(0);
      assertEquals(32.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(2.147483621E9, affineTransform0.getTranslateY(), 0.01);
      assertEquals((-4.6116858251538616E18), affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getShearY(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertNotNull(affineTransform0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isDrawArrows());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      coordSystem0.getPointToPixelTranslator(0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
  }
}
