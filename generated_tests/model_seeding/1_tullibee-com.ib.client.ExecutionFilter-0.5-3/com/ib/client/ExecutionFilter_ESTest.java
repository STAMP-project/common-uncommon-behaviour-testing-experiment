/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 16:10:36 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.ExecutionFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExecutionFilter_ESTest extends ExecutionFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(14, "", "", "l", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(14, "", "", "", "", "", "+\"cs");
      executionFilter1.m_symbol = "l";
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(14, executionFilter1.m_clientId);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter((-1), ":", ":", ":", ":", ":", ":");
      ExecutionFilter executionFilter1 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(0, executionFilter1.m_clientId);
      assertEquals((-1), executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      ExecutionFilter executionFilter1 = new ExecutionFilter();
      // Undeclared exception!
      try { 
        executionFilter0.equals(executionFilter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(14, "", "", "l", "", "", "");
      // Undeclared exception!
      try { 
        executionFilter0.equals("com.ib.client.ExecutionFilter");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.ib.client.ExecutionFilter
         //
         verifyException("com.ib.client.ExecutionFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(2553, "k", "k", "k", "k", "k", "k");
      ExecutionFilter executionFilter1 = new ExecutionFilter(2553, "k", "k", "k", "k", "k", "k");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(2553, executionFilter1.m_clientId);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(14, "", "", "l", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(14, "", "", "", "", "", "+\"cs");
      executionFilter1.m_symbol = "l";
      executionFilter1.m_exchange = "%}'H";
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertEquals(14, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(14, "", "", "l", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(14, "", "", "", "", "", "+\"cs");
      executionFilter1.m_symbol = "l";
      executionFilter1.m_secType = "1tYSKQ8\"3aYS0275";
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertFalse(boolean0);
      assertEquals(14, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter((-3), "", "", "l", "l", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter((-3), "", "", "", "l", "", "");
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertFalse(executionFilter0.equals((Object)executionFilter1));
      assertEquals((-3), executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "", (String) null, "l", "", "m&6V", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", (String) null, "m&6V", "", "", "+os");
      executionFilter0.m_time = "_m!aB&X,'\"@$";
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(0, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter((-22), "k", "k", "l", "k", "k", "l");
      ExecutionFilter executionFilter1 = new ExecutionFilter((-22), "l", "l", "k", "k", "k", "l");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals((-22), executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(14, "", "", "l", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(0, executionFilter1.m_clientId);
      assertEquals(14, executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter((-1), ":", ":", ":", ":", ":", ":");
      boolean boolean0 = executionFilter0.equals(executionFilter0);
      assertTrue(boolean0);
      assertEquals((-1), executionFilter0.m_clientId);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0, executionFilter0.m_clientId);
  }
}
