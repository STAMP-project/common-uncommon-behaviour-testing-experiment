/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 17:04:14 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.SortFilterModel;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.UnaryOperator;
import javax.swing.Action;
import javax.swing.JCheckBox;
import javax.swing.JLayeredPane;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortFilterModel_ESTest extends SortFilterModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      int int1 = (-2664);
      int int2 = 887;
      defaultTableModel0.fireTableRowsUpdated((-804), 887);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      JCheckBox jCheckBox0 = new JCheckBox("CANCEL");
      int int3 = 599;
      boolean boolean0 = false;
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      Class<AWTEventMulticaster> class0 = AWTEventMulticaster.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((-5911)).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel1 = null;
      try {
        sortFilterModel1 = new SortFilterModel(tableModel0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(locale_FilteringMode0, 6, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2440, 2440);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      sortFilterModel0.fireTableDataChanged();
      int int0 = (-1696);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort((-1696));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20).when(tableModel0).getColumnCount();
      doReturn(3, 20).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.getColumnCount();
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      TableModelListener[] tableModelListenerArray0 = sortFilterModel0.getTableModelListeners();
      sortFilterModel1.getValueAt(0, 2);
      StyleContext.getDefaultStyleContext();
      sortFilterModel1.getValueAt(1, 20);
      Object object0 = new Object();
      sortFilterModel0.getValueAt(1, 20);
      sortFilterModel0.getValueAt(559, (-368));
      Object object1 = new Object();
      int int0 = 1;
      sortFilterModel0.getValueAt((-2098), 3093);
      sortFilterModel0.getValueAt(3, 20);
      DefaultTableModel defaultTableModel0 = null;
      try {
        defaultTableModel0 = new DefaultTableModel(tableModelListenerArray0, (-368));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -368
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getRowCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.mouseExited((MouseEvent) null);
      sortFilterModel0.getColumnCount();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt(538, 538);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable((-2492));
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt((-2636), (-2636));
      sortFilterModel0.getColumnName((-2492));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      sortFilterModel0.getValueAt(2468, 2517);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) defaultTableModel0;
      objectArray0[1] = (Object) null;
      sortFilterModel0.getValueAt(20, 0);
      objectArray0[2] = null;
      objectArray0[3] = (Object) defaultTableModel0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) sortFilterModel0;
      objectArray0[6] = null;
      objectArray0[7] = (Object) defaultTableModel0;
      objectArray0[8] = (Object) sortFilterModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, 2468);
      Vector<Locale.FilteringMode> vector0 = new Vector<Locale.FilteringMode>();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel((Vector) null, vector0);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel2, 3, 4134);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 1);
      defaultTableModel0.getColumnClass(1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.fireTableCellUpdated(1, 1);
      sortFilterModel0.fireTableCellUpdated(1, (-1100));
      sortFilterModel0.setSort(false);
      sortFilterModel0.sort(300);
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("Center", true);
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jRadioButtonMenuItem0, 1, (-1373L), (-2460), 1, 300, 1, false, (-2028));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 1);
      defaultTableModel0.getTableModelListeners();
      defaultTableModel0.getColumnClass(1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mousePressed((MouseEvent) null);
      sortFilterModel0.mouseReleased((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<AWTEventMulticaster> vector0 = new Vector<AWTEventMulticaster>();
      int int0 = 840;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 840);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      UnaryOperator<AWTEventMulticaster> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable((-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 2560);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnName(1);
      boolean boolean0 = false;
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent((Component) null, 1, 0L, 1463, 1, 1, 1, (-993), 0, false, 1463, 1, 1463, 0.0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      defaultTableModel0.fireTableRowsUpdated((-804), 887);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      JCheckBox jCheckBox0 = new JCheckBox("CANCEL");
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tableModel0).getColumnClass(anyInt());
      doReturn(0).when(tableModel0).getColumnCount();
      doReturn(0, 0).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel1 = new SortFilterModel(tableModel0);
      sortFilterModel1.getColumnCount();
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
      sortFilterModel2.getColumnClass(4910);
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent(jCheckBox0, (-2664), 0, (-2664), 0, 599, 599, 0, 887, false, 0, (-2483), 599, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      sortFilterModel0.getValueAt(2468, 2517);
      sortFilterModel0.setSort(false);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort((-115));
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2, 0);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt(1, 5);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = null;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, 20);
      Vector<Locale.FilteringMode> vector0 = new Vector<Locale.FilteringMode>();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(vector0, vector0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(integer0, 1, 4134);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4134 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.isCellEditable((-1296), (-1296));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt(1, 0);
      sortFilterModel0.updateTable();
      sortFilterModel0.getColumnClass((-1296));
      sortFilterModel0.updateTable();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.FilteringMode.values();
      sortFilterModel0.sortTable(1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 2440;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2440, 2440);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int1 = 543;
      sortFilterModel0.isCellEditable(30, 543);
      JPopupMenu jPopupMenu0 = new JPopupMenu("");
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      jPopupMenu0.add((Action) styledEditorKit_BoldAction0);
      sortFilterModel0.fireTableDataChanged();
      int int2 = (-1219);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort((-1696));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = (-1);
      JTable jTable0 = new JTable(defaultTableModel0);
      sortFilterModel0.setTable(jTable0);
      int int1 = 0;
      JTable jTable1 = null;
      try {
        jTable1 = new JTable((-1), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnName(620);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<Locale.FilteringMode> vector0 = new Vector<Locale.FilteringMode>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = (-2840);
      sortFilterModel0.fireTableRowsInserted((-2840), (-2840));
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2440, 2440);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.isCellEditable(30, 543);
      JPopupMenu jPopupMenu0 = new JPopupMenu("");
      sortFilterModel0.setValueAt(jPopupMenu0, 30, 0);
      JCheckBox jCheckBox0 = new JCheckBox("");
      defaultTableModel0.addColumn((Object) jCheckBox0);
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent(jPopupMenu0, 2440, (-1069L), 2440, 543, 2440, 0, 1307, 0, false, 1479, 1334, 108, 1.0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.fireTableRowsUpdated((-2664), 0);
      sortFilterModel0.sortTable(0);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 0, (-1723));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, (-1458));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = new Integer(237);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel1.getValueAt(0, 2);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextArea jTextArea0 = new JTextArea(defaultStyledDocument0);
      sortFilterModel1.mouseEntered((MouseEvent) null);
      sortFilterModel1.mouseEntered((MouseEvent) null);
      assertFalse(sortFilterModel1.equals((Object)sortFilterModel0));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][4];
      Object[] objectArray1 = new Object[9];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      Object object3 = new Object();
      objectArray1[3] = object3;
      Object object4 = new Object();
      objectArray1[4] = object4;
      Object object5 = new Object();
      objectArray1[5] = object5;
      Object object6 = new Object();
      objectArray1[6] = object6;
      Object object7 = new Object();
      objectArray1[7] = object7;
      Object object8 = new Object();
      objectArray1[8] = object8;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      objectArray2[0] = object5;
      objectArray2[1] = object7;
      objectArray2[2] = object6;
      objectArray2[3] = object7;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = object7;
      objectArray3[1] = object3;
      objectArray3[2] = object0;
      objectArray3[3] = object1;
      objectArray3[4] = object6;
      Object object9 = new Object();
      objectArray3[5] = object9;
      objectArray3[6] = object1;
      objectArray3[7] = object8;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = object5;
      objectArray0[3] = objectArray4;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray4);
      defaultTableModel0.getColumnName(0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort(0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Stack<Object> stack0 = new Stack<Object>();
      defaultTableModel0.setDataVector((Vector) stack0, (Vector) stack0);
      defaultTableModel0.isCellEditable((-1296), (-1296));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnClass((-1514));
      defaultTableModel0.isCellEditable(2, 0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable((-1296), (-1296));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1296
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      assertFalse(sortFilterModel1.equals((Object)sortFilterModel0));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel((TableModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(tableModel0).getColumnCount();
      doReturn(0, 0).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.getColumnCount();
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      Vector<Object> vector0 = new Vector<Object>();
      sortFilterModel0.getColumnCount();
      JTable jTable0 = new JTable(vector0, vector0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      JTable jTable1 = jTableHeader0.getTable();
      jTable1.clearSelection();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      TableColumnModel tableColumnModel0 = mock(TableColumnModel.class, new ViolatedAssumptionAnswer());
      doReturn((ListSelectionModel) null).when(tableColumnModel0).getSelectionModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      JTable jTable2 = null;
      try {
        jTable2 = new JTable(defaultTableModel0, tableColumnModel0, mockDefaultListSelectionModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[][] objectArray0 = new Object[4][4];
      Object[] objectArray1 = new Object[9];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      Object object3 = new Object();
      objectArray1[3] = object3;
      Object object4 = new Object();
      objectArray1[4] = object4;
      Object object5 = new Object();
      objectArray1[5] = object5;
      Object object6 = new Object();
      objectArray1[6] = object6;
      Object object7 = new Object();
      objectArray1[7] = object7;
      Object object8 = new Object();
      objectArray1[8] = object8;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      objectArray2[0] = object5;
      objectArray2[1] = object7;
      objectArray2[2] = object6;
      objectArray2[3] = object7;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = object7;
      objectArray3[1] = object3;
      objectArray3[2] = object0;
      objectArray3[3] = object1;
      objectArray3[4] = object6;
      Object object9 = new Object();
      objectArray3[5] = object9;
      objectArray3[6] = object1;
      objectArray3[7] = object8;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = object5;
      objectArray0[3] = objectArray4;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray4);
      defaultTableModel0.getColumnName(0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      boolean boolean0 = sortFilterModel0.isCellEditable(0, (-1252));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
      int int0 = 0;
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(0);
      Class class0 = sortFilterModel0.getColumnClass(1503);
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getTableModelListeners();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1, 1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
  }
}
