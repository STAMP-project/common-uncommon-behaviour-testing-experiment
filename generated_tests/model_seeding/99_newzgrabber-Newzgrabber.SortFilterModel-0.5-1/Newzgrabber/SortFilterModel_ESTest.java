/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:03:43 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.SortFilterModel;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.time.chrono.ChronoLocalDate;
import java.time.temporal.ChronoUnit;
import java.util.LinkedHashSet;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JCheckBox;
import javax.swing.JFormattedTextField;
import javax.swing.JLayer;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortFilterModel_ESTest extends SortFilterModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      sortFilterModel0.fireTableCellUpdated((-1552), 0);
      sortFilterModel0.getColumnName((-428));
      JTable jTable0 = new JTable((TableModel) null);
      // Undeclared exception!
      try { 
        jTable0.columnAtPoint((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<JCheckBox> vector0 = new Vector<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
      sortFilterModel0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel1.sort(4320);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable((-1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.isCellEditable(709, 709);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.getTableModelListeners();
      FileSystemHandling.shouldAllThrowIOExceptions();
      sortFilterModel1.getValueAt(693, 709);
      defaultTableModel0.fireTableCellUpdated((-2002), 709);
      Stack<ChronoLocalDate> stack0 = new Stack<ChronoLocalDate>();
      JTable jTable0 = new JTable((Vector) null, stack0);
      defaultTableModel0.removeTableModelListener(jTable0);
      sortFilterModel1.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      jTableHeader0.getTable();
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setSort(true);
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<JCheckBox> stack0 = new Stack<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<JCheckBox> vector0 = new Vector<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, (-346), 775);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -346
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<JCheckBox> stack0 = new Stack<JCheckBox>();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) stack0;
      objectArray0[2] = (Object) stack0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.getColumnClass(709);
      Vector<Integer> vector0 = new Vector<Integer>();
      JTable jTable0 = new JTable(defaultTableModel0);
      defaultTableModel0.removeTableModelListener(jTable0);
      vector0.spliterator();
      defaultTableModel0.addRow(vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      sortFilterModel0.getColumnClass(3);
      sortFilterModel0.isCellEditable(3, (-2278));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[][] objectArray0 = new Object[7][3];
      Object[] objectArray1 = new Object[2];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt((-557), (-557));
      objectArray1[0] = null;
      sortFilterModel0.getValueAt((-557), 0);
      objectArray1[1] = null;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[3];
      objectArray2[0] = (Object) defaultTableModel0;
      objectArray2[1] = null;
      objectArray2[2] = (Object) sortFilterModel0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[9];
      objectArray3[0] = (Object) sortFilterModel0;
      objectArray3[1] = (Object) defaultTableModel0;
      sortFilterModel0.getValueAt(0, (-557));
      objectArray3[2] = null;
      sortFilterModel0.getValueAt((-557), (-2154));
      objectArray3[3] = null;
      objectArray3[4] = (Object) sortFilterModel0;
      objectArray3[5] = (Object) sortFilterModel0;
      objectArray3[6] = null;
      objectArray3[7] = (Object) sortFilterModel0;
      objectArray3[8] = (Object) defaultTableModel0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[9];
      objectArray4[0] = null;
      objectArray4[1] = null;
      objectArray4[2] = null;
      objectArray4[3] = (Object) defaultTableModel0;
      objectArray4[4] = null;
      objectArray4[5] = (Object) defaultTableModel0;
      objectArray4[6] = null;
      objectArray4[7] = (Object) defaultTableModel0;
      objectArray4[8] = null;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[1];
      objectArray5[0] = (Object) sortFilterModel0;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[9];
      sortFilterModel0.getValueAt((-1051), 0);
      objectArray6[0] = null;
      objectArray6[1] = null;
      objectArray6[2] = null;
      objectArray6[3] = null;
      objectArray6[4] = null;
      sortFilterModel0.getValueAt((-2154), (-1));
      objectArray6[5] = null;
      objectArray6[6] = null;
      objectArray6[7] = (Object) sortFilterModel0;
      objectArray6[8] = null;
      objectArray0[5] = objectArray6;
      Object[] objectArray7 = new Object[9];
      objectArray7[0] = null;
      objectArray7[1] = null;
      sortFilterModel0.getValueAt((-2154), 1979);
      objectArray7[2] = null;
      objectArray7[3] = null;
      objectArray7[4] = null;
      objectArray7[5] = (Object) sortFilterModel0;
      objectArray7[6] = (Object) defaultTableModel0;
      objectArray7[7] = (Object) sortFilterModel0;
      objectArray7[8] = null;
      objectArray0[6] = objectArray7;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray2);
      // Undeclared exception!
      try { 
        defaultTableModel1.getValueAt(0, (-2154));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<JCheckBox> stack0 = new Stack<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel((TableModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<JCheckBox> vector0 = new Vector<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(1912);
      sortFilterModel0.getColumnClass(1912);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.getRowCount();
      sortFilterModel0.mouseReleased((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModel0.fireTableChanged((TableModelEvent) null);
      vector0.setSize(2);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
      LinkedHashSet<JCheckBox> linkedHashSet0 = new LinkedHashSet<JCheckBox>();
      vector0.removeAll(linkedHashSet0);
      sortFilterModel0.setSort(true);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      Object[][] objectArray1 = new Object[2][2];
      objectArray1[0] = objectArray0;
      Object[] objectArray2 = new Object[4];
      objectArray2[0] = object0;
      objectArray2[1] = (Object) defaultTableModel0;
      objectArray2[2] = object0;
      objectArray2[3] = (Object) defaultTableModel0;
      objectArray1[1] = objectArray2;
      defaultTableModel0.setDataVector(objectArray1, objectArray0);
      defaultTableModel0.getColumnClass(709);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      JCheckBox jCheckBox0 = new JCheckBox("");
      defaultTableModel1.addColumn((Object) jCheckBox0);
      defaultTableModel1.addColumn((Object) "");
      defaultTableModel1.addColumn((Object) "");
      defaultTableModel1.addColumn((Object) jCheckBox0);
      defaultTableModel1.fireTableDataChanged();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel1);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.getRowCount();
      TableModelEvent tableModelEvent0 = new TableModelEvent(defaultTableModel1);
      sortFilterModel0.getValueAt(0, 0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel1.setValueAt(sortFilterModel0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnClass(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(979);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Stack<Object> stack0 = new Stack<Object>();
      defaultTableModel0.setColumnIdentifiers((Vector) stack0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(709);
      sortFilterModel0.fireTableRowsUpdated(709, 707);
      sortFilterModel0.getValueAt(3, 1015);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 670);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1, 1);
      defaultTableModel0.fireTableStructureChanged();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnClass(1);
      sortFilterModel0.getRowCount();
      sortFilterModel0.updateTable();
      sortFilterModel0.mousePressed((MouseEvent) null);
      sortFilterModel0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      ChronoUnit chronoUnit0 = ChronoUnit.ERAS;
      stack0.add((Object) chronoUnit0);
      defaultTableModel0.getColumnName((-1));
      stack0.removeAllElements();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.getColumnName((-1));
      defaultTableModel0.setColumnIdentifiers((Object[]) null);
      sortFilterModel0.getValueAt(2133, 2133);
      sortFilterModel0.getColumnClass(610);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      ListSelectionModel listSelectionModel0 = defaultTableColumnModel0.getSelectionModel();
      Object[][] objectArray0 = new Object[3][0];
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) listSelectionModel0;
      objectArray1[1] = (Object) listSelectionModel0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[0];
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) defaultTableColumnModel0;
      objectArray3[1] = (Object) defaultTableColumnModel0;
      objectArray3[2] = (Object) listSelectionModel0;
      objectArray3[3] = (Object) listSelectionModel0;
      objectArray0[2] = objectArray3;
      JTable jTable0 = new JTable(objectArray0, objectArray2);
      listSelectionModel0.addListSelectionListener(jTable0);
      JTable jTable1 = new JTable(defaultTableModel0, (TableColumnModel) null, listSelectionModel0);
      sortFilterModel0.setTable(jTable1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) vector0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 4060);
      defaultTableModel0.fireTableStructureChanged();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = 1846;
      Class class0 = sortFilterModel0.getColumnClass(int0);
      MouseEvent mouseEvent0 = null;
      sortFilterModel0.mouseClicked(mouseEvent0);
      sortFilterModel0.getRowCount();
      int int1 = 0;
      int int2 = 1;
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(class0, int1, int2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.fireTableRowsInserted((-1030), (-1494));
      Stack<ChronoUnit> stack0 = new Stack<ChronoUnit>();
      ChronoUnit chronoUnit0 = ChronoUnit.ERAS;
      stack0.add(chronoUnit0);
      defaultTableModel0.insertRow(0, (Vector) stack0);
      TableModelListener[] tableModelListenerArray0 = sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(0);
      defaultTableModel0.addColumn((Object) "v", (Object[]) tableModelListenerArray0);
      sortFilterModel0.setSort(false);
      sortFilterModel0.getValueAt((-1494), (-1030));
      sortFilterModel0.sortTable((-1494));
      sortFilterModel0.getColumnName((-1030));
      sortFilterModel0.updateTable();
      sortFilterModel0.updateTable();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 708);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      TableColumnModel tableColumnModel0 = mock(TableColumnModel.class, new ViolatedAssumptionAnswer());
      JTableHeader jTableHeader0 = new JTableHeader(tableColumnModel0);
      jTableHeader0.getTable();
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane((-1022), (-1022));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][0];
      Object[] objectArray1 = new Object[5];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray1[1] = object0;
      Vector<Object> vector0 = new Vector<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 671);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt(671, 671);
      objectArray1[2] = null;
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel1.getValueAt(0, (-550));
      objectArray1[3] = null;
      Object object1 = new Object();
      objectArray1[4] = object1;
      objectArray0[0] = objectArray1;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray1);
      // Undeclared exception!
      try { 
        defaultTableModel1.setValueAt(object1, 671, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 671 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((-175)).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel(tableModel0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      int int0 = 709;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel1);
      JTable jTable0 = new JTable(sortFilterModel0, (TableColumnModel) null);
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(689);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<JCheckBox> vector0 = new Stack<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(vector0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      defaultTableModel0.getColumnName((-1));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort((-2324));
      sortFilterModel0.sort(0);
      sortFilterModel0.getColumnClass(0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = null;
      try {
        menuDragMouseEvent0 = new MenuDragMouseEvent(jFormattedTextField0, 0, (-2324), 0, 0, (-1890), 0, (-392), (-2324), true, menuElementArray0, menuSelectionManager0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object[] objectArray0 = new Object[11];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.isCellEditable(709, 709);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.sort(709);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
      assertFalse(sortFilterModel2.equals((Object)sortFilterModel1));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Stack<JCheckBox> stack0 = new Stack<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(689);
      Object[][] objectArray0 = new Object[4][8];
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = (Object) stack0;
      objectArray1[1] = (Object) defaultTableModel0;
      objectArray1[2] = (Object) defaultTableModel0;
      objectArray1[3] = (Object) stack0;
      objectArray1[4] = (Object) stack0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) sortFilterModel0;
      objectArray2[1] = (Object) stack0;
      objectArray2[2] = (Object) sortFilterModel0;
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.getValueAt(3856, 662);
      objectArray2[3] = null;
      objectArray2[4] = (Object) defaultTableModel0;
      objectArray2[5] = (Object) defaultTableModel0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[7];
      objectArray3[0] = (Object) stack0;
      objectArray3[1] = (Object) defaultTableModel0;
      objectArray3[2] = null;
      objectArray3[3] = (Object) defaultTableModel0;
      objectArray3[4] = (Object) sortFilterModel0;
      objectArray3[5] = (Object) sortFilterModel1;
      objectArray3[6] = (Object) stack0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[6];
      objectArray4[0] = (Object) stack0;
      objectArray4[1] = (Object) sortFilterModel0;
      objectArray4[2] = (Object) defaultTableModel0;
      objectArray4[3] = (Object) defaultTableModel0;
      objectArray4[4] = (Object) stack0;
      objectArray4[5] = (Object) sortFilterModel0;
      objectArray0[3] = objectArray4;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector<JCheckBox> vector0 = new Vector<JCheckBox>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      Integer integer0 = new Integer(30);
      sortFilterModel0.mouseExited((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1, 1);
      defaultTableModel0.fireTableStructureChanged();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnClass(1);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.getRowCount();
      sortFilterModel0.updateTable();
      sortFilterModel0.updateTable();
      sortFilterModel0.mousePressed((MouseEvent) null);
      sortFilterModel0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Object object0 = sortFilterModel0.getValueAt((-1063), (-1063));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Object object0 = new Object();
      stack0.add(object0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 0);
      defaultTableModel0.setRowCount(0);
      defaultTableModel0.setRowCount(0);
      int int0 = 0;
      stack0.add(0, (Object) defaultTableModel0);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      jTable0.repaint(0, 0, 0, 0);
      sortFilterModel0.removeTableModelListener(jTable0);
      sortFilterModel0.getColumnCount();
      sortFilterModel0.getColumnCount();
      ChronoUnit chronoUnit0 = ChronoUnit.DECADES;
      stack0.removeElement(chronoUnit0);
      // Undeclared exception!
      try { 
        jTable0.getCellEditor(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      String string0 = sortFilterModel0.getColumnName(4278);
      assertEquals("FHO", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.isCellEditable(709, 709);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel((Vector) null, (Vector) null);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel1);
      sortFilterModel1.getValueAt(3522, 3522);
      defaultTableModel1.addColumn((Object) null, objectArray0);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel0);
      sortFilterModel2.getTableModelListeners();
      sortFilterModel2.sort((-2002));
      Object object0 = new Object();
      sortFilterModel2.getValueAt(709, 1176);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt((Object) null, 1363, 2579);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1363
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      int int0 = 709;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.getColumnClass(709);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnName(709);
      JLayer<JCheckBox> jLayer0 = new JLayer<JCheckBox>();
      int int1 = 2315;
      sortFilterModel0.getValueAt(2315, 2315);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(sortFilterModel0, "AAH", "AAH", (Object) null);
      jLayer0.propertyChange(propertyChangeEvent0);
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jLayer0, 709, 709, 709, 709, 709, 2315, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModel0.fireTableChanged((TableModelEvent) null);
      int int0 = 2;
      vector0.setSize(2);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
      boolean boolean0 = true;
      LinkedHashSet<JCheckBox> linkedHashSet0 = new LinkedHashSet<JCheckBox>();
      vector0.removeAll(linkedHashSet0);
      sortFilterModel0.setSort(true);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.isCellEditable(709, 709);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = (-2002);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort((-2002));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 709);
      defaultTableModel0.getColumnClass(709);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.spliterator();
      defaultTableModel0.addRow(vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      defaultTableModel0.addRow(objectArray0);
      sortFilterModel0.getColumnClass(709);
      boolean boolean0 = sortFilterModel0.isCellEditable(709, 709);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }
}
