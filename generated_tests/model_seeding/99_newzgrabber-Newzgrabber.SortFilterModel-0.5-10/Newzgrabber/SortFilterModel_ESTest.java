/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 22:39:05 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.SortFilterModel;
import java.awt.HeadlessException;
import java.awt.Window;
import java.awt.dnd.DropTarget;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.time.chrono.HijrahEra;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JLayeredPane;
import javax.swing.JProgressBar;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.event.ChangeEvent;
import javax.swing.plaf.metal.MetalLabelUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortFilterModel_ESTest extends SortFilterModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      int int0 = 30;
      defaultTableModel0.getColumnClass(30);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = null;
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Stack<MetalLabelUI> stack0 = new Stack<MetalLabelUI>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.addRow((Vector) stack0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      int int0 = (-1163);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(integer0, (-1163), (-1163));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1163
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Window> class0 = Window.class;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(1, 1, 448, (-1)).when(tableModel0).getColumnCount();
      doReturn("9MD2GMWLrx]W", "Create").when(tableModel0).getColumnName(anyInt());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, integer0, "", "v", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      jTable0.setColumnModel(defaultTableColumnModel0);
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      sortFilterModel0.findColumn("");
      sortFilterModel0.getColumnCount();
      sortFilterModel0.sort(0);
      sortFilterModel0.sortTable(5);
      sortFilterModel0.getColumnName(1);
      sortFilterModel0.getColumnCount();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel1.updateTable();
      sortFilterModel0.getValueAt(0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<String> class0 = String.class;
      HijrahEra hijrahEra0 = HijrahEra.AH;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(tableModel0).getRowCount();
      doReturn(class0, class0, (Object) null, hijrahEra0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel0.setSort(true);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      HijrahEra hijrahEra0 = HijrahEra.AH;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, hijrahEra0, "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel").when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.sort(20);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = 300;
      sortFilterModel0.getColumnClass(300);
      String string0 = "Newzgrabber.SortFilterModel$Row";
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt("Newzgrabber.SortFilterModel$Row", 493, 300);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 493
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Window> class0 = Window.class;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(tableModel0).getColumnCount();
      doReturn((String) null).when(tableModel0).getColumnName(anyInt());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, integer0, "", "v", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      sortFilterModel0.findColumn("");
      sortFilterModel0.getColumnCount();
      sortFilterModel0.sort(0);
      sortFilterModel0.sortTable(5);
      sortFilterModel0.getColumnName(1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Window> class0 = Window.class;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20, 0, 0, 0).when(tableModel0).getRowCount();
      doReturn(object0, integer0, "", "v", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
      sortFilterModel2.addTableModelListener(jTable0);
      SortFilterModel sortFilterModel3 = new SortFilterModel(sortFilterModel2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(20, 20);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) fileSystemHandling0;
      objectArray0[2] = (Object) fileSystemHandling0;
      objectArray0[3] = (Object) fileSystemHandling0;
      objectArray0[4] = (Object) fileSystemHandling0;
      objectArray0[5] = (Object) fileSystemHandling0;
      objectArray0[6] = (Object) fileSystemHandling0;
      int int0 = 3468;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 3468);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnClass(3468);
      MouseEvent mouseEvent0 = null;
      int int1 = 2383;
      sortFilterModel0.fireTableRowsUpdated(3468, 2383);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      int int2 = (-1116);
      sortFilterModel0.getValueAt((-5178), 2383);
      defaultTableModel0.addColumn((Object) null, objectArray0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(3468, (-1116));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3468
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      int int0 = 3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 3);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int1 = 0;
      sortFilterModel0.sortTable(0);
      JTextArea jTextArea0 = new JTextArea(3, 3);
      stack0.add("file.separator");
      int int2 = (-803);
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jTextArea0, 3, 0, 0, (-803), 3, 3, false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<String> vector1 = new Vector<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = sortFilterModel0.getColumnCount();
      assertFalse(vector0.contains(int0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tableModel0).getColumnClass(anyInt());
      doReturn(0, 0, 0).when(tableModel0).getColumnCount();
      doReturn(0, 0).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      sortFilterModel0.findColumn("");
      sortFilterModel0.getColumnCount();
      sortFilterModel0.sort(0);
      Class<MetalLabelUI> class0 = MetalLabelUI.class;
      sortFilterModel0.getListeners(class0);
      sortFilterModel0.sortTable((-961));
      sortFilterModel0.getColumnClass(0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort((-1805));
      sortFilterModel0.getValueAt(1, (-961));
      sortFilterModel0.getColumnCount();
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<String> class0 = String.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(tableModel0).getColumnCount();
      doReturn(3).when(tableModel0).getRowCount();
      doReturn("", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable(sortFilterModel0);
      sortFilterModel0.addTableModelListener(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<String> class0 = String.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(tableModel0).getRowCount();
      doReturn("", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<String> class0 = String.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tableModel0).getColumnClass(anyInt());
      doReturn(16, 16, 6, 0, 0).when(tableModel0).getColumnCount();
      doReturn((String) null, (String) null, (String) null).when(tableModel0).getColumnName(anyInt());
      doReturn(16, (-1587)).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      doReturn(false).when(tableModel0).isCellEditable(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      sortFilterModel0.findColumn("");
      sortFilterModel0.getColumnCount();
      sortFilterModel0.sort(0);
      Class<MetalLabelUI> class1 = MetalLabelUI.class;
      sortFilterModel0.getListeners(class1);
      sortFilterModel0.sortTable((-961));
      sortFilterModel0.getColumnClass(0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort((-1805));
      sortFilterModel0.getValueAt(1, (-961));
      sortFilterModel0.getColumnCount();
      sortFilterModel0.getRowCount();
      boolean boolean0 = sortFilterModel0.isCellEditable(6, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.sort(16);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 3, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Vector<MetalLabelUI> vector0 = new Vector<MetalLabelUI>();
      Vector<String> vector1 = new Vector<String>();
      JTable jTable0 = new JTable(vector0, vector1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setTable(jTable0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(5);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.sort(1);
      sortFilterModel0.addTableModelListener(jTable0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.sortTable(3);
      sortFilterModel0.mouseReleased((MouseEvent) null);
      sortFilterModel0.mousePressed((MouseEvent) null);
      assertNotSame(sortFilterModel0, sortFilterModel1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      HijrahEra hijrahEra0 = HijrahEra.AH;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(57, 57);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(57);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 57 >= 57
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable((-4335));
      String string0 = sortFilterModel0.getColumnName((-4335));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Class<String> class0 = String.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.fireTableRowsUpdated((-2617), 660);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel0.setSort(true);
      sortFilterModel1.mouseEntered((MouseEvent) null);
      assertNotSame(sortFilterModel1, sortFilterModel0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 3);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getValueAt((-635), 3);
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 3).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel1 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel1.sort(1);
      sortFilterModel1.getTableModelListeners();
      sortFilterModel1.setTable(jTable0);
      sortFilterModel1.sort((-986));
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
      sortFilterModel2.sortTable((-986));
      MouseEvent mouseEvent0 = null;
      // Undeclared exception!
      try { 
        sortFilterModel1.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort(2525);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseExited((MouseEvent) null);
      assertNotSame(sortFilterModel0, sortFilterModel1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      int int0 = 30;
      defaultTableModel0.getColumnClass(30);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort(30);
      JTable jTable0 = null;
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Class<String> class0 = String.class;
      Object object0 = new Object();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tableModel0).getColumnClass(anyInt());
      doReturn(16, 16, 6, (-1409), 30).when(tableModel0).getColumnCount();
      doReturn(":a)d7!d9nM~VEm1Z", ":a)d7!d9nM~VEm1Z", ":a)d7!d9nM~VEm1Z").when(tableModel0).getColumnName(anyInt());
      doReturn(16, (-1587)).when(tableModel0).getRowCount();
      doReturn((Object) null, "", (Object) null, object0, metalLabelUI0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort(1);
      sortFilterModel0.findColumn("");
      sortFilterModel0.getColumnCount();
      sortFilterModel0.sort(0);
      Class<MetalLabelUI> class1 = MetalLabelUI.class;
      sortFilterModel0.getListeners(class1);
      sortFilterModel0.sortTable((-961));
      sortFilterModel0.getColumnClass(0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort((-1805));
      sortFilterModel0.getValueAt(1, (-961));
      sortFilterModel0.getColumnCount();
      sortFilterModel0.getRowCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(30, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][8];
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) objectArray1;
      HijrahEra hijrahEra0 = HijrahEra.AH;
      objectArray1[1] = (Object) hijrahEra0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      objectArray1[2] = (Object) sortFilterModel0;
      objectArray0[0] = objectArray1;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray1);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel1);
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      ChangeEvent changeEvent0 = new ChangeEvent(jTable0);
      jTable0.editingStopped(changeEvent0);
      defaultTableModel0.addColumn((Object) "Newzgrabber.DirectoryDialog");
      sortFilterModel1.setTable(jTable0);
      sortFilterModel0.updateTable();
      sortFilterModel0.getColumnName(246);
      hijrahEra0.getValue();
      int int0 = 3;
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent(jTable0, (-1653), 246, 0, (-1653), (-1), 0, true, 0, 3, 3);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object object0 = new Object();
      HijrahEra hijrahEra0 = HijrahEra.AH;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, hijrahEra0, "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel", (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Class<Window> class0 = Window.class;
      String string0 = "";
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, integer0, "", "", class0).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 3);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      stack0.ensureCapacity(3);
      defaultTableModel0.addColumn((Object) stack0);
      stack0.add("Newzgrabber.SortFilterModel");
      JTable jTable0 = new JTable(2133, 3);
      sortFilterModel0.getValueAt(2133, 2133);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      stack0.replaceAll(unaryOperator0);
      sortFilterModel0.setTable(jTable0);
      sortFilterModel0.setSort(false);
      sortFilterModel0.getColumnCount();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(3, 1279);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Class<String> class0 = String.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 0).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.sort(1);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.setTable(jTable0);
      sortFilterModel0.sort(3);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(3);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Class<HijrahEra> class0 = HijrahEra.class;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(class0).when(tableModel0).getColumnClass(anyInt());
      doReturn((String) null).when(tableModel0).getColumnName(anyInt());
      doReturn(3).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.fireTableRowsUpdated((-1029), 3);
      JTable jTable0 = new JTable();
      sortFilterModel0.sort(1);
      sortFilterModel0.getColumnName(1);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.getColumnClass(1);
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel((TableModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      HijrahEra hijrahEra0 = HijrahEra.AH;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(tableModel0).getColumnClass(anyInt());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, hijrahEra0, "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel").when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      sortFilterModel0.setSort(false);
      sortFilterModel0.sort(20);
      Class class0 = sortFilterModel0.getColumnClass(20);
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      Object[][] objectArray0 = new Object[1][7];
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) defaultTableModel0;
      objectArray1[1] = (Object) sortFilterModel0;
      objectArray0[0] = objectArray1;
      defaultTableModel0.setDataVector(objectArray0, objectArray1);
      sortFilterModel0.getColumnClass(0);
      defaultTableModel0.getColumnName(0);
      JProgressBar jProgressBar0 = new JProgressBar(defaultBoundedRangeModel0);
      sortFilterModel0.fireTableDataChanged();
      sortFilterModel0.getRowCount();
      int int0 = 1;
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jProgressBar0, 0, 0, 929, 1, 929, 3245, false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Window> vector0 = new Stack<Window>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.mouseClicked((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable(825);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(1, (-3090));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Class<Window> class0 = Window.class;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20, 0).when(tableModel0).getRowCount();
      doReturn(object0, integer0, "", "v", (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.sort((-1083));
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.setSort(true);
      // Undeclared exception!
      try { 
        sortFilterModel1.setValueAt((Object) null, 1, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getTableModelListeners();
      sortFilterModel0.setTable(jTable0);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel0);
      assertFalse(sortFilterModel2.equals((Object)sortFilterModel0));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModel0.getColumnClass(30);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(30, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(true);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      String string0 = sortFilterModel0.getColumnName((-4335));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(3, 0).when(tableModel0).getRowCount();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      int int0 = (-3290);
      sortFilterModel0.sort(int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Class<Window> class0 = Window.class;
      Object object0 = new Object();
      HijrahEra hijrahEra0 = HijrahEra.AH;
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(20).when(tableModel0).getRowCount();
      doReturn(object0, hijrahEra0, "Newzgrabber.SortFilterModel", "Newzgrabber.SortFilterModel", (Object) null).when(tableModel0).getValueAt(anyInt() , anyInt());
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.addTableModelListener(jTable0);
      sortFilterModel0.getTableModelListeners();
      int int0 = 1;
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Stack<Window> stack0 = new Stack<Window>();
      int int0 = 20;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 20);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Class class0 = sortFilterModel0.getColumnClass(0);
      assertFalse(class0.isPrimitive());
  }
}
