/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 18:14:05 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Player;
import src.Retainers;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner("a");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals("a", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner("a");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals("a", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setName("B`P)3\"yhD=2EBI");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(3, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setFiefdomCastles((-2644));
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-2644), fiefdoms0.getFiefdomCastles());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("B`P)3\"yhD=2EBI"));
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, (String) null, ".", (-1396), true, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("."));
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals((-1396), fiefdoms1.getValue());
      assertEquals(".", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      
      fiefdoms1.setPersonalCastles(false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("."));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals((-1396), fiefdoms1.getValue());
      assertEquals(".", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      
      fiefdoms0.setPeasants((-1396));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1396), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2644), fiefdoms0.getFiefdomCastles());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      fiefdoms1.setViking((-1881977177), false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("."));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals((-1396), fiefdoms1.getValue());
      assertEquals(".", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      
      fiefdoms0.setName(".");
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(".", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1396), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-2644), fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar(3, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setName("a");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("a", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setOwner("a");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("a", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("a", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setOwner("a");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("a", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("a", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setPeasants((-2215));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-2215), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-2215), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)0;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)5, (byte)119, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setPersonalCastles(932);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ListIterator<Intruders> listIterator0 = arrayList0.listIterator();
      assertNotNull(listIterator0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(listIterator0.hasNext());
      assertFalse(listIterator0.hasPrevious());
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setPeasants(3397);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(3397, fiefdoms0.getPeasants());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray1.length);
      assertNotNull(byteArray1);
      assertArrayEquals(new byte[] {(byte)5, (byte)119, (byte)0}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(932, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(3397, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setViking(26, false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      float[] floatArray0 = fiefdoms0.shaderColor;
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(arrayList2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(arrayList3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPeasants(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertTrue(arrayList4.equals((Object)arrayList0));
      assertNotNull(arrayList4);
      assertNotSame(arrayList4, arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      
      Knight knight0 = new Knight("mu*lim", (String) null, "_OJ");
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("mu*lim", knight0.getName());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      
      ArrayList<Player> arrayList5 = knight0.getAllies();
      assertNotNull(arrayList5);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("mu*lim", knight0.getName());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      
      arrayList5.ensureCapacity(0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("mu*lim", knight0.getName());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      
      fiefdoms0.setVassalsList(arrayList5);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("mu*lim", knight0.getName());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      
      fiefdoms0.setPersonalCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "v&", "mu*lim", 0, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals("mu*lim", fiefdoms1.getOwner());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("v&", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.setKingdom(true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals("mu*lim", fiefdoms1.getOwner());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("v&", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      Fiefdoms fiefdoms2 = new Fiefdoms((ArrayList<String>) null, "1]93G<jZyT<w2", (String) null, 0, false, (ArrayList<String>) null);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals("1]93G<jZyT<w2", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      
      fiefdoms2.buyFiefdomCastles(1);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals("1]93G<jZyT<w2", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = arrayList0.add("{Ny>3E");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "{Ny>3E", "{Ny>3E", 3546, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      boolean boolean2 = arrayList1.remove((Object) "#COLc}}2za5!(");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setViking(arrayList1);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ArrayList<Player> arrayList2 = fiefdoms0.getVassalsList();
      assertNull(arrayList2);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertNotSame(arrayList3, arrayList1);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      Stream<String> stream0 = arrayList0.stream();
      assertNotNull(stream0);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      
      fiefdoms0.setValue(3546);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Player> arrayList5 = fiefdoms0.getVassalsList();
      assertNull(arrayList5);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList6);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertSame(arrayList6, arrayList4);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      
      fiefdoms0.setRebelliousVassals(1, false);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray1.length);
      assertNotNull(byteArray1);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      fiefdoms0.setMagyar(3546, true);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      Stream<String> stream1 = arrayList0.parallelStream();
      assertFalse(stream1.equals((Object)stream0));
      assertNotNull(stream1);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertNotSame(stream1, stream0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList7 = fiefdoms0.getRebelliousVassals();
      assertTrue(arrayList7.equals((Object)arrayList6));
      assertTrue(arrayList7.equals((Object)arrayList4));
      assertNotNull(arrayList7);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertNotSame(arrayList7, arrayList4);
      assertNotSame(arrayList7, arrayList6);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList7.isEmpty());
      assertEquals(0, arrayList7.size());
      
      ArrayList<Vassals> arrayList8 = fiefdoms0.getRebelliousVassals();
      assertTrue(arrayList8.equals((Object)arrayList6));
      assertTrue(arrayList8.equals((Object)arrayList4));
      assertNotNull(arrayList8);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertSame(arrayList8, arrayList7);
      assertNotSame(arrayList8, arrayList4);
      assertNotSame(arrayList8, arrayList6);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList8.isEmpty());
      assertEquals(0, arrayList8.size());
      
      fiefdoms0.setOwner("{Ny>3E");
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList9 = fiefdoms0.getMuslim();
      assertFalse(arrayList9.equals((Object)arrayList3));
      assertTrue(arrayList9.equals((Object)arrayList1));
      assertNotNull(arrayList9);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertNotSame(arrayList9, arrayList3);
      assertNotSame(arrayList9, arrayList1);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList9.isEmpty());
      assertEquals(0, arrayList9.size());
      
      ArrayList<String> arrayList10 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList10);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertFalse(arrayList10.contains("#COLc}}2za5!("));
      assertTrue(arrayList10.contains("{Ny>3E"));
      assertSame(arrayList0, arrayList10);
      assertSame(arrayList10, arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1, arrayList10.size());
      assertFalse(arrayList10.isEmpty());
      
      fiefdoms0.setMagyar(69, false);
      assertFalse(arrayList0.contains("#COLc}}2za5!("));
      assertTrue(arrayList0.contains("{Ny>3E"));
      assertSame(arrayList0, arrayList10);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("{Ny>3E", fiefdoms0.getName());
      assertEquals(3546, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("{Ny>3E", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 178, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(178, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(2, false);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(178, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList1 = new ArrayList<Vassals>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Vassals vassals0 = new Vassals();
      assertNotNull(vassals0);
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      
      Vassals vassals1 = new Vassals("Move", "");
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotNull(vassals1);
      assertNull(vassals1.getLocation());
      assertEquals("Move", vassals1.getLord());
      assertEquals("", vassals1.getFiefdom());
      assertEquals("vassal", vassals1.getRank());
      
      vassals1.setRank("EbB{V7HUU9+T+ ");
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotSame(vassals1, vassals0);
      assertEquals("EbB{V7HUU9+T+ ", vassals1.getRank());
      assertNull(vassals1.getLocation());
      assertEquals("Move", vassals1.getLord());
      assertEquals("", vassals1.getFiefdom());
      
      boolean boolean0 = arrayList1.add(vassals1);
      assertFalse(vassals1.equals((Object)vassals0));
      assertTrue(boolean0);
      assertTrue(arrayList1.contains(vassals1));
      assertFalse(arrayList1.contains(vassals0));
      assertNotSame(vassals1, vassals0);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals("EbB{V7HUU9+T+ ", vassals1.getRank());
      assertNull(vassals1.getLocation());
      assertEquals("Move", vassals1.getLord());
      assertEquals("", vassals1.getFiefdom());
      
      vassals0.setLocation("Move");
      assertFalse(vassals0.equals((Object)vassals1));
      assertNotSame(vassals0, vassals1);
      assertEquals("Move", vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      
      boolean boolean1 = arrayList1.add(vassals0);
      assertFalse(vassals0.equals((Object)vassals1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(arrayList1.contains(vassals1));
      assertNotSame(vassals0, vassals1);
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertEquals("Move", vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      
      fiefdoms0.setLoyalVassals(arrayList1);
      assertTrue(arrayList1.contains(vassals1));
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      
      fiefdoms0.setMagyar((-245), true);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertNotNull(arrayList2);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      boolean boolean2 = fiefdoms0.isKingdom();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(arrayList3);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setValue((-245));
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-245), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setValue(3);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      fiefdoms0.setViking(0, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      boolean boolean1 = fiefdoms0.isKingdom();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(1, int0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNull(arrayList1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setViking(5, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      Knight knight0 = new Knight("_OJ", "knight", "_OJ");
      assertNotNull(knight0);
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("Invalid number", 5);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      ArrayList<Player> arrayList0 = knight0.getAllies();
      assertNotNull(arrayList0);
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      arrayList0.ensureCapacity((-2068));
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setVassalsList(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setVassalsList(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "knight", "knight", 5, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(5, fiefdoms1.getValue());
      assertEquals("knight", fiefdoms1.getName());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("knight", fiefdoms1.getOwner());
      
      fiefdoms0.setKingdom(true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList1 = knight0.getVotes();
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains("knight"));
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      ArrayList<String> arrayList2 = knight0.conversation;
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotNull(arrayList2);
      assertFalse(arrayList2.contains("knight"));
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList2, ")r7n)w", "magyar", (-2068), true, arrayList1);
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertFalse(arrayList1.contains("knight"));
      assertFalse(arrayList2.contains("knight"));
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertEquals((-2068), fiefdoms2.getValue());
      assertTrue(fiefdoms2.isKingdom());
      assertEquals(")r7n)w", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals("magyar", fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      
      Fiefdoms fiefdoms3 = new Fiefdoms(arrayList1, "v&", "", (-2068), true, arrayList1);
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertNotNull(fiefdoms3);
      assertFalse(arrayList1.contains(""));
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("", fiefdoms3.getOwner());
      assertEquals((-2068), fiefdoms3.getValue());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("v&", fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms3.buyFiefdomCastles(0);
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertFalse(arrayList1.contains(""));
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(arrayList1, arrayList2);
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals("", fiefdoms3.getOwner());
      assertEquals((-2068), fiefdoms3.getValue());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("v&", fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms3.setOwner("knight");
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertFalse(arrayList1.contains(""));
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(arrayList1, arrayList2);
      assertTrue(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertEquals((-2068), fiefdoms3.getValue());
      assertEquals(0, fiefdoms3.getPeasants());
      assertEquals("v&", fiefdoms3.getName());
      assertEquals("knight", fiefdoms3.getOwner());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, knight0.getwound());
      assertEquals("_OJ", knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("_OJ", knight0.getPassword());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.buyPersonalCastles((-191));
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setConqueror("%yokoMAt3R");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-66);
      fiefdoms0.setMuslim((-1), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)51;
      byteArray0[6] = (byte) (-42);
      byteArray0[7] = (byte) (-54);
      byteArray0[8] = (byte)0;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-66), (byte)0, (byte)1, (byte)51, (byte) (-42), (byte) (-54), (byte)0}, byteArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setMagyar((-191), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      String string0 = fiefdoms0.getName();
      assertNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) (-191);
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(3, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F, (-191.0F)}, floatArray0, 0.01F);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setLoyalVassals((int) (byte)0, true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-66), (byte)0, (byte)1, (byte)51, (byte) (-42), (byte) (-54), (byte)0}, byteArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("%yokoMAt3R", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setLoyalVassals((-1), false);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(string0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setConqueror((String) null);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 0, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string0 = fiefdoms0.getName();
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror("");
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals((-1075), false);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(3, true);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setName("magyar");
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      
      fiefdoms0.setName("");
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim((-1), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals(3, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "", "", (-1), false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains(""));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      ArrayList<Player> arrayList1 = fiefdoms1.getVassalsList();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-2), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      String string0 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(arrayList0.contains(""));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms0.setOwner("count");
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-2), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("count", fiefdoms0.getOwner());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-2), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("count", fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      int int0 = fiefdoms1.getPeasants();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, int0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      boolean boolean0 = fiefdoms1.isKingdom();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(boolean0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<Vassals> arrayList0 = fiefdoms1.getLoyalVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      int int1 = fiefdoms1.getFiefdomCastles();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList1 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList2 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList3 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList4 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList4);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList5 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList5);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<String> arrayList6 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList6);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      
      fiefdoms1.buyFiefdomCastles(0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      String string0 = fiefdoms2.getOwner();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNull(string0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      
      int int2 = fiefdoms1.getFiefdomCastles();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      int int3 = fiefdoms2.getPersonalCastles();
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertTrue(int3 == int2);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, int3);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      
      int int4 = fiefdoms2.getValue();
      assertTrue(int4 == int3);
      assertTrue(int4 == int1);
      assertTrue(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, int4);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      
      int int5 = fiefdoms2.getValue();
      assertTrue(int5 == int1);
      assertTrue(int5 == int2);
      assertTrue(int5 == int0);
      assertTrue(int5 == int3);
      assertTrue(int5 == int4);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertEquals(0, int5);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      
      int int6 = fiefdoms1.getPeasants();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertTrue(int6 == int0);
      assertTrue(int6 == int2);
      assertTrue(int6 == int3);
      assertTrue(int6 == int1);
      assertTrue(int6 == int5);
      assertTrue(int6 == int4);
      assertEquals(0, int6);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      
      fiefdoms2.setPeasants(3);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(3, fiefdoms2.getPeasants());
      
      ArrayList<Intruders> arrayList7 = fiefdoms2.getMagyar();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(arrayList7);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, arrayList7.size());
      assertTrue(arrayList7.isEmpty());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(3, fiefdoms2.getPeasants());
      
      fiefdoms0.setViking(arrayList7);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList7.size());
      assertTrue(arrayList7.isEmpty());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(3, fiefdoms2.getPeasants());
      
      fiefdoms0.setMagyar((-476), false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      int int7 = fiefdoms0.getPersonalCastles();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertTrue(int7 == int5);
      assertTrue(int7 == int3);
      assertTrue(int7 == int6);
      assertTrue(int7 == int0);
      assertTrue(int7 == int2);
      assertTrue(int7 == int4);
      assertTrue(int7 == int1);
      assertEquals(0, int7);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(1724, false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.buyPersonalCastles(2846);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setName((String) null);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setLoyalVassals(1, true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setName("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(0, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals(0, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPersonalCastles(false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setRebelliousVassals(103, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setKingdom(true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals(2, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setFiefdomCastles(3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("B`P)3\"yhD=2EBI");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals(3, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.loyalVassals = null;
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setFiefdomCastles(3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPeasants(3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(3, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals("B`P)3\"yhD=2EBI", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("rwxI3T;,j%h``");
      assertEquals("rwxI3T;,j%h``", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNull(arrayList0);
      assertEquals("rwxI3T;,j%h``", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals("rwxI3T;,j%h``", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(3, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setFiefdomCastles(2);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setViking((-1), false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertNotNull(arrayList0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "9noJ^!P\u0003sbg", "sN:y1", 5, false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains("sN:y1"));
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("sN:y1", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("9noJ^!P\u0003sbg", fiefdoms1.getName());
      assertEquals(5, fiefdoms1.getValue());
      
      ArrayList<String> arrayList1 = fiefdoms1.getNeighbors();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("sN:y1"));
      assertFalse(arrayList1.contains("sN:y1"));
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertSame(arrayList1, arrayList0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("sN:y1", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("9noJ^!P\u0003sbg", fiefdoms1.getName());
      assertEquals(5, fiefdoms1.getValue());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      ArrayList<Vassals> arrayList2 = fiefdoms1.getRebelliousVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("sN:y1"));
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("sN:y1", fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("9noJ^!P\u0003sbg", fiefdoms1.getName());
      assertEquals(5, fiefdoms1.getValue());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)64;
      fiefdoms0.shaderColor = null;
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      byteArray0[2] = (byte) (-1);
      fiefdoms0.setMuslim((-1535), false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      byteArray0[3] = (byte)0;
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      byteArray0[4] = (byte) (-22);
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)2, (byte)64, (byte) (-1), (byte)0, (byte) (-22)}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyPersonalCastles((-515));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setOwner("8;g70{>wO");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(5, byteArray1.length);
      assertNotNull(byteArray1);
      assertArrayEquals(new byte[] {(byte)2, (byte)64, (byte) (-1), (byte)0, (byte) (-22)}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNotNull(arrayList1);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList2);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      Vassals vassals0 = new Vassals((String) null, (String) null);
      assertNotNull(vassals0);
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      
      vassals0.setLocation((String) null);
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      
      vassals0.setLocation((String) null);
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      
      vassals0.setLocation("Invalid number");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("Invalid number", vassals0.getLocation());
      
      vassals0.setLocation("Invalid number");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("Invalid number", vassals0.getLocation());
      
      boolean boolean1 = arrayList2.add(vassals0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(arrayList2.contains(vassals0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("Invalid number", vassals0.getLocation());
      
      fiefdoms0.setRebelliousVassals(arrayList2);
      assertTrue(arrayList2.contains(vassals0));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList3);
      assertTrue(arrayList3.contains(vassals0));
      assertSame(arrayList3, arrayList2);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList4);
      assertTrue(arrayList4.contains(vassals0));
      assertSame(arrayList4, arrayList3);
      assertSame(arrayList4, arrayList2);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("8;g70{>wO", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList4.isEmpty());
      assertEquals(1, arrayList4.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.buyPersonalCastles(1316);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, (String) null, (String) null, 837, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(837, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(837, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setOwner("a");
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("a", fiefdoms0.getOwner());
      
      fiefdoms0.setOwner("a");
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("a", fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setValue(732);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(732, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(732, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setMuslim(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Knight knight0 = new Knight("KL@HjjaH", "KL@HjjaH", "KL@HjjaH");
      assertNotNull(knight0);
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      knight0.promote("jiaB=U=]a", "jiaB=U=]a");
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      fiefdoms0.setOwner("AvxQ");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      knight0.setTotalMoney(0);
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean1 = arrayList0.add(intruders0);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      fiefdoms0.setConqueror("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      boolean boolean2 = arrayList0.remove((Object) knight0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertTrue(arrayList0.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      fiefdoms0.setViking(arrayList0);
      assertTrue(arrayList0.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      
      String string0 = fiefdoms0.getOwner();
      assertEquals("AvxQ", string0);
      assertNotNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPeasants((-3304));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertNotNull(arrayList1);
      assertTrue(arrayList1.contains(intruders0));
      assertSame(arrayList1, arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      
      ArrayList<Player> arrayList2 = knight0.getAllies();
      assertNotNull(arrayList2);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      arrayList2.ensureCapacity(0);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      fiefdoms0.setVassalsList(arrayList2);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals("KL@HjjaH", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals("KL@HjjaH", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("KL@HjjaH", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      
      fiefdoms0.setLoyalVassals(0, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setMagyar(arrayList0);
      assertTrue(arrayList0.contains(intruders0));
      assertSame(arrayList0, arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      
      fiefdoms0.setKingdom(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.buyFiefdomCastles(0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals((-3304), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("AvxQ", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(13);
      assertEquals(13, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals(13, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setRebelliousVassals(13, false);
      assertEquals(13, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(1, int0);
      assertEquals(13, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setValue(3);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertNotNull(arrayList0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = new ArrayList<String>(arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(arrayList1);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, " castles for ", (String) null, 924, true, arrayList1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains(" castles for "));
      assertFalse(arrayList1.contains(" castles for "));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(924, fiefdoms1.getValue());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(" castles for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms0.setKingdom(true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList1, (String) null, "+yb*9tc (onzIa", 0, true, arrayList0);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertFalse(arrayList0.contains(" castles for "));
      assertFalse(arrayList1.contains(" castles for "));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals("+yb*9tc (onzIa", fiefdoms2.getOwner());
      assertTrue(fiefdoms2.isKingdom());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getConqueror());
      
      fiefdoms1.buyFiefdomCastles(1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(arrayList0.contains(" castles for "));
      assertFalse(arrayList1.contains(" castles for "));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(924, fiefdoms1.getValue());
      assertEquals(1, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(" castles for ", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms0.setOwner((String) null);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(arrayList2);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(arrayList3);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setValue(3249);
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3249, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.buyFiefdomCastles(2870);
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(3249, fiefdoms0.getValue());
      assertEquals(2870, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      knight0.setRetainers((ArrayList<Retainers>) null);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertNotNull(arrayList0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = knight0.getVotes();
      assertNotNull(arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, " castles  for ", "", 0, false, arrayList1);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(" castles  for "));
      assertFalse(arrayList1.contains(" castles  for "));
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)18;
      boolean boolean0 = arrayList0.add("");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertSame(arrayList0, arrayList1);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-19);
      fiefdoms0.setLoyalVassals((-136), false);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(3, byteArray0.length);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertArrayEquals(new byte[] {(byte)18, (byte) (-112), (byte) (-19)}, byteArray0);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      fiefdoms0.setMagyar(0, false);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertFalse(arrayList2.contains(" castles  for "));
      assertTrue(arrayList2.contains(""));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertSame(arrayList2, arrayList1);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      
      boolean boolean1 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)18, (byte) (-112), (byte) (-19)}, byteArray0);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      fiefdoms0.setRebelliousVassals((-136), true);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      ArrayList<Player> arrayList3 = fiefdoms0.getVassalsList();
      assertNull(arrayList3);
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
      
      ArrayList<String> arrayList4 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList4);
      assertTrue(arrayList4.contains(""));
      assertFalse(arrayList4.contains(" castles  for "));
      assertTrue(arrayList0.contains(""));
      assertFalse(arrayList0.contains(" castles  for "));
      assertTrue(arrayList1.contains(""));
      assertFalse(arrayList1.contains(" castles  for "));
      assertSame(arrayList4, arrayList2);
      assertSame(arrayList4, arrayList0);
      assertSame(arrayList4, arrayList1);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList4);
      assertSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertSame(arrayList1, arrayList4);
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(arrayList4.isEmpty());
      assertEquals(1, arrayList4.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles  for ", fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyPersonalCastles(0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("ZUwG}*TsMI");
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(string0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setConqueror("ZUwG}*TsMI");
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setValue(0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(0, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ZUwG}*TsMI", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setFiefdomCastles(false);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid number");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, " `#25s]11/=Jdg", " `#25s]11/=Jdg", 1696, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      boolean boolean2 = arrayList0.add(" `#25s]11/=Jdg");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setMagyar(5, false);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      fiefdoms0.setFiefdomCastles(false);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Vassals vassals0 = new Vassals("w o.\"C<-[", "Invalid number");
      assertNotNull(vassals0);
      assertEquals("Invalid number", vassals0.getFiefdom());
      assertEquals("w o.\"C<-[", vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      
      boolean boolean3 = arrayList1.add((Player) vassals0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("Invalid number", vassals0.getFiefdom());
      assertEquals("w o.\"C<-[", vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      
      fiefdoms0.setVassalsList(arrayList1);
      assertFalse(arrayList0.contains("w o.\"C<-["));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      
      boolean boolean4 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " `#25s]11/=Jdg");
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4);
      
      fiefdoms0.setConqueror("Invalid number");
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertFalse(arrayList2.contains(vassals0));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      boolean boolean5 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "magyar");
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMuslim();
      assertTrue(arrayList4.equals((Object)arrayList3));
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertNotSame(arrayList4, arrayList3);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getViking();
      assertTrue(arrayList5.equals((Object)arrayList3));
      assertTrue(arrayList5.equals((Object)arrayList4));
      assertNotNull(arrayList5);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertNotSame(arrayList5, arrayList3);
      assertNotSame(arrayList5, arrayList4);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("Invalid number", string0);
      assertNotNull(string0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains(" `#25s]11/=Jdg"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      boolean boolean6 = arrayList0.add("X:");
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean4);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean5);
      assertTrue(boolean6);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains("X:"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      String string1 = fiefdoms0.getName();
      assertFalse(string1.equals((Object)string0));
      assertEquals(" `#25s]11/=Jdg", string1);
      assertNotNull(string1);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains("X:"));
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains("X:"));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList6);
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList0.contains("X:"));
      assertFalse(arrayList6.contains(vassals0));
      assertSame(arrayList6, arrayList2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Invalid number", fiefdoms0.getConqueror());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1696, fiefdoms0.getValue());
      assertEquals(" `#25s]11/=Jdg", fiefdoms0.getName());
      assertTrue(arrayList6.isEmpty());
      assertEquals(0, arrayList6.size());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyPersonalCastles((-2012));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "", "", 0, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertTrue(fiefdoms1.isKingdom());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      
      ArrayList<Intruders> arrayList2 = fiefdoms1.getViking();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertTrue(fiefdoms1.isKingdom());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      fiefdoms1.setMuslim(arrayList2);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertTrue(fiefdoms1.isKingdom());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyPersonalCastles((-1));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean0 = arrayList0.add("muslim");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("muslim"));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "muslim", "", 0, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) 0;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 0;
      floatArray0[6] = (float) 0;
      floatArray0[7] = (float) 0;
      Stream<String> stream0 = arrayList0.parallelStream();
      assertNotNull(stream0);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setLoyalVassals((ArrayList<Vassals>) null);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(8, floatArray0.length);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray1 = new float[2];
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      fiefdoms0.setOwner("");
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      floatArray1[0] = (float) 0;
      floatArray1[1] = (float) 0;
      fiefdoms0.setShaderColor(floatArray1);
      assertFalse(floatArray1.equals((Object)floatArray0));
      assertEquals(2, floatArray1.length);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray1, 0.01F);
      assertNotSame(floatArray1, floatArray0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setKingdom(false);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      Knight knight0 = new Knight("", "", " vassals will be moving with you");
      assertNotNull(knight0);
      assertEquals(" vassals will be moving with you", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("", knight0.getOrder());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      
      ArrayList<String> arrayList2 = knight0.getFiefdoms();
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotNull(arrayList2);
      assertFalse(arrayList2.contains(""));
      assertNotSame(arrayList2, arrayList0);
      assertEquals(" vassals will be moving with you", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("", knight0.getOrder());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      boolean boolean1 = arrayList0.addAll(0, (Collection<? extends String>) arrayList2);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertFalse(arrayList2.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(" vassals will be moving with you", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("", knight0.getOrder());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      boolean boolean2 = fiefdoms0.isKingdom();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray2 = fiefdoms0.getShaderColor();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertFalse(floatArray2.equals((Object)floatArray0));
      assertEquals(2, floatArray2.length);
      assertNotNull(floatArray2);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray2, 0.01F);
      assertNotSame(arrayList0, arrayList2);
      assertSame(floatArray2, floatArray1);
      assertNotSame(floatArray2, floatArray0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getRebelliousVassals();
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      fiefdoms0.setFiefdomCastles(0);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList0.contains("muslim"));
      assertFalse(arrayList0.contains(""));
      assertNotSame(arrayList0, arrayList2);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(arrayList1);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Po\"J?9]\"*,S`Er#wp", "Po\"J?9]\"*,S`Er#wp", 0, false, arrayList1);
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("Po\"J?9]\"*,S`Er#wp"));
      assertFalse(arrayList1.contains("Po\"J?9]\"*,S`Er#wp"));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getName());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getOwner());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0, int0);
      assertFalse(arrayList0.contains("Po\"J?9]\"*,S`Er#wp"));
      assertFalse(arrayList1.contains("Po\"J?9]\"*,S`Er#wp"));
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getName());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getOwner());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("Po\"J?9]\"*,S`Er#wp"));
      assertFalse(arrayList1.contains("Po\"J?9]\"*,S`Er#wp"));
      assertFalse(arrayList2.contains("Po\"J?9]\"*,S`Er#wp"));
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(arrayList1, arrayList0);
      assertSame(arrayList1, arrayList2);
      assertNotSame(arrayList2, arrayList0);
      assertSame(arrayList2, arrayList1);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getName());
      assertEquals("Po\"J?9]\"*,S`Er#wp", fiefdoms0.getOwner());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setConqueror("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals((-1075), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(3, true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("magyar");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals((-1075), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertNotNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList1.isEmpty());
      assertEquals(3, arrayList1.size());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      
      knight0.setName(">");
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      
      ArrayList<Retainers> arrayList2 = new ArrayList<Retainers>();
      assertNotNull(arrayList2);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      knight0.setRetainers(arrayList2);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      ArrayList<String> arrayList3 = knight0.conversation;
      assertNotNull(arrayList3);
      assertFalse(arrayList3.contains("magyar"));
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      fiefdoms0.setNeighbors(arrayList3);
      assertFalse(arrayList3.contains("magyar"));
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      
      fiefdoms0.setPeasants(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setFiefdomCastles(false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertNotNull(arrayList1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setViking(arrayList1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setValue(0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte) (-92);
      byteArray0[2] = (byte)0;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)32, (byte) (-92), (byte)0}, byteArray0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(755, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim(0, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(2912);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMagyar(0, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setPeasants(0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setValue(759);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      
      knight0.setKills(2);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(2, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      
      knight0.setName("viking");
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(2, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      
      ArrayList<Player> arrayList1 = knight0.getAllies();
      assertNotNull(arrayList1);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(2, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setVassalsList(arrayList1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getwound());
      assertEquals(2, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setKingdom(true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMagyar(2912, true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(2912, int0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles(2912);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(759, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Knight knight0 = new Knight("", "MAX calculated: ", "MAX calculated: ");
      assertNotNull(knight0);
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(""));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      assertNotNull(unaryOperator0);
      
      arrayList0.replaceAll(unaryOperator0);
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 0, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      
      fiefdoms0.setName("");
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      
      fiefdoms0.setFiefdomCastles(false);
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(4, floatArray0.length);
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals((-6737), true);
      assertFalse(arrayList0.contains(""));
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte) (-14);
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(4, byteArray0.length);
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new byte[] {(byte) (-1), (byte)2, (byte)78, (byte) (-14)}, byteArray0);
      assertEquals("MAX calculated: ", knight0.getRank());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("MAX calculated: ", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setMagyar((-3838), false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setLoyalVassals(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.buyPersonalCastles(1316);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      assertNotNull(arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Stream<Intruders> stream0 = arrayList0.stream();
      assertNotNull(stream0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Intruders intruders0 = new Intruders(".", ".");
      assertNotNull(intruders0);
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      
      fiefdoms0.setMagyar(arrayList0);
      assertTrue(arrayList0.contains(intruders0));
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setRebelliousVassals(627, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      String string0 = fiefdoms0.getName();
      assertNull(string0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Player> arrayList1 = new ArrayList<Player>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      
      ArrayList<Vassals> arrayList2 = fiefdoms1.getRebelliousVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      fiefdoms0.setLoyalVassals(arrayList2);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      boolean boolean1 = arrayList1.add((Player) null);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      fiefdoms0.setVassalsList(arrayList1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList3.equals((Object)arrayList0));
      assertNotNull(arrayList3);
      assertFalse(arrayList3.contains(intruders0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList3, arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getViking();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList4.equals((Object)arrayList0));
      assertNotNull(arrayList4);
      assertFalse(arrayList4.contains(intruders0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList4, arrayList0);
      assertSame(arrayList4, arrayList3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Player> arrayList5 = fiefdoms0.getVassalsList();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotNull(arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList5, arrayList1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, arrayList5.size());
      assertFalse(arrayList5.isEmpty());
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      
      fiefdoms2.setLoyalVassals((-2454), true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
      
      int int0 = fiefdoms0.getPeasants();
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertEquals(0, int0);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms2.setRebelliousVassals((-3159), true);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertNull(fiefdoms2.getOwner());
      assertEquals(0, fiefdoms2.getValue());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getConqueror());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setValue((-1075));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1075), fiefdoms0.getValue());
      
      fiefdoms0.setViking(0, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1075), fiefdoms0.getValue());
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "", "Ye j[g", 0, false, arrayList0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertFalse(arrayList0.contains(""));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals("Ye j[g", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      float[] floatArray0 = fiefdoms1.getShaderColor();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertFalse(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals("Ye j[g", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      fiefdoms0.setLoyalVassals((-1075), false);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1075), fiefdoms0.getValue());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      fiefdoms0.setRebelliousVassals((-410), true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1075), fiefdoms0.getValue());
      
      int int0 = fiefdoms1.getPeasants();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, int0);
      assertFalse(arrayList0.contains(""));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals("Ye j[g", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      ArrayList<String> arrayList1 = fiefdoms1.getInvaderType();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains(""));
      assertFalse(arrayList1.contains(""));
      assertSame(arrayList0, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals("Ye j[g", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner("U");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("U", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      int int0 = knight0.getTotalMoney();
      assertEquals(0, int0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      int int1 = knight0.getTotalMoney();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      knight0.setTotalMoney((-520));
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals((-520), knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      
      // Undeclared exception!
      try { 
        knight0.setFiefdoms("Ile-De-France", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class src.Map
         //
         verifyException("src.Knight", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "knight", "0O$[", 1, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("0O$["));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("0O$[", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("knight", fiefdoms0.getName());
      
      fiefdoms0.setLoyalVassals(0, false);
      assertFalse(arrayList0.contains("0O$["));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("0O$[", fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("knight", fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("knight", 1);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertNotNull(arrayList0);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = arrayList0.add("[p-K^Wa')?:=W?");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "[p-K^Wa')?:=W?", (String) null, (-2526), false, arrayList0);
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setRebelliousVassals((-2526), false);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertTrue(arrayList1.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertNotNull(arrayList2);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertTrue(arrayList2.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertSame(arrayList2, arrayList1);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      
      fiefdoms0.setKingdom(true);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setRebelliousVassals(2, false);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNotNull(arrayList3);
      assertTrue(arrayList0.contains("[p-K^Wa')?:=W?"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      boolean boolean3 = arrayList0.add("VP=]");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      assertTrue(arrayList0.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      ArrayList<Player> arrayList4 = fiefdoms0.getVassalsList();
      assertNull(arrayList4);
      assertTrue(arrayList0.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int1 = fiefdoms0.getPersonalCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertTrue(arrayList0.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int2 = fiefdoms0.getFiefdomCastles();
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
      assertTrue(arrayList0.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int3 = fiefdoms0.getPersonalCastles();
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertEquals(0, int3);
      assertTrue(arrayList0.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList5 = fiefdoms0.getInvaderType();
      assertNotNull(arrayList5);
      assertTrue(arrayList0.contains("VP=]"));
      assertTrue(arrayList5.contains("VP=]"));
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList5);
      assertSame(arrayList5, arrayList1);
      assertSame(arrayList5, arrayList0);
      assertSame(arrayList5, arrayList2);
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList5.isEmpty());
      assertEquals(2, arrayList5.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2526), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("[p-K^Wa')?:=W?", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(arrayList2);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(arrayList3);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "$c \"p?[Wih5S", "muslim", 793, false, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("$c \"p?[Wih5S", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(793, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("muslim", fiefdoms1.getOwner());
      
      ArrayList<String> arrayList4 = fiefdoms1.getNeighbors();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(arrayList4);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("$c \"p?[Wih5S", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(793, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("muslim", fiefdoms1.getOwner());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "5Nn,57E", "5Nn,57E", 0, true, (ArrayList<String>) null);
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5Nn,57E", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5Nn,57E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals((ArrayList<Vassals>) null);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5Nn,57E", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5Nn,57E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("5Nn,57E", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("5Nn,57E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      // Undeclared exception!
      try { 
        fiefdoms0.setRebelliousVassals((-2195), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setViking(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setConqueror("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setRebelliousVassals((-1075), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      knight0.setName((String) null);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      knight0.setTotalMoney((-1));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals((-1), knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      
      fiefdoms0.setConqueror("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      String string0 = fiefdoms0.getOwner();
      assertNull(string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPeasants(1442);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(intruders0));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Player> arrayList1 = knight0.getAllies();
      assertNotNull(arrayList1);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals((-1), knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      ArrayList<Player> arrayList2 = new ArrayList<Player>();
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotNull(arrayList2);
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      arrayList2.ensureCapacity(0);
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      fiefdoms0.setVassalsList(arrayList1);
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertNotSame(arrayList1, arrayList2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals((-1), knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setPersonalCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setKingdom(true);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.buyFiefdomCastles((-1));
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setOwner((String) null);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(1442, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "h#](D-Ec_6|3B`5kC", "h#](D-Ec_6|3B`5kC", 916, true, (ArrayList<String>) null);
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.buyPersonalCastles(916);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertEquals(916, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(0, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertEquals(916, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(916, fiefdoms0.getValue());
      assertEquals("h#](D-Ec_6|3B`5kC", fiefdoms0.getOwner());
      assertEquals(916, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList1 = new ArrayList<String>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setLoyalVassals(4024, false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      
      String string0 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setName((String) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setOwner((String) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setName("qd&JHYcHu]^?'4Ia");
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("qd&JHYcHu]^?'4Ia", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      
      int int0 = fiefdoms1.getPersonalCastles();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, int0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("qd&JHYcHu]^?'4Ia", fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setConqueror("");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles(3);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals((-1075), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(3, true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("magyar");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals((-1075), false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertNotNull(arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals(3, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      
      knight0.setName(">");
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      
      ArrayList<Retainers> arrayList2 = new ArrayList<Retainers>();
      assertNotNull(arrayList2);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      knight0.setRetainers(arrayList2);
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      ArrayList<String> arrayList3 = knight0.conversation;
      assertNotNull(arrayList3);
      assertFalse(arrayList3.contains("magyar"));
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      
      fiefdoms0.setNeighbors(arrayList3);
      assertFalse(arrayList3.contains("magyar"));
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(">", knight0.getName());
      assertEquals(0, knight0.getKills());
      
      fiefdoms0.setPeasants(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertNotNull(arrayList0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Iterator<String> iterator0 = arrayList0.iterator();
      assertNotNull(iterator0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      boolean boolean0 = arrayList0.add("");
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "viking", 0, false, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setKingdom(false);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setInvaderType(arrayList0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror("");
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      boolean boolean1 = arrayList0.add("");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertNull(arrayList1);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      
      boolean boolean2 = arrayList3.add(intruders0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertTrue(arrayList3.contains(intruders0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      
      List<Intruders> list0 = arrayList3.subList(0, 0);
      assertNotNull(list0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertTrue(arrayList3.contains(intruders0));
      assertFalse(list0.contains(intruders0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      fiefdoms0.setViking(arrayList3);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertTrue(arrayList3.contains(intruders0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      
      String string0 = fiefdoms0.getName();
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(arrayList3);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertTrue(arrayList3.contains(intruders0));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      
      fiefdoms0.buyPersonalCastles(0);
      assertFalse(arrayList0.contains("viking"));
      assertTrue(arrayList0.contains(""));
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Knight knight0 = new Knight("viking", "viking", "&HnV=#b");
      assertNotNull(knight0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getName());
      assertEquals("&HnV=#b", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("viking"));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "s", "viking", 1508, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("s"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getName());
      assertEquals("&HnV=#b", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1508, fiefdoms0.getValue());
      assertEquals("s", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertFalse(arrayList0.contains("s"));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("viking", knight0.getName());
      assertEquals("&HnV=#b", knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals("viking", knight0.getRank());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1508, fiefdoms0.getValue());
      assertEquals("s", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.loyalVassals;
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNotNull(arrayList1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(924, true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      fiefdoms0.setPersonalCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setConqueror((String) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setValue(3);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(0, false);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertEquals(3, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setValue(2);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(0, false);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setLoyalVassals(2, true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setRebelliousVassals((-1), true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      int int1 = fiefdoms0.getPeasants();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(arrayList0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim(3246, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner("magyar");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner("magyar");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setPersonalCastles(2);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(644, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      
      intruders0.setLocation("Uoco[,(9suxnz%y|/w");
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertEquals("Uoco[,(9suxnz%y|/w", intruders0.getLocation());
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertEquals("Uoco[,(9suxnz%y|/w", intruders0.getLocation());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(arrayList1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "ir+)fSYm", "", 644, true, (ArrayList<String>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(644, fiefdoms1.getValue());
      assertEquals("ir+)fSYm", fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      
      fiefdoms1.buyPersonalCastles(899);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(644, fiefdoms1.getValue());
      assertEquals("ir+)fSYm", fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(899, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      
      fiefdoms1.setPersonalCastles(true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(644, fiefdoms1.getValue());
      assertEquals("ir+)fSYm", fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(900, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      
      fiefdoms0.setRebelliousVassals(3, true);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)97;
      fiefdoms0.setLoyalVassals(858, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.shaderColor = null;
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      byteArray0[1] = (byte) (-21);
      fiefdoms0.selectioncolor = byteArray0;
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setOwner("src.Vassals");
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      byte[] byteArray1 = new byte[2];
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      fiefdoms0.selectioncolor = byteArray1;
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      byteArray1[0] = (byte) (-38);
      fiefdoms0.buyFiefdomCastles((-1));
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      byteArray1[1] = (byte)12;
      boolean boolean0 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertFalse(boolean0);
      assertEquals(2, byteArray1.length);
      assertArrayEquals(new byte[] {(byte) (-38), (byte)12}, byteArray1);
      assertNotSame(byteArray1, byteArray0);
      
      fiefdoms0.setViking(0, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setMagyar((-1), false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNull(floatArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertNull(floatArray1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setLoyalVassals((-1468), false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNotNull(arrayList1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList2);
      assertSame(arrayList2, arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("src.Vassals", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(0, floatArray0.length);
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner("a");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("a", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner("a");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("a", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setKingdom(false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      float[] floatArray0 = new float[0];
      fiefdoms0.setKingdom(false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(0, floatArray0.length);
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMuslim((-1539), true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNotNull(arrayList0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertNull(arrayList1);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(arrayList2);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setFiefdomCastles(0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getMuslim();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertNotNull(arrayList3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      
      String string0 = fiefdoms1.getName();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      int int2 = fiefdoms1.getValue();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      ArrayList<Vassals> arrayList4 = fiefdoms1.getRebelliousVassals();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList4);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms2);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      
      fiefdoms2.setViking(3, false);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      
      ArrayList<Intruders> arrayList5 = fiefdoms2.getMagyar();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertTrue(arrayList5.equals((Object)arrayList3));
      assertTrue(arrayList5.equals((Object)arrayList0));
      assertNotNull(arrayList5);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(arrayList5, arrayList0);
      assertNotSame(arrayList5, arrayList3);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      
      int int3 = fiefdoms1.getFiefdomCastles();
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(int3 == int0);
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertEquals(0, int3);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      
      ArrayList<String> arrayList6 = fiefdoms2.getInvaderType();
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNull(arrayList6);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      
      fiefdoms2.setPersonalCastles(false);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals((-1), fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      
      fiefdoms0.setPeasants(1);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPeasants());
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      fiefdoms2.setViking(0, false);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals((-1), fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      
      fiefdoms2.setName("");
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals((-1), fiefdoms2.getPersonalCastles());
      assertEquals("", fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      knight0.setTotalMoney(0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Ile-De-France", "Ile-De-France", 0, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner("1ILj{5j");
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      boolean boolean0 = arrayList0.add("Ile-De-France");
      assertTrue(boolean0);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setMagyar(0, true);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      int int0 = fiefdoms0.getValue();
      assertEquals(0, int0);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      knight0.setSocket(socket0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setFiefdomCastles(0);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertNotNull(arrayList1);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setName("niL8,ewDh");
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("niL8,ewDh", fiefdoms0.getName());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("niL8,ewDh", fiefdoms0.getName());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setValue(2);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      fiefdoms0.setViking(0, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      fiefdoms0.setLoyalVassals(2, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setMagyar(2, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray1.length);
      assertNotNull(byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim(0, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertNotNull(arrayList2);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(924, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMagyar((-1), true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.buyFiefdomCastles((-3536));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertNull(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setLoyalVassals(2, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      
      knight0.setTotalMoney(0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Ile-De-France", "Ile-De-France", 0, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      
      fiefdoms0.setOwner("1ILj{5j");
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      
      fiefdoms0.setMagyar(0, true);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      knight0.setSocket(socket0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setMagyar(arrayList1);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setName("niL8,ewDh");
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("niL8,ewDh", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("niL8,ewDh", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setFiefdomCastles(true);
      assertFalse(arrayList0.contains("1ILj{5j"));
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("1ILj{5j", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("niL8,ewDh", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar(1, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      
      String string1 = knight0.getLocation();
      assertEquals("Ile-De-France", string1);
      assertNotNull(string1);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertNotNull(arrayList1);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      
      fiefdoms0.setNeighbors(arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setViking(3, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      
      String string1 = knight0.getLocation();
      assertEquals("Ile-De-France", string1);
      assertNotNull(string1);
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setName("%f");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("%f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim(924, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("%f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setRebelliousVassals(2, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("%f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setLoyalVassals(0, true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      
      String string2 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setPersonalCastles(false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      
      String string3 = fiefdoms0.getOwner();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNull(string3);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("%f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms1.setSelectioncolor(byteArray0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("%f", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      
      fiefdoms1.setMagyar(1, false);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertEquals((-1), fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPeasants(639);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles((-1932735280));
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setMagyar(2, false);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals((-1932735280), int0);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      byte[] byteArray1 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray1.length);
      assertNotNull(byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      assertNotNull(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      fiefdoms0.setMuslim(arrayList0);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Intruders> arrayList1 = new ArrayList<Intruders>();
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertNotNull(arrayList1);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      
      boolean boolean2 = arrayList1.add(intruders0);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertTrue(arrayList1.contains(intruders0));
      assertNotSame(arrayList1, arrayList0);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      
      arrayList1.trimToSize();
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertTrue(arrayList1.contains(intruders0));
      assertNotSame(arrayList1, arrayList0);
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      fiefdoms0.setMuslim(arrayList1);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertTrue(arrayList1.contains(intruders0));
      assertNotSame(arrayList1, arrayList0);
      assertEquals((-1932735280), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      
      fiefdoms0.setPersonalCastles((-1));
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotNull(arrayList2);
      assertTrue(arrayList2.contains(intruders0));
      assertSame(arrayList2, arrayList1);
      assertNotSame(arrayList2, arrayList0);
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      int int1 = fiefdoms0.getPersonalCastles();
      assertFalse(int1 == int0);
      assertEquals((-1), int1);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      byte[] byteArray2 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray2.length);
      assertNotNull(byteArray2);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray2);
      assertSame(byteArray2, byteArray1);
      assertSame(byteArray2, byteArray0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList3 = fiefdoms0.getInvaderType();
      assertNull(arrayList3);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getLoyalVassals();
      assertNotNull(arrayList4);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(639, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setViking(2, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim(0, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(2912);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMagyar(0, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNotNull(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      fiefdoms0.setPeasants(21);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(21, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setValue(1);
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(21, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      
      knight0.setKills(21);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(21, knight0.getKills());
      assertEquals(21, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      
      knight0.setName("viking");
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(21, knight0.getKills());
      assertEquals(21, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      
      ArrayList<Player> arrayList1 = knight0.getAllies();
      assertNotNull(arrayList1);
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(21, knight0.getKills());
      assertEquals(21, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setVassalsList(arrayList1);
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(21, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("viking", knight0.getName());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(21, knight0.getKills());
      assertEquals(21, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(2912, fiefdoms0.getPersonalCastles());
      assertEquals(21, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setLoyalVassals((-418), false);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      knight0.setTotalMoney(0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Ile-De-France", "Ile-De-France", 0, true, arrayList0);
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner("Ile-De-France");
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      knight0.setTotalMoney(0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      
      Intruders intruders0 = new Intruders();
      assertNotNull(intruders0);
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      
      fiefdoms0.setConqueror("viking");
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals("viking", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.buyPersonalCastles(1422);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string1 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string2 = fiefdoms1.getName();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string3 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string4 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string4);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string5 = fiefdoms1.getName();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string5);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.setOwner((String) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      String string6 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string6);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms0.setPeasants(1429);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1429, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals("viking", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(intruders0));
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1429, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals("viking", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Player> arrayList2 = knight0.getAllies();
      assertNotNull(arrayList2);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      arrayList2.ensureCapacity(0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("", knight0.getOrder());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      fiefdoms1.setVassalsList((ArrayList<Player>) null);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.setPersonalCastles(true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.setKingdom(true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      
      fiefdoms1.buyFiefdomCastles(2262);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(1, fiefdoms1.getPersonalCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(924, true);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      
      String string1 = knight0.getLocation();
      assertEquals("Ile-De-France", string1);
      assertNotNull(string1);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setName("Ile-De-France");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim(924, false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals(924, true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertNull(arrayList1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      fiefdoms1.setMagyar((-1397), true);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      ArrayList<Intruders> arrayList2 = fiefdoms1.getMuslim();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      
      String string2 = fiefdoms1.getName();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      int int0 = fiefdoms1.getPeasants();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(0, int0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      fiefdoms1.setPeasants((-1397));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals((-1397), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      String string3 = fiefdoms1.getOwner();
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNull(string3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals((-1397), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      
      fiefdoms1.setSelectioncolor(byteArray0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals((-1397), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("");
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("");
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNotNull(fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(924, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNotNull(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      Knight knight0 = new Knight();
      assertNotNull(knight0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      
      knight0.setScore(924);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(924, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      
      String string0 = knight0.getName();
      assertNull(string0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(924, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.isDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(string1);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setValue(3);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setViking(0, false);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNotNull(floatArray0);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertNull(arrayList0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      boolean boolean1 = fiefdoms0.isKingdom();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNotNull(arrayList1);
      assertEquals(924, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(1, int0);
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }
}
