/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 17:26:22 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Image;
import jigl.image.InterpolationMethod;
import jigl.image.types.InterpolatedRealGrayImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterpolatedRealGrayImage_ESTest extends InterpolatedRealGrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 321);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(321, interpolatedRealGrayImage0.Y());
      
      interpolatedRealGrayImage0.splat(3.0F, 2.0F, 2.0F);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(321, interpolatedRealGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 857);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(857, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(857, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(145.0F, 445.68F, 445.68F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(0.0F, 0.0F, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 276);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(276, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(276, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(3430.49F, 387.6073F, 382.4F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 387
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(1.0F, 0.0F, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(0, 0);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(0.0F, interpolatedRealGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, interpolatedRealGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), interpolatedRealGrayImage0.max(), 0.01F);
      assertEquals(0, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(0.0, interpolatedRealGrayImage0.sqrSum(), 0.01);
      assertEquals(0, interpolatedRealGrayImage0.Y());
      assertEquals(0.0F, interpolatedRealGrayImage0.absSum(), 0.01F);
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(2171.822F, 5852.586F, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5853
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(1, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp((-3048.2725F), 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3048
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2, 2);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2, interpolatedRealGrayImage0.X());
      assertEquals(2, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(975, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 975
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 255);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(255, interpolatedRealGrayImage0.Y());
      
      interpolatedRealGrayImage0.splat(0.0F, 1, 0.0F);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(255, interpolatedRealGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2, 2);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2, interpolatedRealGrayImage0.X());
      assertEquals(2, interpolatedRealGrayImage0.Y());
      
      interpolatedRealGrayImage0.splat(0.0F, 1.0F, (-1291.1771F));
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2, interpolatedRealGrayImage0.X());
      assertEquals(2, interpolatedRealGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      interpolatedRealGrayImage0.splat(0, 0.0F, (-32768.0F));
      assertEquals((-32768.0F), interpolatedRealGrayImage0.max(), 0.01F);
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals((-32768.0F), interpolatedRealGrayImage0.min(), 0.01F);
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals((-32768.0F), interpolatedRealGrayImage0.addSum(), 0.01F);
      assertEquals(32768.0F, interpolatedRealGrayImage0.absSum(), 0.01F);
      assertEquals(1.073741824E9, interpolatedRealGrayImage0.sqrSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2456, 2456);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2456, interpolatedRealGrayImage0.Y());
      assertEquals(2456, interpolatedRealGrayImage0.X());
      
      interpolatedRealGrayImage0.splat(2156.999F, 843.7242F, 2156.999F);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2456, interpolatedRealGrayImage0.Y());
      assertEquals(2456, interpolatedRealGrayImage0.X());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = interpolatedRealGrayImage0.copy();
      assertNotNull(interpolatedRealGrayImage1);
      assertNotSame(interpolatedRealGrayImage0, interpolatedRealGrayImage1);
      assertNotSame(interpolatedRealGrayImage1, interpolatedRealGrayImage0);
      assertFalse(interpolatedRealGrayImage1.equals((Object)interpolatedRealGrayImage0));
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(1, interpolatedRealGrayImage1.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage1.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage1.X());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      interpolatedRealGrayImage0.setInterpolationMethod((InterpolationMethod) null);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertNull(interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.splat(2425, (-1757.636F), 35.377094F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = new InterpolatedRealGrayImage((RealGrayImage) interpolatedRealGrayImage0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = new InterpolatedRealGrayImage(interpolatedRealGrayImage0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = null;
      try {
        interpolatedRealGrayImage0 = new InterpolatedRealGrayImage((InterpolatedRealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = null;
      try {
        interpolatedRealGrayImage0 = new InterpolatedRealGrayImage((-992), (-992));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = new InterpolatedRealGrayImage((RealGrayImage) interpolatedRealGrayImage0);
      assertNotNull(interpolatedRealGrayImage1);
      assertFalse(interpolatedRealGrayImage1.equals((Object)interpolatedRealGrayImage0));
      assertEquals(1, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(1, interpolatedRealGrayImage0.X());
      assertEquals(1, interpolatedRealGrayImage1.X());
      assertEquals(1, interpolatedRealGrayImage1.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage1.getInterpolationMethod());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(0, 0);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(0.0F, interpolatedRealGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, interpolatedRealGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), interpolatedRealGrayImage0.max(), 0.01F);
      assertEquals(0.0, interpolatedRealGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, interpolatedRealGrayImage0.absSum(), 0.01F);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(0, interpolatedRealGrayImage0.X());
      assertEquals(0, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = interpolatedRealGrayImage0.getInterpolationMethod();
      assertEquals(InterpolationMethod.NEIGHBOR, interpolationMethod0);
      assertEquals(0.0F, interpolatedRealGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, interpolatedRealGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), interpolatedRealGrayImage0.max(), 0.01F);
      assertEquals(0.0, interpolatedRealGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, interpolatedRealGrayImage0.absSum(), 0.01F);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(0, interpolatedRealGrayImage0.X());
      assertEquals(0, interpolatedRealGrayImage0.Y());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.splat(2425, 1270.1206F, 2425);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2425
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2405, 2405);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2405, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2405, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2405, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2405, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.splat(2405, 2405, 3428.9F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2405
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(196, 196);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(196, interpolatedRealGrayImage0.X());
      assertEquals(196, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.interpolationMethod = interpolationMethod0;
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(196, interpolatedRealGrayImage0.X());
      assertEquals(196, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.accum(196, 196, 196);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 196
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(948.3177F, 2425);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2425
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(3.0F, 3.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(2425, (-1293.0728F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1293
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      assertEquals(InterpolationMethod.CUBIC, interpolatedRealGrayImage0.getInterpolationMethod());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp((-1757.636F), (-1757.636F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1757
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(384, 384);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(384, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(384, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(384, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(384, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(384, 1.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 384
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      assertNotNull(interpolatedRealGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      assertEquals(2425, interpolatedRealGrayImage0.X());
      assertEquals(InterpolationMethod.LINEAR, interpolatedRealGrayImage0.getInterpolationMethod());
      assertEquals(2425, interpolatedRealGrayImage0.Y());
      
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp((-647.7F), (-647.7F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -647
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2456, 2456);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(2456, 2456);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2456
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1473, 1473);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.LINEAR;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(0.0F, 1473);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1473
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      interpolatedRealGrayImage0.setInterpolationMethod(interpolationMethod0);
      // Undeclared exception!
      try { 
        interpolatedRealGrayImage0.interp(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.InterpolatedRealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(2425, 2425);
      // Undeclared exception!
      interpolatedRealGrayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(0, 0);
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = interpolatedRealGrayImage0.copy();
      assertEquals(0, interpolatedRealGrayImage1.X());
      assertEquals(0, interpolatedRealGrayImage1.Y());
      assertNotSame(interpolatedRealGrayImage1, interpolatedRealGrayImage0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = null;
      try {
        interpolatedRealGrayImage0 = new InterpolatedRealGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = null;
      try {
        interpolatedRealGrayImage0 = new InterpolatedRealGrayImage((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = null;
      try {
        interpolatedRealGrayImage0 = new InterpolatedRealGrayImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InterpolatedRealGrayImage interpolatedRealGrayImage0 = new InterpolatedRealGrayImage(1, 1);
      InterpolatedRealGrayImage interpolatedRealGrayImage1 = new InterpolatedRealGrayImage(interpolatedRealGrayImage0);
      assertEquals(1, interpolatedRealGrayImage1.X());
  }
}
