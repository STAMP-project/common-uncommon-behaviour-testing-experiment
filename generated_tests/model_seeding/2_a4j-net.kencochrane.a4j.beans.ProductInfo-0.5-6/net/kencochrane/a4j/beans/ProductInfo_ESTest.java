/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 16:15:30 GMT 2019
 */

package net.kencochrane.a4j.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import net.kencochrane.a4j.beans.Accessories;
import net.kencochrane.a4j.beans.ProductDetails;
import net.kencochrane.a4j.beans.ProductInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProductInfo_ESTest extends ProductInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.totalResults = "1[9D5)1j`0Vt8G.9";
      String string0 = productInfo0.getTotalResults();
      assertEquals("1[9D5)1j`0Vt8G.9", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.totalResults = "";
      String string0 = productInfo0.getTotalResults();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.setTotalPages("Total results = iKV*oVfHB\nTotal pages = null\n# of products = 0\n");
      String string0 = productInfo0.getTotalPages();
      assertEquals("Total results = iKV*oVfHB\nTotal pages = null\n# of products = 0\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.totalPages = "";
      String string0 = productInfo0.getTotalPages();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[0];
      productInfo0.setDetails(productDetailsArray0);
      ArrayList arrayList0 = productInfo0.getProductsArrayList();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      productInfo0.setDetails(productDetailsArray0);
      ArrayList arrayList0 = productInfo0.getProductsArrayList();
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.setListName("c)},,");
      String string0 = productInfo0.getListName();
      assertEquals("c)},,", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      productInfo0.setDetails(productDetailsArray0);
      ProductDetails[] productDetailsArray1 = productInfo0.getDetails();
      assertEquals(1, productDetailsArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[0];
      productInfo0.setDetails(productDetailsArray0);
      ProductDetails[] productDetailsArray1 = productInfo0.getDetails();
      assertFalse(productDetailsArray1.equals((Object)productDetailsArray0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      ProductDetails productDetails0 = new ProductDetails();
      Accessories accessories0 = new Accessories();
      String[] stringArray0 = new String[3];
      accessories0.setAccessory(stringArray0);
      productDetails0.setAccessories(accessories0);
      productDetailsArray0[0] = productDetails0;
      productInfo0.setDetails(productDetailsArray0);
      // Undeclared exception!
      try { 
        productInfo0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = new Integer(11);
      arrayList0.add(integer0);
      productInfo0.products = arrayList0;
      // Undeclared exception!
      try { 
        productInfo0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to net.kencochrane.a4j.beans.ProductDetails
         //
         verifyException("net.kencochrane.a4j.beans.ProductInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      // Undeclared exception!
      try { 
        productInfo0.setDetails((ProductDetails[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.kencochrane.a4j.beans.ProductInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      productInfo0.products = arrayList0;
      arrayList0.add((Object) productInfo0);
      // Undeclared exception!
      try { 
        productInfo0.printProductList();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.kencochrane.a4j.beans.ProductInfo cannot be cast to net.kencochrane.a4j.beans.ProductDetails
         //
         verifyException("net.kencochrane.a4j.beans.ProductInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      arrayList0.add((Object) productInfo0);
      productInfo0.products = arrayList0;
      // Undeclared exception!
      try { 
        productInfo0.getDetails();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ArrayList arrayList0 = productInfo0.getProductsArrayList();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      String string0 = productInfo0.getTotalPages();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      String string0 = productInfo0.getTotalResults();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      ProductDetails productDetails0 = new ProductDetails();
      productDetailsArray0[0] = productDetails0;
      productInfo0.setDetails(productDetailsArray0);
      String string0 = productInfo0.printProductList();
      assertEquals("Total results = null\nTotal pages = null\n< 0 > null : null - null\n# of products = 1\n", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      productInfo0.setDetails(productDetailsArray0);
      // Undeclared exception!
      try { 
        productInfo0.printProductList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.kencochrane.a4j.beans.ProductInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      String string0 = productInfo0.toString();
      assertEquals("Total results = null\nTotal pages = null\nproducts is null \n", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      ProductDetails[] productDetailsArray0 = new ProductDetails[1];
      productInfo0.setDetails(productDetailsArray0);
      String string0 = productInfo0.toString();
      assertEquals("Total results = null\nTotal pages = null\nnull\n# of products = 1\n", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      // Undeclared exception!
      try { 
        productInfo0.getDetails();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.kencochrane.a4j.beans.ProductInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.setTotalResults("9'>yQVy");
      assertNull(productInfo0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      String string0 = productInfo0.getListName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      String string0 = productInfo0.printProductList();
      assertEquals("Total results = null\nTotal pages = null\nproducts is null \n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProductInfo productInfo0 = new ProductInfo();
      productInfo0.setListName("");
      String string0 = productInfo0.getListName();
      assertEquals("", string0);
  }
}
