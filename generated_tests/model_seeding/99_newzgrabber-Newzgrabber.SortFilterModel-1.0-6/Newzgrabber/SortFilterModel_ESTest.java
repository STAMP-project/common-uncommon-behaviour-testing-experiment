/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 13:22:48 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.SortFilterModel;
import java.awt.MultipleGradientPaint;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortFilterModel_ESTest extends SortFilterModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel((TableModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      defaultTableModel0.setRowCount(1406);
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      Stack<JTableHeader> stack0 = new Stack<JTableHeader>();
      assertNotNull(stack0);
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.empty());
      
      defaultTableModel0.setColumnIdentifiers((Vector) stack0);
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.isEmpty());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.empty());
      
      JTable jTable0 = new JTable();
      assertNotNull(jTable0);
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      
      sortFilterModel0.setTable(jTable0);
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      
      sortFilterModel0.updateTable();
      sortFilterModel0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableStructureChanged();
      JTable jTable0 = new JTable(defaultTableModel0);
      assertNotNull(jTable0);
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.removeTableModelListener(jTable0);
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.mouseEntered((MouseEvent) null);
      sortFilterModel0.sort(2300);
      sortFilterModel0.mouseExited((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1030));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      Object object0 = sortFilterModel0.getValueAt(3, (-1030));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      boolean boolean0 = true;
      sortFilterModel0.setSort(true);
      int int1 = sortFilterModel0.getColumnCount();
      assertEquals(2315, int1);
      assertTrue(int1 == int0);
      
      JTable jTable0 = null;
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, 0);
      assertNotNull(defaultTableModel0);
      
      boolean boolean0 = defaultTableModel0.isCellEditable((-4068), (-4068));
      assertTrue(boolean0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.updateTable();
      int int0 = sortFilterModel0.getRowCount();
      assertEquals(0, int0);
      
      JLabel jLabel0 = new JLabel("");
      assertNotNull(jLabel0);
      assertFalse(jLabel0.getIgnoreRepaint());
      assertTrue(jLabel0.getFocusTraversalKeysEnabled());
      assertFalse(jLabel0.isFocusTraversalPolicySet());
      assertFalse(jLabel0.isFocusCycleRoot());
      assertFalse(jLabel0.isFocusTraversalPolicyProvider());
      
      MouseWheelEvent mouseWheelEvent0 = null;
      try {
        mouseWheelEvent0 = new MouseWheelEvent(jLabel0, 0, 0L, 0, (-709), 0, 178, 0, 0, false, 1974, 2336, (-709));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      defaultTableModel0.fireTableRowsUpdated(2315, (-483));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 2418, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2418
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      defaultTableModel0.addColumn(object0);
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2316, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      JTable jTable0 = new JTable(2315, 2315);
      assertNotNull(jTable0);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.removeTableModelListener(jTable0);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.mouseEntered((MouseEvent) null);
      sortFilterModel0.sort(0);
      sortFilterModel0.mousePressed((MouseEvent) null);
      sortFilterModel0.sortTable(2507);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.sort(2297);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      boolean boolean0 = sortFilterModel0.isCellEditable(0, (-184));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2304, 2304);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.mouseClicked((MouseEvent) null);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(2304);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2304 >= 2304
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable((-184), (-2068));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -184
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      defaultTableModel0.addColumn(object0);
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2316, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      JTable jTable0 = new JTable(2315, 2315);
      assertNotNull(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.getIgnoreRepaint());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.removeTableModelListener(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.getIgnoreRepaint());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      
      sortFilterModel0.mouseEntered((MouseEvent) null);
      sortFilterModel0.sort(0);
      sortFilterModel0.mouseExited((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2335, 2335);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.sortTable(2335);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(2335);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2335 >= 2335
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, 0);
      assertNotNull(defaultTableModel0);
      
      boolean boolean0 = defaultTableModel0.isCellEditable((-4068), (-4068));
      assertTrue(boolean0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      String string0 = sortFilterModel0.getColumnName(0);
      assertEquals("A", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableDataChanged();
      JTable jTable0 = new JTable();
      assertNotNull(jTable0);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      
      sortFilterModel0.addTableModelListener(jTable0);
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      
      Class class0 = sortFilterModel0.getColumnClass((-1017));
      assertNotNull(class0);
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertFalse(class0.isInterface());
      assertFalse(class0.isPrimitive());
      assertEquals(1, class0.getModifiers());
      assertEquals("class java.lang.Object", class0.toString());
      assertFalse(class0.isArray());
      
      Object object0 = sortFilterModel0.getValueAt(1593, (-1017));
      assertNull(object0);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt((Object) null, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 2315, 2315);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2315
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      defaultTableModel0.setColumnCount(2315);
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      defaultTableModel0.fireTableRowsUpdated(2315, 2272);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.setValueAt(defaultTableModel0, 2267, 2272);
      sortFilterModel0.updateTable();
      Class class0 = sortFilterModel0.getColumnClass(1);
      assertNotNull(class0);
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertEquals("class java.lang.Object", class0.toString());
      assertEquals(1, class0.getModifiers());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, 0);
      assertNotNull(defaultTableModel0);
      
      MultipleGradientPaint.CycleMethod multipleGradientPaint_CycleMethod0 = MultipleGradientPaint.CycleMethod.NO_CYCLE;
      assertEquals(MultipleGradientPaint.CycleMethod.NO_CYCLE, multipleGradientPaint_CycleMethod0);
      
      defaultTableModel0.addColumn((Object) multipleGradientPaint_CycleMethod0);
      boolean boolean0 = defaultTableModel0.isCellEditable((-4068), (-4068));
      assertTrue(boolean0);
      
      Class<JTableHeader> class0 = JTableHeader.class;
      JTableHeader[] jTableHeaderArray0 = defaultTableModel0.getListeners(class0);
      assertEquals(0, jTableHeaderArray0.length);
      assertNotNull(jTableHeaderArray0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableDataChanged();
      sortFilterModel0.updateTable();
      sortFilterModel0.fireTableCellUpdated(1127, 1127);
      sortFilterModel0.fireTableRowsDeleted((-2501), (-4068));
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(1, int0);
      
      Class class1 = sortFilterModel0.getColumnClass((-4068));
      assertNotNull(class1);
      assertEquals("class java.lang.Object", class1.toString());
      assertFalse(class1.isAnnotation());
      assertEquals(1, class1.getModifiers());
      assertFalse(class1.isEnum());
      assertFalse(class1.isSynthetic());
      assertFalse(class1.isPrimitive());
      assertFalse(class1.isInterface());
      assertFalse(class1.isArray());
      
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      String string0 = sortFilterModel0.getColumnName((-3476));
      assertEquals("", string0);
      assertNotNull(string0);
      
      sortFilterModel0.mouseClicked((MouseEvent) null);
      Class class2 = sortFilterModel0.getColumnClass(2900);
      assertSame(class2, class1);
      assertNotNull(class2);
      assertFalse(class2.isPrimitive());
      assertFalse(class2.isAnnotation());
      assertFalse(class2.isEnum());
      assertFalse(class2.isSynthetic());
      assertEquals(1, class2.getModifiers());
      assertFalse(class2.isInterface());
      assertEquals("class java.lang.Object", class2.toString());
      assertFalse(class2.isArray());
      
      sortFilterModel0.mouseClicked((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2304, 2304);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(2304);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2304 >= 2304
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableStructureChanged();
      sortFilterModel0.updateTable();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2304, 2304);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.sort(2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableDataChanged();
      JTable jTable0 = new JTable();
      assertNotNull(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusCycleRoot());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      
      sortFilterModel0.addTableModelListener(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertFalse(jTable0.isFocusCycleRoot());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      
      Class class0 = sortFilterModel0.getColumnClass((-1017));
      assertNotNull(class0);
      assertEquals("class java.lang.Object", class0.toString());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertFalse(class0.isPrimitive());
      assertEquals(1, class0.getModifiers());
      
      Object object0 = sortFilterModel0.getValueAt(1593, (-1017));
      assertNull(object0);
      
      sortFilterModel0.updateTable();
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      Class<?> class0 = defaultTableModel0.getColumnClass((-1017));
      assertNotNull(class0);
      assertFalse(class0.isPrimitive());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      assertEquals(1, class0.getModifiers());
      assertFalse(class0.isInterface());
      assertEquals("class java.lang.Object", class0.toString());
      assertFalse(class0.isArray());
      
      Vector<String> vector0 = new Vector<String>();
      assertFalse(vector0.contains(string0));
      assertNotNull(vector0);
      assertTrue(vector0.isEmpty());
      assertEquals("[]", vector0.toString());
      assertEquals(0, vector0.size());
      assertEquals(10, vector0.capacity());
      
      defaultTableModel0.setDataVector(vector0, vector0);
      assertFalse(vector0.contains(string0));
      assertTrue(vector0.isEmpty());
      assertEquals("[]", vector0.toString());
      assertEquals(0, vector0.size());
      assertEquals(10, vector0.capacity());
      
      Class class1 = sortFilterModel0.getColumnClass(293);
      assertNotNull(class1);
      assertFalse(class1.isEnum());
      assertFalse(class1.isSynthetic());
      assertFalse(class1.isAnnotation());
      assertEquals("class java.lang.Object", class1.toString());
      assertFalse(class1.isArray());
      assertFalse(class1.isInterface());
      assertFalse(class1.isPrimitive());
      assertEquals(1, class1.getModifiers());
      
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt("", 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2339, 2339);
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      int int0 = sortFilterModel0.getRowCount();
      assertEquals(2339, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableStructureChanged();
      sortFilterModel0.sortTable(1349);
      sortFilterModel0.mouseReleased((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.sortTable(2315);
      Class class0 = sortFilterModel0.getColumnClass(2315);
      assertNotNull(class0);
      assertEquals("class java.lang.Object", class0.toString());
      assertFalse(class0.isPrimitive());
      assertFalse(class0.isInterface());
      assertFalse(class0.isArray());
      assertEquals(1, class0.getModifiers());
      assertFalse(class0.isAnnotation());
      assertFalse(class0.isEnum());
      assertFalse(class0.isSynthetic());
      
      sortFilterModel0.sort(2315);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      assertNotNull(defaultTableModel0);
      
      String string0 = defaultTableModel0.getColumnName((-1017));
      assertEquals("", string0);
      assertNotNull(string0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      String string1 = sortFilterModel0.getColumnName((-1017));
      assertEquals("", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 2315;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int1 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int1);
      assertTrue(int1 == int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.setSort(true);
      int int2 = sortFilterModel0.getColumnCount();
      assertEquals(2315, int2);
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      int int1 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int1);
      assertTrue(int1 == int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      JTable jTable0 = new JTable(2315, 2292);
      assertNotNull(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      
      sortFilterModel0.removeTableModelListener(jTable0);
      assertFalse(jTable0.isFocusTraversalPolicyProvider());
      assertFalse(jTable0.isFocusCycleRoot());
      assertFalse(jTable0.getIgnoreRepaint());
      assertFalse(jTable0.isFocusTraversalPolicySet());
      assertTrue(jTable0.getFocusTraversalKeysEnabled());
      
      sortFilterModel0.mouseEntered((MouseEvent) null);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(2315);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2315 >= 2315
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      assertNotNull(defaultTableModel0);
      
      int int0 = defaultTableModel0.getColumnCount();
      assertEquals(2315, int0);
      
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      assertNotNull(sortFilterModel0);
      
      sortFilterModel0.fireTableStructureChanged();
      sortFilterModel0.sortTable(1349);
      int int1 = sortFilterModel0.getRowCount();
      assertEquals(2315, int1);
      assertTrue(int1 == int0);
      
      String string0 = defaultTableModel0.getColumnName(2300);
      assertEquals("CJM", string0);
      assertNotNull(string0);
      
      sortFilterModel0.sort(1961);
      Object object0 = sortFilterModel0.getValueAt(528, 1961);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      Object object0 = new Object();
      defaultTableModel0.addColumn(object0);
      Integer integer0 = new Integer(2315);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable(2315, 2315);
      Integer.sum((-892), 2105);
      sortFilterModel0.removeTableModelListener(jTable0);
      sortFilterModel0.mouseEntered((MouseEvent) null);
      sortFilterModel0.sort((int) integer0);
      int int0 = sortFilterModel0.getRowCount();
      assertEquals(2315, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, 0);
      defaultTableModel0.isCellEditable((-4068), (-4068));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2315, 2315);
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) sortFilterModel0;
      objectArray0[1] = (Object) defaultTableModel0;
      objectArray0[2] = (Object) sortFilterModel0;
      MultipleGradientPaint.CycleMethod multipleGradientPaint_CycleMethod0 = MultipleGradientPaint.CycleMethod.REFLECT;
      objectArray0[3] = (Object) multipleGradientPaint_CycleMethod0;
      objectArray0[4] = (Object) sortFilterModel0;
      defaultTableModel0.setColumnIdentifiers(objectArray0);
      sortFilterModel0.getValueAt(2315, 2315);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(2315, 2534);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2315
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }
}
