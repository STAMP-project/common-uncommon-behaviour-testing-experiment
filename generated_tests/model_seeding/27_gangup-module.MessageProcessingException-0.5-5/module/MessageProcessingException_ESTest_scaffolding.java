/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Nov 07 16:11:44 GMT 2019
 */

package module;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class MessageProcessingException_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "module.MessageProcessingException"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/Users/pooria/Documents/GitHub/evosuite-model-seeding-empirical-evaluation"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/t4/0qd1kfm97tz9g17z439t2gmm0000gn/T/"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MessageProcessingException_ESTest_scaffolding.class.getClassLoader() ,
      "module.MessageProcessingException",
      "module.ExampleModule",
      "module.MessageDeliveryException",
      "state.Packable",
      "module.RuleSet",
      "module.ModuleSubscriptionException",
      "state.Party",
      "module.cvs",
      "module.ModuleRegisterException",
      "module.mod",
      "module.IRCSession",
      "module.ClientNetworkModule",
      "module.Kernel",
      "state.GameState",
      "module.ModuleInfo",
      "module.NetworkModule",
      "util.ManagedObject",
      "module.Message",
      "module.AbstractModule",
      "state.Action",
      "module.NetworkException",
      "util.ObjectManager",
      "module.MessageTimeoutException",
      "state.Player",
      "module.IRCProxyModule",
      "module.ConfigModule",
      "state.NetworkData",
      "module.ServerNetworkModule",
      "module.GameModule",
      "util.TaintedByteArrayOutputStream",
      "state.PackingException",
      "module.ModuleLoadException",
      "module.ModuleUnloadException",
      "module.Connection",
      "module.MessageRuleSet",
      "module.Module",
      "state.TextMessage",
      "module.Logger",
      "util.TaintedByteArrayInputStream"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MessageProcessingException_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "module.MessageProcessingException",
      "module.AbstractModule",
      "module.IRCProxyModule",
      "module.ConfigModule",
      "module.ModuleInfo",
      "module.MessageDeliveryException",
      "module.ServerNetworkModule",
      "module.ClientNetworkModule",
      "module.Logger",
      "module.ExampleModule",
      "module.ModuleLoadException",
      "module.GameModule",
      "module.MessageTimeoutException",
      "module.ModuleRegisterException",
      "module.ModuleUnloadException",
      "util.ManagedObject",
      "module.Message"
    );
  }
}
