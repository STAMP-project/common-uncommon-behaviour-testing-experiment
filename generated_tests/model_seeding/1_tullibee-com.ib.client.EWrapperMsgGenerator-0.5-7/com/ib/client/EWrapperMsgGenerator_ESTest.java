/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 20:00:40 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "", 0.0, (String) null, "", (-752), "", (String) null, "|s[n0", (String) null, "`bDXJ:`ra4q)QY)%v", "k0G#Acn'3Yn;PlqO", " hasGaps=", (String) null);
      String string0 = EWrapperMsgGenerator.scannerData(1509, (-781), contractDetails0, "G:f*JF9/%8", "`bDXJ:`ra4q)QY)%v", "l!R)++B#;5[Y#pKH'", "6Sx`r^,R`KHug=");
      assertEquals("id = 1509 rank=-781 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass= distance=G:f*JF9/%8 benchmark=`bDXJ:`ra4q)QY)%v projection=l!R)++B#;5[Y#pKH' legsStr=6Sx`r^,R`KHug=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-3581), 1000L, (-3581), 1000L, 1000L, (-1.0), (-3581), (-3581), (-3581));
      assertEquals("id=-3581 time = 1000 open=-3581.0 high=1000.0 low=1000.0 close=-1.0 volume=-3581 count=-3581 WAP=-3581.0", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(0, 0, 0, 0, 0.0, 0, 1904L, 0.0, 1);
      assertEquals("id=0 time = 0 open=0.0 high=0.0 low=0.0 close=0.0 volume=1904 count=1 WAP=0.0", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(1587, "com.ib.client.TagValue", 0.0, 0.0, (-262), (-810.87), 0, 173, 1587, false);
      assertEquals("id=1587 date = com.ib.client.TagValue open=0.0 high=0.0 low=-262.0 close=-810.87 volume=0 count=173 WAP=1587.0 hasGaps=false", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-1479), "", 3123.0439, 0.0, (-4717), 275.2979, 10, 862, 0.0, false);
      assertEquals("id=-1479 date =  open=3123.0439 high=0.0 low=-4717.0 close=275.2979 volume=10 count=862 WAP=0.0 hasGaps=false", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(3344, 3344, "com.ib.client.UnderComp", "id = -893 =============== end ===============");
      assertEquals("MsgId=3344 :: MsgType=3344 :: Origin=id = -893 =============== end =============== :: Message=com.ib.client.UnderComp", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(13, 3530, "]0^dI", "]0^dI");
      assertEquals("MsgId=13 :: MsgType=3530 :: Origin=]0^dI :: Message=]0^dI", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-4717), 1401, "FA: null ", (-601), 862, 862, (-4717));
      assertEquals("updateMktDepth: -4717 1401 FA: null  -601 862 862.0 -4717", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(0, 552, (-689), 0, (-1951.0504470435), 10);
      assertEquals("updateMktDepth: 0 552 -689 0 -1951.0504470435 10", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 298.75437594, 298.75437594, 298.75437594, 1.0, 1.0, "xzpQ`tl[~8X");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 298.75437594 298.75437594 298.75437594 1.0 1.0 xzpQ`tl[~8X", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(1851, "1EbwQ-", (-2452), 99, 1851, 0, 0, 1222.12078748, Integer.MAX_VALUE, "SCANNER PARAMETERS:");
      assertEquals("order status: orderId=1851 clientId=2147483647 permId=0 status=1EbwQ- filled=-2452 remaining=99 avgFillPrice=1851.0 lastFillPrice=1222.12078748 parent Id=0 whyHeld=SCANNER PARAMETERS:", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(0, 41, 2441.61, (String) null, 2441.61, 0, "9", 1.7976931348623157E308, 1616.46881);
      assertEquals("id=0  openEFP: basisPoints = 2441.61/null impliedFuture = 2441.61 holdDays = 0 futureExpiry = 9 dividendImpact = 1.7976931348623157E308 dividends to expiry = 1616.46881", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(1233, 1233, 1233, "^[@yOKBL}G", 1233, 2144248084, "^[@yOKBL}G", 2144248084, 1233);
      assertEquals("id=1233  unknown: basisPoints = 1233.0/^[@yOKBL}G impliedFuture = 1233.0 holdDays = 2144248084 futureExpiry = ^[@yOKBL}G dividendImpact = 2.144248084E9 dividends to expiry = 1233.0", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 'b', 1, 1.7976931348623157E308, 0);
      assertEquals("id=0  modelOptComp: vol = 98.0 delta = 1.0: modelPrice = N/A: pvDividend = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation('n', 13, 1.7976931348623157E308, 0, 0.0, 1.7976931348623157E308);
      assertEquals("id=110  modelOptComp: vol = N/A delta = 0.0: modelPrice = 0.0: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize(186, 186, 63);
      assertEquals("id=186  unknown=63", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSize((-501), 0, (-501));
      assertEquals("id=-501  bidSize=-501", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-34), (-34), (-34), (-34));
      assertEquals("id=-34  unknown=-34.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData((-262), "MsgId=0 :: MsgType=0 :: Origin= :: Message=");
      assertEquals("id  = -262 len = 43\nMsgId=0 :: MsgType=0 :: Origin= :: Message=", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.execDetails(2142732577, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 2142732577\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-2229), underComp0);
      assertEquals("id = -2229 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails((-1401), contractDetails0);
      assertEquals("reqId = -1401 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, (-2141214492), (-2141214492), (-2141214492), (-5448.0), (-5448.0), (-1971.8010186918), "Connected : The list of managed accounts are : [\nunderConId = ]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(0, 0, (ContractDetails) null, "/0:O47pI", "/0:O47pI", "/0:O47pI", "r?N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(47, "id=47  fundamentals=47", "id=47  fundamentals=47", "id=47  fundamentals=47", 47, "id=47  fundamentals=47", "id=47  fundamentals=47", "id=47  fundamentals=47", "id=47  fundamentals=47", "id=47  fundamentals=47", vector0, "id=47  fundamentals=47", true, "id=47  fundamentals=47", "id=47  fundamentals=47");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      vector0.add((Object) orderState0);
      order0.m_algoStrategy = "id=47  fundamentals=47";
      order0.m_algoParams = contract0.m_comboLegs;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.ib.client.OrderState cannot be cast to com.ib.client.TagValue
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(44, "N+", "volume", "Ojn)\"A[G t", 44, (String) null, (String) null, "N+", "4j5EeriLjkzV@", "Yjn)\"u[G t", vector0, "N+", true, "Ojn)\"A[G t", "N+");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "4j5EeriLjkzV@";
      vector0.add((Object) null);
      order0.m_algoParams = contract0.m_comboLegs;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(1733, contract0, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(44, "N+", "volume", "Ojn)\"A[G t", 44, (String) null, (String) null, "N+", "4j5EeriLjkzV@", "Yjn)\"u[G t", vector0, "N+", true, "Ojn)\"A[G t", "N+");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "4j5EeriLjkzV@";
      order0.m_algoParams = contract0.m_comboLegs;
      String string0 = EWrapperMsgGenerator.openOrder(1733, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(44, "N+", "volume", "Ojn)\"A[G t", 44, (String) null, (String) null, "N+", "4j5EeriLjkzV@", "Yjn)\"u[G t", vector0, "N+", true, "Ojn)\"A[G t", "N+");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "4j5EeriLjkzV@";
      String string0 = EWrapperMsgGenerator.openOrder(1733, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 1.0, (String) null, (String) null, 1202, (String) null, "uAracJy$'Tf&", "uAracJy$'Tf&", "B)54uEg)4F]|FwJ2:", (String) null, "updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = b`DMzOaU\n0 298.75437594 298.75437594 298.75437594 1.0 1.0 xzpQ`tl[~8X", (String) null, "i'rS");
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, "volume", 1.0, 1.0, 1.0, (String) null, "Td5)7;[S;F^KJuaH");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.openOrder(0, contractDetails0.m_summary, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Contract contract0 = new Contract(1, "><C~>JhG}'%([s", "BAG", (String) null, 2084.9581, (String) null, "18H@", (String) null, (String) null, (String) null, (Vector) null, " hidden=", true, (String) null, "BAG");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_basisPoints = 739.0;
      String string0 = EWrapperMsgGenerator.openOrder(25, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Order order0 = new Order();
      Contract contract0 = new Contract(1, "><C~>JhG}'%([s", "BAG", (String) null, 2084.9581, (String) null, "18H@", (String) null, (String) null, (String) null, (Vector) null, " hidden=", true, (String) null, "BAG");
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(25, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 'b', 1, 1.7976931348623157E308, (-1164));
      assertEquals("id=0  modelOptComp: vol = 98.0 delta = 1.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(3, 13, 0, 0, 530.0, 0.0);
      assertEquals("id=3  modelOptComp: vol = 0.0 delta = 0.0: modelPrice = 530.0: pvDividend = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1051, 1, 1.7976931348623157E308, (-2111.01332148819), 1.0, 0.0);
      assertEquals("id=1051  bidPrice: vol = N/A delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1974), 13, 1.0, 0, (-348.958793), 1.7976931348623157E308);
      assertEquals("id=-1974  modelOptComp: vol = 1.0 delta = 0.0: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, Integer.MAX_VALUE, (-4711.543040006496), (-35.1723540391), (-4711.543040006496), 1.7976931348623157E308);
      assertEquals("id=0  unknown: vol = N/A delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(35, 35, 35, 41);
      assertEquals("id=35  auctionPrice=35.0  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(0, 3978, (-373.73), 0);
      assertEquals("id=0  unknown=-373.73  noAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-1073741824), (-1073741824), (-1073741824), 99, 99, 99);
      assertEquals("updateMktDepth: -1073741824 -1073741824 -1073741824 99 99.0 99", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString((-801), (-789), (String) null);
      assertEquals("id=-801  unknown=null", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-2147483645), contract0.m_underComp);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(Integer.MAX_VALUE, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 1.0, (String) null, (String) null, 1202, (String) null, "uAracJy$'Tf&", "uAracJy$'Tf&", "B)54uEg)4F]|FwJ2:", (String) null, "updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = b`DMzOaU\n0 298.75437594 298.75437594 298.75437594 1.0 1.0 xzpQ`tl[~8X", (String) null, "i'rS");
      String string0 = EWrapperMsgGenerator.contractDetails(1202, contractDetails0);
      assertEquals("reqId = 1202 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 1.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 1202\nlongName = null\ncontractMonth = uAracJy$'Tf&\nindustry = uAracJy$'Tf&\ncategory = B)54uEg)4F]|FwJ2:\nsubcategory = null\ntimeZoneId = updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = b`DMzOaU\n0 298.75437594 298.75437594 298.75437594 1.0 1.0 xzpQ`tl[~8X\ntradingHours = null\nliquidHours = i'rS\n ---- Contract Details End ----\n", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 3308, 848.0, 1.0, 0, 3308, 1.0, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n3308 848.0 1.0 0.0 3308.0 1.0 null", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("x{Y", "", "", "");
      assertEquals("updateAccountValue: x{Y   ", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.receiveFA(0, (String) null);
      assertEquals("FA: null null", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(608);
      assertEquals("reqId = 608 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(121);
      assertEquals("id=121 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(0, (String) null, 0, Integer.MAX_VALUE, Integer.MAX_VALUE, 2, 0, Integer.MAX_VALUE, 0, (String) null);
      assertEquals("order status: orderId=0 clientId=0 permId=2 status=null filled=0 remaining=2147483647 avgFillPrice=2.147483647E9 lastFillPrice=2.147483647E9 parent Id=0 whyHeld=null", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerDataEnd((-30));
      assertEquals("id = -30 =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(2144937203, Integer.MAX_VALUE, 1.7976931348623157E308);
      assertEquals("id=2144937203  unknown=1.7976931348623157E308", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("id=0  openEFP: basisPoints = 2441.61/null impliedFuture = 2441.61 holdDays = 0 futureExpiry = 9 dividendImpact = 1.7976931348623157E308 dividends to expiry = 1616.46881");
      assertEquals("Connected : The list of managed accounts are : [id=0  openEFP: basisPoints = 2441.61/null impliedFuture = 2441.61 holdDays = 0 futureExpiry = 9 dividendImpact = 1.7976931348623157E308 dividends to expiry = 1616.46881]", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals("Connection Closed", eWrapperMsgGenerator0.connectionClosed());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(506, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("$o\"mst");
      assertEquals("accountDownloadEnd: $o\"mst", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(0, 'f', (String) null, Integer.MAX_VALUE, 0, Integer.MAX_VALUE, 'c');
      assertEquals("updateMktDepth: 0 102 null 2147483647 0 2.147483647E9 99", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(506, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(41, 0L, 2244.0, 1074.656383713557, 1.0, (-1702.1079433429336), 0L, 1.0, 41);
      assertEquals("id=41 time = 0 open=2244.0 high=1074.656383713557 low=1.0 close=-1702.1079433429336 volume=0 count=41 WAP=1.0", string0);
  }
}
