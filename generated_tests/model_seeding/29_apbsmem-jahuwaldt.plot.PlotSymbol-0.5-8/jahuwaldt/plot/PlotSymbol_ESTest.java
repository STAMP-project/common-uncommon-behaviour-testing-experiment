/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:59:02 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.BoxLRSymbol;
import jahuwaldt.plot.RTriangle2Symbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.TabRSymbol;
import jahuwaldt.plot.TabUpSymbol;
import java.awt.Color;
import java.awt.SystemColor;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotSymbol_ESTest extends PlotSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      int int0 = tabUpSymbol0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      tabUpSymbol0.setSize((-346));
      int int0 = tabUpSymbol0.getSize();
      assertEquals((-346), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      Color color0 = Color.getColor((String) null, (-6));
      tabUpSymbol0.setFillColor(color0);
      tabUpSymbol0.getFillColor();
      assertEquals(8, tabUpSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      Color color0 = new Color(37);
      rTriangle4Symbol0.setFillColor(color0);
      rTriangle4Symbol0.getFillColor();
      assertEquals(8, rTriangle4Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      SystemColor systemColor0 = SystemColor.window;
      boxLRSymbol0.setBorderColor(systemColor0);
      boxLRSymbol0.getBorderColor();
      assertEquals(8, boxLRSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        rTriangle2Symbol0.draw(debugGraphics0, (-927), (-927));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      tabRSymbol0.getFillColor();
      assertEquals(8, tabRSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      tabRSymbol0.getBorderColor();
      assertEquals(8, tabRSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      tabRSymbol0.setBorderColor((Color) null);
      tabRSymbol0.getBorderColor();
      assertEquals(8, tabRSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      TabRSymbol tabRSymbol1 = (TabRSymbol)tabRSymbol0.clone();
      assertNotSame(tabRSymbol1, tabRSymbol0);
      assertEquals(8, tabRSymbol1.getSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      assertEquals(8, tabUpSymbol0.getSize());
      
      tabUpSymbol0.setSize(0);
      int int0 = tabUpSymbol0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      Color color0 = Color.red;
      tabRSymbol0.setFillColor(color0);
      tabRSymbol0.getFillColor();
      assertEquals(8, tabRSymbol0.getSize());
  }
}
