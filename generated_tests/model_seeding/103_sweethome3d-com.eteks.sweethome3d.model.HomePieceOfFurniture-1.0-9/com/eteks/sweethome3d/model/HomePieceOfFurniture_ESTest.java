/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 17:37:58 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.net.URL;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt((-1436.0173F), 0.5F, (-1881.2F));
      homeDoorOrWindow0.setNameVisible(false);
      homeDoorOrWindow0.isBottomLeftPointAt(5020.809F, 1372.5F, 2479.8267F);
      homeDoorOrWindow0.getName();
      homeDoorOrWindow0.setElevation((-1.0F));
      homeDoorOrWindow0.setY((-1436.0173F));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getPlanIcon();
      homeDoorOrWindow0.setElevation(2297.853F);
      homeDoorOrWindow0.containsPoint(2.0F, (-1601.729F), 0.0072130975F);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.isBottomRightPointAt(2.0F, 8.0F, (-138.16F));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      float float0 = 2.0F;
      Sash sash1 = new Sash(2.0F, 5020.809F, 0.5F, 0.0F, 955.853F);
      bigDecimal0.floatValue();
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1196.639F, 5020.809F, (-2735.9F), 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(true);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 0.0F, 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, 0.0F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.isBottomLeftPointAt(3911.6309F, (-1548.3741F), 3911.6309F);
      homeDoorOrWindow0.removePropertyChangeListener((PropertyChangeListener) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.isPointAt(0.0F, 5020.809F, 5020.809F);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      bigDecimal0.equals(temporaryURLContent0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.containsPoint(0.5F, 131.2135F, 131.2135F);
      BigDecimal.valueOf((long) 0, 1504);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, 5020.809F, 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDescription("");
      homeDoorOrWindow0.getDescription();
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.setLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.isNameCenterPointAt(8, 8, 1693.32F);
      homeDoorOrWindow0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      bigDecimal0.equals(temporaryURLContent0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.clone();
      Float float0 = new Float((-1.0F));
      homeDoorOrWindow0.isPointAt(0, 1952.218F, 0.5F);
      homeDoorOrWindow0.getName();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-2165.195F), 1114.4989F, (-2649.017F));
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash((-1881.2405F), 0.0F, (-3571.9F), 2165.0F, 0.5F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(false);
      homeDoorOrWindow0.isTopLeftPointAt(0.5F, 125.12F, (-1881.2405F));
      homeDoorOrWindow0.getIcon();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.getTexture();
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.VISIBLE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.isBottomLeftPointAt((-1.0F), (-1.0F), (-0.1846034F));
      Float float0 = new Float((-0.1846034F));
      homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.0425F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, false, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer.valueOf(1894838513);
      homeDoorOrWindow0.isBottomRightPointAt((-939.49036F), (-939.49036F), 0.3926991F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getAngle();
      homeDoorOrWindow0.setX(0.0F);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.isNameCenterPointAt(0, 0, 0.5F);
      homeDoorOrWindow0.setDescription("bwv");
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.getAngle();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-1881.2F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.6398F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.0F, 956.6398F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.setX(1949.4806F);
      homeDoorOrWindow0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 0, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 2.0F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0.0F, 0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow1.setNameAngle(4053.0803F);
      homeDoorOrWindow0.isNameVisible();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.isTopLeftPointAt(3507, (-47.950283F), (-47.950283F));
      homeDoorOrWindow0.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 2.0F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0.0F, 0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow1.isPointAt(1.0F, 3.4028235E38F, 427.01947F);
      homeDoorOrWindow1.isNameVisible();
      homeDoorOrWindow0.setNameAngle(2555.0F);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 5020.809F, 1.0F, 932.901F, 1.0F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, "LEVEL", "LEVEL", temporaryURLContent0, temporaryURLContent0, (-2760.8F), 0.0F, (-1013.8104F), 807.914F, false, 1155.4984F, 0.0F, sashArray0, (float[][]) null, "LEVEL", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.setWidth(1.0F);
      homeDoorOrWindow0.getElevation();
      HomePieceOfFurniture.SortableProperty.valueOf("MOVABLE");
      homeDoorOrWindow0.setHeight(1.4614887F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(3089.4956F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-0.26421404F), 2.0F, 0.5F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0.0F, 0);
      homeDoorOrWindow0.isBottomLeftPointAt(3089.4956F, 44.248F, (-755.324F));
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.isTopLeftPointAt(0.0F, 0.5F, 4758.139F);
      homeDoorOrWindow0.isResizable();
      homeDoorOrWindow0.isPointAt((-1.0F), 4758.139F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isPointAt(0.0F, 5020.809F, 5020.809F);
      homeDoorOrWindow0.setNameYOffset(956.21326F);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      bigDecimal0.longValue();
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer0 = new Integer(2147032366);
      homeDoorOrWindow0.move(2.0F, 1.0F);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.setElevation(2.0F);
      homeDoorOrWindow0.setNameAngle(5020.809F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getAngle();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.isPointAt(0.0F, 5020.809F, 5020.809F);
      homeDoorOrWindow0.getModel();
      homePieceOfFurniture0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      bigDecimal0.equals(temporaryURLContent0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.getPoints();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
      homeDoorOrWindow0.getY();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.isVisible();
      TextStyle textStyle0 = new TextStyle((-1881.2F));
      homeDoorOrWindow0.setNameStyle(textStyle0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(0);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-2165.195F), 1114.4989F, (-2649.017F));
      assertNotNull(sash0);
      assertEquals(1114.4989F, sash0.getStartAngle(), 0.01F);
      assertEquals((-2649.017F), sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals((-2165.195F), sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(0, (-2165.195F), 1114.4989F, (-3270.4172F), 1114.4989F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1114.4989F, sash1.getEndAngle(), 0.01F);
      assertEquals((-3270.4172F), sash1.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash1.getXAxis(), 0.01F);
      assertEquals(1114.4989F, sash1.getWidth(), 0.01F);
      assertEquals((-2165.195F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(524.914F, sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getEndAngle(), 0.01F);
      assertEquals(2165.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-2265.547F), sash2.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash2.getYAxis(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash((-1881.2405F), 4396.095F, (-3571.9F), 2165.0F, 0.5F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals(2165.0F, sash3.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash3.getEndAngle(), 0.01F);
      assertEquals((-1881.2405F), sash3.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash3.getYAxis(), 0.01F);
      assertEquals((-3571.9F), sash3.getWidth(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.setMovable(false);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      Float float0 = new Float(3.4028235E38F);
      homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
      homeDoorOrWindow0.getName();
      homeDoorOrWindow0.getWidth();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomRightPointAt(676.52325F, 1192.1764F, 767.6F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setX(0.0F);
      homeDoorOrWindow0.getX();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      homeDoorOrWindow0.setNameXOffset(0.0F);
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.isTopLeftPointAt(3507, 3507, 3.4028235E38F);
      homeDoorOrWindow0.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertNotNull(sash3);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(0.0F, 2.0F, 8);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow1.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean2 = homeDoorOrWindow0.isModelMirrored();
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-2165.195F), 1114.4989F, (-2649.017F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(0, (-2165.195F), 1114.4989F, (-3270.4172F), 1114.4989F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash((-1881.2405F), 4396.095F, (-3571.9F), 2165.0F, 0.5F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(false);
      homeDoorOrWindow0.isTopLeftPointAt(0.5F, 125.12F, 4396.095F);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float0 = 0.5F;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      float float1 = (-4757.639F);
      Sash sash0 = new Sash((-202.17294F), (-4757.639F), 2147032366, 0.5F, 0.3926991F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", (String) null, temporaryURLContent0, temporaryURLContent0, (-202.17294F), 0.5F, 2147032366, 0.5F, false, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "ywby.3=\"(", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(true);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.3926991F, 0.5F, 0.3926991F, 956.21326F);
      sashArray0[2] = sash1;
      bigDecimal0.longValue();
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer0 = new Integer(2147032366);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      homeDoorOrWindow0.getPlanIcon();
      homeDoorOrWindow0.setElevation(2.0F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[22];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 243.31499F, 243.31499F, 243.31499F, 243.31499F, false, 243.31499F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Float float0 = new Float(243.31499F);
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.getName();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.setDescription("");
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.getPoints();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-1881.2F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.6398F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.0F, 956.6398F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.getTexture();
      homeDoorOrWindow0.containsPoint((-24), 4372.147F, 956.6398F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.setMovable(false);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 52.98069F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow0.setWidth(8);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow1.getGroundElevation();
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow1.setNameAngle(980.9805F);
      homeDoorOrWindow0.isBottomLeftPointAt(0.0F, 0.0F, 3694.2F);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 2.0F, (-0.4136889F), 0.0F, 956.21326F);
      sashArray0[3] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, (-0.4136889F), (-0.4136889F), 956.21326F);
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.4136889F), (-0.4136889F), (-0.4136889F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.setNameAngle(8);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      bigDecimal0.signum();
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      level0.getHeight();
      homeDoorOrWindow0.isAtLevel(level0);
      homeDoorOrWindow0.setNameAngle(0.75F);
      homeDoorOrWindow0.setMovable(false);
      homeDoorOrWindow0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 5020.809F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-1.7591685F), 0.0F, 2.0F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 1.0F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1.7591685F), (-1.7591685F), (-1.7591685F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameYOffset(0.0F);
      homeDoorOrWindow0.setDepth(0.0F);
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      level0.getHeight();
      homeDoorOrWindow0.isAtLevel(level0);
      homeDoorOrWindow0.setDescription("com.eteks.sweethome3d.model.HomePieceOfFurniture$19");
      homeDoorOrWindow0.getDepth();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[22];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 243.31499F, 243.31499F, 243.31499F, 243.31499F, false, 243.31499F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Float float0 = new Float(243.31499F);
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      homeDoorOrWindow0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, 5020.809F, 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setNameVisible(true);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.isPointAt((-855.92F), 0.0F, 2199.0476F);
      homeDoorOrWindow0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      sashArray0[2] = sash0;
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.5F);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(9.355428F, (-1323.0F), 3.4028235E38F);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.setElevation(2.0F);
      homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2.0F, 0.3926991F);
      homeDoorOrWindow0.getHeight();
      homeDoorOrWindow0.getValueAddedTaxPercentage();
      homeDoorOrWindow0.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.4840019F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.2905F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 2.4840019F, 8);
      homeDoorOrWindow0.isAtLevel((Level) null);
      homeDoorOrWindow0.setNameAngle((-2860.584F));
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.getWidth();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      homeDoorOrWindow0.isBottomLeftPointAt(2.0F, 1372.5F, 2479.8267F);
      homeDoorOrWindow0.getName();
      homeDoorOrWindow0.setElevation((-1.0F));
      homeDoorOrWindow0.setNameStyle((TextStyle) null);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.5F);
      homeDoorOrWindow0.isNameCenterPointAt(3507, 3.4028235E38F, 2433.8513F);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isNameCenterPointAt((-5), (-1.0F), (-0.1846034F));
      homeDoorOrWindow0.setDescription("?m36b~Q#Bd]&}AI");
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(0.5F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      homeDoorOrWindow0.isBottomLeftPointAt(0, 2.0F, (-755.0F));
      homeDoorOrWindow0.isTopLeftPointAt((-755.0F), 750.46594F, 2.14703232E9F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      Sash sash1 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 1.75F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.isPointAt(0.0F, 5020.809F, 5020.809F);
      homeDoorOrWindow0.isNameVisible();
      homePieceOfFurniture0.setNameAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 52.98069F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow0.setWidth(8);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow1.isTopLeftPointAt((-1823.315F), 0.5F, 0.5F);
      homeDoorOrWindow1.setElevation((-2672.06F));
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(1373);
      Sash[] sashArray0 = new Sash[0];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.3926991F, 1373, 0.9825986F, 0.5F, false, 1373, 134.04085F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(1373);
      Integer integer0 = new Integer(3);
      homeDoorOrWindow0.setAngle((-378.73245F));
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow1.getValueAddedTax();
      homeDoorOrWindow0.getNameXOffset();
      homeDoorOrWindow0.setAngle(1812.21F);
      homeDoorOrWindow1.getModel();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.intersectsRectangle(1.0F, 4396.095F, 0.3926991F, 0.3926991F);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.getName();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setModelMirrored(true);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf("0?");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.SortableProperty.0?
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.4840019F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 2.0F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      Integer.valueOf(17);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.WIDTH;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 1.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 1.0F, true, 1.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      homeDoorOrWindow0.setWidth(4580.355F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDescription(".>x&.{S*Msb;AdYc`|9");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 5020.809F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-1.7591685F), 0.0F, 2.0F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 1.0F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1.7591685F), (-1.7591685F), (-1.7591685F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameYOffset(0.0F);
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer0 = new Integer(8);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(false);
      homeDoorOrWindow0.isTopLeftPointAt((-2898.0F), 1.0F, 0.0F);
      homeDoorOrWindow0.isTopRightPointAt(2.0F, 1256.9478F, 939.85F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.647843F), (-0.647843F), (-0.647843F), (-0.647843F), true, (-0.647843F), 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      Integer integer0 = new Integer(3507);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.getPrice();
      homeDoorOrWindow0.getAngle();
      homeDoorOrWindow0.getLevel();
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
      homeDoorOrWindow0.setX(0.5F);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isMovable();
      homeDoorOrWindow0.isNameCenterPointAt((-4757.639F), (-20.73F), (-3127.7715F));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-2165.195F), 1114.4989F, (-2649.017F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(0, (-2165.195F), 1114.4989F, (-3270.4172F), 1114.4989F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash((-1881.2405F), 4396.095F, (-3571.9F), 2165.0F, 0.5F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, true, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.isMovable();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 2147032366, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      Level level0 = new Level("{B1X\"q&gAbk}^", 1.387376F, 0.5F, 0.5F);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.getShininess();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      HomePieceOfFurniture.SortableProperty.valueOf("MOVABLE");
      homeDoorOrWindow0.setHeight(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.containsPoint(2458.08F, (-3459.42F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow0.isAtLevel((Level) null);
      HomeDoorOrWindow homeDoorOrWindow2 = homeDoorOrWindow1.clone();
      homeDoorOrWindow2.setX((-0.1846034F));
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 1.75F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.isPointAt(0.0F, 5020.809F, 5020.809F);
      homeDoorOrWindow0.isNameVisible();
      homePieceOfFurniture0.containsPoint(1000.14F, 1876.9874F, 4396.095F);
      homePieceOfFurniture0.setNameAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(0.0F, 2.0F, 0.5F, 0.0F, 0.5F);
      Sash sash2 = new Sash(0.0F, 0.0F, (-4757.639F), (-4757.639F), (-4757.639F));
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 0.3926991F, (-3217.48F));
      homeDoorOrWindow0.isNameCenterPointAt(8, 8, 1693.32F);
      homeDoorOrWindow0.setNameAngle(2.0F);
      assertEquals(2.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      homeDoorOrWindow0.setY(5020.809F);
      homeDoorOrWindow0.setY(5020.809F);
      homeDoorOrWindow0.getIcon();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.clone();
      Integer.valueOf((-150));
      Integer.valueOf((-150));
      Integer.valueOf((-150));
      Integer.valueOf(925);
      Integer integer0 = Integer.valueOf((-150));
      homeDoorOrWindow0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setX(0.0F);
      homeDoorOrWindow0.getShininess();
      homeDoorOrWindow0.getValueAddedTaxPercentage();
      homeDoorOrWindow0.setName("`=6:g:&f,&MV$i");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.0F);
      Level level0 = new Level("{B1X\"q&gAbk}^", 1.0F, 1.0F, 0.0F);
      homeDoorOrWindow0.isAtLevel(level0);
      homeDoorOrWindow0.setX(3190.2778F);
      homeDoorOrWindow0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(1.0F, 5020.809F, 5020.809F, 1.0F, (-1881.2F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("EkNd./S?~az", "+RJ", "", temporaryURLContent0, temporaryURLContent0, 1.0F, 0.5F, 0.0F, 0.5F, true, 0.0F, 956.21326F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(5020.809F);
      Integer integer0 = new Integer(590);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.isTopLeftPointAt((-1599.7177F), 5020.809F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2708.0457F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 0.5F, 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.5F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = false;
      int int0 = 2147032366;
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      float float0 = 2.0F;
      Sash sash1 = new Sash(2.0F, 0.3926991F, 0.5F, 0.3926991F, 956.21326F);
      sashArray0[2] = sash1;
      bigDecimal0.longValue();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, false, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setDepth(0.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 52.98069F, 0.5F, 0.5F, 52.98069F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 52.98069F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.move((-4757.639F), 1.0F);
      homeDoorOrWindow0.getElevation();
      Integer integer0 = new Integer(8);
      bigDecimal0.toPlainString();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      homeDoorOrWindow0.intersectsRectangle(2.0F, (-3639.5598F), 1.0F, 0.5F);
      homeDoorOrWindow0.getName();
      homeDoorOrWindow0.setY((-1881.2F));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", ").P", ").P", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      Float float0 = new Float((-0.1846F));
      homeDoorOrWindow0.setColor((Integer) null);
      homeDoorOrWindow0.move((-0.1846F), (-378.64017F));
      homePieceOfFurniture0.isPointAt(2.396955F, 2.396955F, (float) float0);
      homeDoorOrWindow0.getName();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.isTopLeftPointAt(3507, 3507, 3.4028235E38F);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow1.isTexturable();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      Float float0 = new Float((-0.1846034F));
      homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.5F);
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.setAngle(0.0F);
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.5F);
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.setAngle(3507);
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getPlanIcon();
      homeDoorOrWindow0.setElevation(2297.853F);
      homeDoorOrWindow0.containsPoint(2.0F, (-1601.729F), 0.0072130975F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getY();
      homeDoorOrWindow0.getWidth();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      Float float0 = new Float((-0.1846F));
      homePieceOfFurniture0.isPointAt(2.0F, 2.0F, (float) float0);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isTopRightPointAt((-2.981651F), (-0.1846F), 3.4028235E38F);
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(3089.4956F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-0.26421404F), 2.0F, 0.5F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "OKsF0F\"[!_UvJ~3E_", (Content) null, (Content) null, 2214.9F, 1.2614814F, 1.2614814F, 1.2614814F, false, (-0.26421404F), 1989.38F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-0.26421404F));
      homeDoorOrWindow0.setDescription("OKsF0F\"[!_UvJ~3E_");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Float float0 = new Float(0.0);
      float0.floatValue();
      Float float1 = new Float(0.0F);
      float1.floatValue();
      homeDoorOrWindow0.setShininess((Float) 0.0F);
      homeDoorOrWindow0.getIcon();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setX(0.0F);
      homeDoorOrWindow0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.isTopLeftPointAt(3507, 3507, 3.4028235E38F);
      homeDoorOrWindow0.setColor((Integer) null);
      homeDoorOrWindow0.getY();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      sashArray0[2] = sash0;
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.5F);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(9.355428F, (-1323.0F), 3.4028235E38F);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.setElevation(2.0F);
      homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2.0F, 0.3926991F);
      homeDoorOrWindow0.setY(2.0F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isDoorOrWindow();
      homeDoorOrWindow0.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.5F, 0.5F, 0.5F, 2147032366, 1.387376F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setBoundToWall(true);
      homeDoorOrWindow0.setModelMirrored(true);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.isBottomRightPointAt(2147032366, 0.5F, 3.4028235E38F);
      homeDoorOrWindow0.setColor((Integer) null);
      homeDoorOrWindow0.isPointAt(0.6576983F, 0.6576983F, 2609.0F);
      homeDoorOrWindow0.getName();
      homeDoorOrWindow0.getLevel();
      homeDoorOrWindow0.setModelMirrored(false);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 0.5F, 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[3] = sash1;
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.5F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.isVisible();
      URL uRL1 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL1);
      LightSource[] lightSourceArray0 = new LightSource[5];
      Float float0 = new Float((double) 3.4028235E38F);
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 3.4028235E38F, 2, float0);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 0.3926991F, 2, 2, float0);
      lightSourceArray0[1] = lightSource1;
      Float float1 = new Float(6.283185307179586);
      LightSource lightSource2 = new LightSource(0.3926991F, 2, 1.0F, 2, float1);
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(3.4028235E38F, 3.4028235E38F, 475.623F, 1, float0);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(475.623F, 0.0F, (-340.0F), 0, float1);
      lightSourceArray0[4] = lightSource4;
      float[][] floatArray0 = new float[2][2];
      float[] floatArray1 = new float[8];
      floatArray1[0] = (float) 2;
      floatArray1[1] = (float) 0;
      floatArray1[2] = 3.4028235E38F;
      floatArray1[3] = 0.0F;
      floatArray1[4] = (-340.0F);
      floatArray1[5] = (float) 1;
      floatArray1[6] = (float) 0;
      floatArray1[7] = (-651.9F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[5];
      floatArray2[0] = (float) 0;
      floatArray2[1] = (-651.9F);
      floatArray2[2] = 0.3926991F;
      floatArray2[3] = 0.3926991F;
      floatArray2[4] = 1.0F;
      floatArray0[1] = floatArray2;
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      CatalogLight catalogLight0 = null;
      try {
        catalogLight0 = new CatalogLight("FX1,Yb+~>u7#", "6%aE-=]AF*Tx[$<3\"[", "FX1,Yb+~>u7#", temporaryURLContent1, temporaryURLContent1, temporaryURLContent1, 0.3926991F, 1.0F, 1.0F, 3.4028235E38F, false, lightSourceArray0, floatArray0, "6%aE-=]AF*Tx[$<3\"[", false, false, true, bigDecimal1, bigDecimal1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.4840019F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.2905F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 2.4840019F, 8);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow1.setNameAngle(4053.0803F);
      homeDoorOrWindow1.isTexturable();
      homeDoorOrWindow0.isNameVisible();
      homeDoorOrWindow1.setNameAngle(2.0F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-0.4136889F), 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-0.4136889F), sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.4136889F), (-0.4136889F), (-0.4136889F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      assertNotNull(level0);
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      
      float float1 = level0.getHeight();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isAtLevel(level0);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      
      homeDoorOrWindow0.setDescription("com.eteks.sweethome3d.model.HomePieceOfFurniture$19");
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$19", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      Level level1 = homeDoorOrWindow0.getLevel();
      assertNull(level1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.4136889F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.20684445F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.4136889F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$19", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      homeDoorOrWindow0.setNameAngle(3507);
      homeDoorOrWindow0.setShininess((Float) null);
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      bigDecimal0.longValue();
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer0 = new Integer(2147032366);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      homeDoorOrWindow0.getPlanIcon();
      homeDoorOrWindow0.setElevation(2.0F);
      homeDoorOrWindow0.containsPoint(841.5F, (-1323.0F), 0.5F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homeDoorOrWindow0.isNameCenterPointAt(56.175873F, 8, 56.175873F);
      homeDoorOrWindow0.setDescription("");
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash(1.709475F, 243.31499F, 243.31499F, 243.31499F, 243.31499F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 243.31499F, 243.31499F, 243.31499F, 243.31499F, false, 243.31499F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setX(1.709475F);
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.3926991F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.setElevation(2.0F);
      homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2.0F, 0.3926991F);
      homeDoorOrWindow0.getHeight();
      homeDoorOrWindow0.getValueAddedTaxPercentage();
      homeDoorOrWindow0.setDescription("");
      homeDoorOrWindow0.isBottomRightPointAt((-941.76544F), 0.5F, (-3331.3F));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-4757.639F), 8, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setHeight((-4757.639F));
      homeDoorOrWindow0.getHeight();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(3089.4956F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture", "com.eteks.sweethome3d.model.HomePieceOfFurniture", "mXLWP<{,p", temporaryURLContent0, temporaryURLContent0, 2174.59F, 0, (-2542.12F), 3263.0F, true, 36.82F, 5020.809F, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDescription("Super class isn't cloneable");
      BigDecimal.valueOf((-1518.17547914));
      homeDoorOrWindow0.getElevation();
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setHeight(226.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash((-1585.0F), 2.0F, 0.5F, 0.0F, 956.21326F);
      Sash sash2 = new Sash((-1585.0F), 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameXOffset((-3371.3F));
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.isPointAt(956.21326F, 413.3F, 956.21326F);
      homeDoorOrWindow0.isNameVisible();
      homeDoorOrWindow0.setNameAngle((-740.878F));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.5F);
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.setAngle(0.0F);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      bigDecimal0.equals(temporaryURLContent0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0, 0.5F, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 5020.809F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-0.4136889F), 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.4136889F), (-0.4136889F), (-0.4136889F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameYOffset((-1.042508F));
      homeDoorOrWindow0.setDepth(0.0F);
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      level0.getHeight();
      homeDoorOrWindow0.isAtLevel(level0);
      homeDoorOrWindow0.setDescription("com.eteks.sweethome3d.model.HomePieceOfFurniture$19");
      homeDoorOrWindow0.getDepth();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      homeDoorOrWindow0.isBottomLeftPointAt(2.0F, 1372.5F, 2479.8267F);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(0.5F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      homeDoorOrWindow0.isBottomLeftPointAt(0, 2.0F, (-755.0F));
      homeDoorOrWindow0.containsPoint(0.3926991F, 1536.7744F, 0);
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.setName("");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 0.5F, 0.5F, 0.5F, 0.5F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("qdDnTM)E<&jms=", "qdDnTM)E<&jms=", "qdDnTM)E<&jms=", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "qdDnTM)E<&jms=", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomRightPointAt(0.5F, 0.5F, 2.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getAngle();
      homeDoorOrWindow0.setX(2.0F);
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(18, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(18, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(18, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      homeDoorOrWindow0.setShininess((Float) null);
      assertEquals(18, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      float[][] floatArray0 = homeDoorOrWindow0.getModelRotation();
      assertNotNull(floatArray0);
      assertEquals(18, sashArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      
      homeDoorOrWindow0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 0, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 0.5F, 0.5F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 2.0F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0.0F, 0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow0.setNameAngle((-1143.3309F));
      homeDoorOrWindow0.getNameStyle();
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(8, 0.5F, 1.0F, 8, 8);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isTopRightPointAt(2957.052F, (-1881.2F), (-1.0F));
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.isNameCenterPointAt(0, 1.07351616E9F, 0.5F);
      homeDoorOrWindow0.setDescription("bwv");
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homeDoorOrWindow0.setDescription("");
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.clone();
      Integer.valueOf((-150));
      Integer.valueOf((-1554));
      homeDoorOrWindow0.isBottomRightPointAt(8, 2.5750232F, 5020.809F);
      homeDoorOrWindow0.setX(2.5750232F);
      homeDoorOrWindow0.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 52.98069F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow0.setWidth(8);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.0F, 52.98069F, 0.0F);
      homeDoorOrWindow0.setNameXOffset(4396.095F);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.isPointAt(8, 956.21326F, 52.98069F);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      Float float0 = new Float(3.4028235E38F);
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.clone();
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Float float0 = new Float((float) 8);
      homeDoorOrWindow1.setName("D~~");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 2.0F, (-0.4136889F), 0.0F, 956.21326F);
      sashArray0[3] = sash0;
      Sash sash1 = new Sash(2.0F, 0.0F, (-0.4136889F), (-0.4136889F), 956.21326F);
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.4136889F), (-0.4136889F), (-0.4136889F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      Integer integer0 = new Integer(8);
      homeDoorOrWindow0.move(0.0F, 0.0F);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(3.4028235E38F, (-1250.3184F), (-1323.0F));
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      homeDoorOrWindow0.setElevation(956.21326F);
      homeDoorOrWindow0.setNameAngle(0.0F);
      homeDoorOrWindow0.clone();
      homeDoorOrWindow0.getAngle();
      homeDoorOrWindow0.isNameCenterPointAt((-835.139F), (-1885.0F), (-1911.17F));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.3926991F, 0.5F, 0.3926991F, 956.21326F);
      sashArray0[2] = sash1;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer0 = new Integer(2147032366);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(false);
      homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      homeDoorOrWindow0.isDeformable();
      homeDoorOrWindow0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, 0.0F, 1114.4989F, (-2649.017F));
      sashArray0[1] = sashArray0[0];
      Sash sash1 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash((-1881.2405F), 0.0F, (-3571.9F), 2165.0F, 0.5F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      TextStyle textStyle0 = new TextStyle(524.914F);
      textStyle0.deriveBoldStyle(false);
      homeDoorOrWindow0.setNameStyle(textStyle0);
      homeDoorOrWindow0.isBottomLeftPointAt(809.2477F, 0, 6.8187866F);
      homeDoorOrWindow0.getY();
      homeDoorOrWindow0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("bwv", propertyChangeListener0);
      homeDoorOrWindow0.removePropertyChangeListener(propertyChangeListenerProxy0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.isNameCenterPointAt(0, 1.07351616E9F, 0.5F);
      homeDoorOrWindow0.setDescription("bwv");
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 56.175873F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomLeftPointAt(0.0F, 56.175873F, (-4757.639F));
      homeDoorOrWindow0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      Integer integer0 = new Integer(2147032366);
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      Integer integer1 = new Integer(2147032366);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(true);
      homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      homeDoorOrWindow0.isBottomLeftPointAt(1.0F, (-4757.639F), 0.0F);
      homeDoorOrWindow0.setAngle(0.0F);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.SortableProperty.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      Integer integer0 = new Integer(3507);
      homeDoorOrWindow0.isTopLeftPointAt(3507, 3507, 3.4028235E38F);
      homeDoorOrWindow0.setX(0.0F);
      homeDoorOrWindow0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      String string0 = "";
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 12.740606F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4750.284F), 0.0F, 12.740606F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, (-4750.284F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setWidth(4396.095F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("", "_)M$HTMwwC<&v&", "f;sL<LnYVE", temporaryURLContent0, temporaryURLContent0, 0.5F, (-4757.639F), (-4757.639F), 1960.1097F, true, 1.0F, 0.0F, sashArray0, (float[][]) null, (String) null, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      homeDoorOrWindow0.setWidth((-1187.0F));
      Integer integer0 = new Integer(9);
      homeDoorOrWindow1.getDescription();
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow1.setDepth(4396.095F);
      homeDoorOrWindow1.getIcon();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 8);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      level0.getHeight();
      homeDoorOrWindow0.setLevel(level0);
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2708.0457F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, 8, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.setAngle((-2711.4663F));
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt((-759.7312F), 3140.209F, 3137.6475F);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(3089.4956F, 0.0F, 0.5F, 0.0F, 0.5F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 3089.4956F, 0.5F, 0.5F, 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      homeDoorOrWindow0.isBottomLeftPointAt(3089.4956F, 2.0F, (-755.0F));
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.setModelMirrored(false);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setMovable(false);
      homeDoorOrWindow0.setModelMirrored(false);
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow1.setElevation((-787.5259F));
      homeDoorOrWindow0.isNameCenterPointAt((-1.0F), 3507, (-556.4F));
      HomeDoorOrWindow homeDoorOrWindow2 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow3 = homeDoorOrWindow2.clone();
      homeDoorOrWindow3.setX((-1.0F));
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow(".tmp", ".tmp", ".tmp", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, (-1881.2405F), 0.5F, (Sash[]) null, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = null;
      try {
        homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogDoorOrWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(1.0F);
      homeDoorOrWindow1.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow1.isNameCenterPointAt(2976.279F, 2.0F, 2976.279F);
      homeDoorOrWindow1.setNameXOffset(4397.263F);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      homeDoorOrWindow0.clone();
      Integer.valueOf((-150));
      Integer.valueOf((-150));
      Integer.valueOf((-150));
      Integer integer0 = Integer.valueOf(925);
      homeDoorOrWindow0.setColor(integer0);
      homeDoorOrWindow0.isBottomRightPointAt(0.0F, 0.0F, (-1.0F));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      Sash sash1 = new Sash(0.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?", "?", "?", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "?", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth((-4757.639F));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDepth(0.0F);
      HomePieceOfFurniture.SortableProperty.valueOf("MOVABLE");
      homeDoorOrWindow0.setHeight(0.0F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setNameYOffset(0.5F);
      homeDoorOrWindow0.isNameCenterPointAt(0, 0, 0.5F);
      homeDoorOrWindow0.setDescription("bwv");
      homeDoorOrWindow0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[2] = sashArray0[0];
      Sash sash1 = new Sash(1.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomLeftPointAt(0.0F, 0.0F, 0.0F);
      homeDoorOrWindow0.isPointAt((-1409.623F), 555.012F, 0.0F);
      homeDoorOrWindow0.isNameVisible();
      homeDoorOrWindow0.setNameAngle((-427.44F));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.getModelRotation();
      homeDoorOrWindow0.isDeformable();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth(0.5F);
      homeDoorOrWindow0.setShininess((Float) null);
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getModelRotation();
      homeDoorOrWindow0.isTopRightPointAt(0.5F, 0.5F, 5.0F);
      homeDoorOrWindow0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 0.5F, 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.6398F);
      sashArray0[2] = sash1;
      bigDecimal0.doubleValue();
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.0F, 956.6398F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      Float float0 = new Float(0.3926991F);
      Object object0 = new Object();
      float0.equals(object0);
      homeDoorOrWindow0.setShininess(float0);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.getPrice();
      homeDoorOrWindow0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash((-1881.2F), 0.0F, (-1881.2F), 1.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 0.0F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.3926991F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt(0.5F, 1.0F, (-1.0F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.getTexture();
      homeDoorOrWindow0.containsPoint((-24), 4372.147F, 2.0F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.isNameCenterPointAt(2724.7043F, 3.4028235E38F, 0.0F);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.setNameXOffset((-1568.0F));
      homeDoorOrWindow0.setTexture((HomeTexture) null);
      homeDoorOrWindow1.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash(2.0F, (-1294.4F), (-1294.4F), (-1294.4F), (-1294.4F));
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1294.4F), (-1294.4F), (-1294.4F), (-1294.4F), true, (-1294.4F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomRightPointAt((-1294.4F), (-1294.4F), 2.0F);
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      assertNotNull(level0);
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      
      float float1 = level0.getHeight();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      
      boolean boolean0 = homeDoorOrWindow0.isAtLevel(level0);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      
      HomePieceOfFurniture.SortableProperty.valueOf("MOVABLE");
      homeDoorOrWindow0.setHeight(0.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      BigDecimal bigDecimal1 = BigDecimal.TEN;
      Sash[] sashArray0 = new Sash[22];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 243.31499F, 243.31499F, 243.31499F, 243.31499F, false, 243.31499F, 8, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Float float0 = new Float(243.31499F);
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.getLevel();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      bigDecimal0.abs();
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.5F, 0.5F, 0.5F, 0.5F, 0.5F);
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      TextStyle textStyle0 = new TextStyle((-1.0F));
      homeDoorOrWindow0.setNameStyle(textStyle0);
      homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 5020.809F, (-933.7812F));
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.setName("");
      homeDoorOrWindow0.isPointAt(5020.809F, 0.5F, 8);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      homeDoorOrWindow0.setVisible(false);
      homeDoorOrWindow0.setName("");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, 5020.809F, 0.0F, 1.0F);
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(1.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      Integer integer0 = new Integer(8);
      homeDoorOrWindow0.setDescription("");
      homeDoorOrWindow0.setShininess((Float) null);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-55.593155F), 8, 5020.809F);
      Sash sash1 = new Sash(3089.4956F, 0.5F, (-4757.639F), (-55.593155F), (-55.593155F));
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("Q", "Q", "Q", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "Q", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(0.0F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setNameVisible(true);
      homeDoorOrWindow0.isBottomLeftPointAt(8, 1372.5F, 5020.809F);
      homeDoorOrWindow0.setX(3139.959F);
      homeDoorOrWindow0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 0.3926991F, (-3217.48F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isNameCenterPointAt(8, 8, 1693.32F);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      homeDoorOrWindow0.setNameAngle(2.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getCurrency();
      assertNull(string0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.clone();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, 5020.809F, 0.0F, 1.0F);
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("K~`#7ClO)", 1844.5187F, 0.0F, (-514.0F));
      level0.getHeight();
      homeDoorOrWindow0.isAtLevel(level0);
      homeDoorOrWindow0.getX();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      homeDoorOrWindow0.setElevation(0.0F);
      homeDoorOrWindow0.isNameCenterPointAt((-2281.96F), 0.0F, (-2281.96F));
      homeDoorOrWindow0.setX(3507);
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isTopRightPointAt(0.0F, 2.0F, 8);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      homeDoorOrWindow0.isPointAt((-4757.639F), (-3127.7715F), 0.0F);
      homeDoorOrWindow0.getDepth();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      assertNotNull(bigDecimal0);
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash0;
      long long0 = bigDecimal0.longValue();
      assertEquals(2147032366L, long0);
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      boolean boolean1 = homeDoorOrWindow0.isTopLeftPointAt(9.355428F, (-1323.0F), 3.4028235E38F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      assertTrue(temporaryURLContent1.equals((Object)temporaryURLContent0));
      assertNotNull(temporaryURLContent1);
      assertFalse(temporaryURLContent1.isJAREntry());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      
      homeDoorOrWindow0.setElevation(2.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      boolean boolean2 = homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2.0F, 0.3926991F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      homeDoorOrWindow0.setY(2.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      System.setCurrentTimeMillis(0L);
      boolean boolean3 = homeDoorOrWindow0.isModelMirrored();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 52.98069F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(52.98069F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(8.0F, sash2.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.move((-4757.639F), 1.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5698.2393F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5698.2393F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float1 = new Integer(8);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(8, float1, 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 73.64F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5698.2393F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.intersectsRectangle(2.0F, (-3639.5598F), 1.0F, 0.0F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5698.2393F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getName();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5698.2393F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(1.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(8.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setWidth(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      Integer integer0 = homeDoorOrWindow0.getColor();
      assertNull(integer0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("?", "?", "?", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "?", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.valueOf("MOVABLE");
      assertEquals(HomePieceOfFurniture.SortableProperty.MOVABLE, homePieceOfFurniture_SortableProperty0);
      
      homeDoorOrWindow0.setHeight(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals("?", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals("?", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals("?", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      
      float float1 = homeDoorOrWindow1.getHeight();
      assertEquals(float1, float0, 0.01F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("?", catalogDoorOrWindow0.getDescription());
      assertEquals("?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("?", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("?", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals("?", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals("?", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals("?", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.0425F, 0.5F, (-4757.639F), 2147032377, 2147032377);
      assertNotNull(sash0);
      assertEquals(2.14703232E9F, sash0.getStartAngle(), 0.01F);
      assertEquals(2.14703232E9F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(5020.0425F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, false, 0.3926991F, 2147032377, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      Level level0 = new Level("", 0.3926991F, (-828.43F), 2147032377);
      assertNotNull(level0);
      assertEquals(0.3926991F, level0.getElevation(), 0.01F);
      assertEquals((-828.43F), level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(2.14703232E9F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      
      boolean boolean0 = homeDoorOrWindow0.isAtLevel(level0);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, level0.getElevation(), 0.01F);
      assertEquals((-828.43F), level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(2.14703232E9F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      
      homeDoorOrWindow0.setX(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float1 = homeDoorOrWindow0.getWidth();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(0.5F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean2 = homeDoorOrWindow0.isResizable();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((short)5, bigDecimal1.shortValue());
      assertEquals((byte)5, bigDecimal1.byteValue());
      
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", ".E", ".E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(1, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(homeDoorOrWindow0);
      assertEquals(1, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(".E", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(".E", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal2);
      assertEquals(1, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(".E", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(".E", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((short)20, bigDecimal2.shortValue());
      assertEquals((byte)20, bigDecimal2.byteValue());
      
      Float float0 = new Float(3.4028235E38F);
      assertNotNull(float0);
      assertEquals(3.4028235E38F, (float)float0, 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean0);
      assertEquals(1, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(".E", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(".E", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      BigDecimal bigDecimal3 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal3.equals((Object)bigDecimal0));
      assertFalse(bigDecimal3.equals((Object)bigDecimal2));
      assertFalse(bigDecimal3.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal3);
      assertEquals(1, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal3);
      assertNotSame(bigDecimal3, bigDecimal0);
      assertNotSame(bigDecimal3, bigDecimal2);
      assertNotSame(bigDecimal3, bigDecimal1);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(".E", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(".E", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((short)25, bigDecimal3.shortValue());
      assertEquals((byte)25, bigDecimal3.byteValue());
      
      homeDoorOrWindow0.setShininess(float0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal3));
      assertEquals(1, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal3);
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(".E", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(".E", catalogDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getShininess(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(".E", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(".E", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.3926991F, 0.5F, (-4769.8535F), 2147032366, 1.0F);
      assertNotNull(sash0);
      assertEquals(2.14703232E9F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals((-4769.8535F), sash0.getWidth(), 0.01F);
      assertEquals(0.3926991F, sash0.getXAxis(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      assertTrue(temporaryURLContent1.equals((Object)temporaryURLContent0));
      assertNotNull(temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent1.isJAREntry());
      
      homeDoorOrWindow0.setElevation(2.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setVisible(true);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt((-751.5561F), 2147032366, 2.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setNameAngle(1.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getName();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      homeDoorOrWindow0.setDepth((-2.981651F));
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(0.5F, 0.0F, 0.5F);
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      homeDoorOrWindow0.setDescription("");
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      Content content0 = homeDoorOrWindow0.getPlanIcon();
      assertNull(content0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-55.593155F), 16, 5020.809F);
      assertNotNull(sash0);
      assertEquals(16.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-55.593155F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      
      Sash sash1 = new Sash(3089.4956F, 0.5F, (-4757.639F), (-55.593155F), (-55.593155F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.5F, sash1.getYAxis(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-55.593155F), sash1.getEndAngle(), 0.01F);
      assertEquals((-55.593155F), sash1.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, false, 0.0F, 16, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setWidth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setHeight(0.5F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(16, 1372.5F, 5020.809F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setX(3139.959F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(16.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(3139.959F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(16.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 0.5F, 0.5F, 0.5F, 956.21326F);
      assertNotNull(sash0);
      assertEquals(956.21326F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(2.0F, sash0.getXAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      
      sashArray0[2] = sash0;
      Sash sash1 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(8.0F, sash1.getYAxis(), 0.01F);
      assertEquals(4396.095F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      
      Level level0 = new Level((String) null, 3428.2646F, 3428.2646F, 0.0F);
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      float float0 = level0.getHeight();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      homeDoorOrWindow0.setLevel(level0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(3428.7646F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(level0.isVisible());
      assertEquals(3428.2646F, level0.getElevation(), 0.01F);
      assertEquals(3428.2646F, level0.getFloorThickness(), 0.01F);
      assertNull(level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(3428.7646F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      
      float float1 = homeDoorOrWindow0.getGroundElevation();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(3428.7646F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(3428.7646F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setName("");
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(3428.7646F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, (-0.65873927F), true, (-0.65873927F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals((-0.65873927F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.393F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow1.intersectsRectangle((-0.65873927F), (-0.65873927F), (-0.65873927F), (-0.65873927F));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      
      Integer integer0 = Integer.valueOf((-150));
      assertNotNull(integer0);
      assertEquals((-150), (int)integer0);
      
      Integer integer1 = Integer.valueOf((-150));
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-150), (int)integer1);
      
      boolean boolean1 = homeDoorOrWindow0.isTopLeftPointAt(0.0F, 2678.07F, 3.4028235E38F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow1.setAngle(8);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.393F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.393F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(1.7168146F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf("mY:C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.SortableProperty.mY:C
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      homeDoorOrWindow1.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      Float float0 = new Float((-0.1846F));
      assertNotNull(float0);
      assertEquals((-0.1846F), (float)float0, 0.01F);
      
      homeDoorOrWindow0.setColor((Integer) null);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      boolean boolean0 = homeDoorOrWindow1.isPointAt(2.0F, 2.0F, (float) float0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(boolean0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getName();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-1), (-1), 5020.809F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals((-1.0F), sash0.getStartAngle(), 0.01F);
      assertEquals((-1.0F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      Sash sash1 = new Sash(3089.4956F, 0.5F, (-4757.639F), 0.5F, 0.5F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.5F, sash1.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash1.getYAxis(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, (-1), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      homeDoorOrWindow0.setWidth(0.5F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt((-1), 0.5F, 5020.809F);
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      homeDoorOrWindow0.setX(3139.959F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(3139.959F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.2311862F, 1.2311862F, 1.2311862F, 1.2311862F, true, 1.2311862F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1.2311862F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1.2311862F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      homeDoorOrWindow0.setDepth(2716.22F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2716.22F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1.2311862F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1.2311862F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(0.0F, 0.0F, 3.4028235E38F);
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2716.22F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1.2311862F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1.2311862F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getName();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2716.22F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1.2311862F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1.2311862F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      
      homeDoorOrWindow0.setAngle(3.4028235E38F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(1.2311862F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(1.5746664F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2716.22F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(1.2311862F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1.2311862F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.6155931F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1.2311862F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1.2311862F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      Float float0 = new Float(3.4028235E38F);
      assertNotNull(float0);
      assertEquals(3.4028235E38F, (float)float0, 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
      assertFalse(boolean0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getCurrency();
      assertNull(string0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 3507, 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(3507.0F, sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[3] = sash0;
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      Integer integer1 = new Integer(3507);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(3507, (int)integer1);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setWidth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      Integer integer2 = new Integer((-1648));
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals((-1648), (int)integer2);
      
      String string0 = homeDoorOrWindow0.getDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short) (-18212), bigDecimal1.shortValue());
      assertEquals((byte) (-36), bigDecimal1.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      String string1 = homeDoorOrWindow0.getStaircaseCutOutShape();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNull(string1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isMovable());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 56.175873F);
      assertNotNull(sash0);
      assertEquals(56.175873F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(0.0F, 56.175873F, (-4757.639F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float1 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(8.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(0.5F, (-3677.92F), (-3677.92F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-1881.2F), sash1.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isBottomLeftPointAt(2.0F, 1372.5F, 2479.8267F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean2 = homeDoorOrWindow0.isPointAt(0.0F, (-4757.639F), 2.0F);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean3 = homeDoorOrWindow0.isNameVisible();
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setNameAngle(1372.5F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(2.765603F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(2.765603F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, (-0.65873927F), true, (-0.65873927F), 324, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.3926991F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(324.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-5075.5F));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-5075.5F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getDepth(), 0.01F);
      
      float float0 = new Integer(324);
      assertEquals(324, float0, 0.01F);
      
      homeDoorOrWindow1.setNameVisible(true);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-5075.5F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.3926991F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(324.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals((-0.65873927F), homeDoorOrWindow1.getElevation(), 0.01F);
      
      homeDoorOrWindow0.setX(464.44F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(324.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.65873927F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-5075.5F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-0.65873927F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.65873927F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(464.44F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(324.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(11, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("bwv", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("bwv", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("bwv", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals("bwv", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(11, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("bwv", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("bwv", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("bwv", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals("bwv", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("bwv", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      assertTrue(boolean0);
      assertEquals(11, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("bwv", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("bwv", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("bwv", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals("bwv", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("bwv", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(11, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("bwv", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("bwv", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("bwv", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals("bwv", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("bwv", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(11, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("bwv", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("bwv", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("bwv", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals("bwv", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals("bwv", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals("bwv", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals("bwv", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isResizable());
      assertEquals("bwv", homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow1.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      assertNotNull(bigDecimal0);
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      assertNotNull(sash0);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(2.14703232E9F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[2] = sash0;
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      Level level0 = new Level("Application Data", 99.44267F, (-752.5F), 1079.86F);
      assertNotNull(level0);
      assertEquals(99.44267F, level0.getElevation(), 0.01F);
      assertEquals(1079.86F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-752.5F), level0.getFloorThickness(), 0.01F);
      assertEquals("Application Data", level0.getName());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("s2", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("s2", propertyChangeListenerProxy0.getPropertyName());
      
      level0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(99.44267F, level0.getElevation(), 0.01F);
      assertEquals(1079.86F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-752.5F), level0.getFloorThickness(), 0.01F);
      assertEquals("Application Data", level0.getName());
      assertEquals("s2", propertyChangeListenerProxy0.getPropertyName());
      
      float float1 = level0.getHeight();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(1079.86F, float1, 0.01F);
      assertEquals(99.44267F, level0.getElevation(), 0.01F);
      assertEquals(1079.86F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-752.5F), level0.getFloorThickness(), 0.01F);
      assertEquals("Application Data", level0.getName());
      
      boolean boolean0 = homeDoorOrWindow0.isAtLevel(level0);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(99.44267F, level0.getElevation(), 0.01F);
      assertEquals(1079.86F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-752.5F), level0.getFloorThickness(), 0.01F);
      assertEquals("Application Data", level0.getName());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      TextStyle textStyle0 = homeDoorOrWindow0.getNameStyle();
      assertNull(textStyle0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setElevation(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals((-1881.2F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setWidth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1436.0173F), 0.5F, (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setNameVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean1 = homeDoorOrWindow0.isBottomLeftPointAt(5020.809F, 1372.5F, 2479.8267F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      String string0 = homeDoorOrWindow0.getName();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setElevation((-1.0F));
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setNameStyle((TextStyle) null);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      homeDoorOrWindow0.setHeight(0.5F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      float float1 = homeDoorOrWindow0.getElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
      
      Level level0 = homeDoorOrWindow0.getLevel();
      assertNull(level0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals("", homeDoorOrWindow0.getName());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      assertEquals(8.0F, sash2.getYAxis(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("{)23U2t`QRvbqG", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("{)23U2t`QRvbqG", propertyChangeListenerProxy0.getPropertyName());
      
      homeDoorOrWindow0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("{)23U2t`QRvbqG", propertyChangeListenerProxy0.getPropertyName());
      
      homeDoorOrWindow0.setWidth(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      
      String string0 = homeDoorOrWindow0.getDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, 0.0F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getY(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow1.getShininess());
      
      Integer integer1 = new Integer(3507);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(3507, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[10];
      Sash sash0 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertNotNull(sash0);
      assertEquals(4396.095F, sash0.getWidth(), 0.01F);
      assertEquals(2.0F, sash0.getXAxis(), 0.01F);
      assertEquals(956.21326F, sash0.getEndAngle(), 0.01F);
      assertEquals(8.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getStartAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 6.073218F, 6.073218F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(6.073218F, 2.0F, 1.75F);
      assertFalse(boolean0);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setNameXOffset(0.0F);
      assertEquals(10, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(10, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(3.036609F, homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(6.073218F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      
      homeDoorOrWindow1.setNameAngle(0.0F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(10, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(3.036609F, homeDoorOrWindow1.getY(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(6.073218F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      
      TextStyle textStyle0 = homeDoorOrWindow0.getNameStyle();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertNull(textStyle0);
      assertEquals(10, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(6.073218F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(6.073218F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(6.073218F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(3.036609F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = homeDoorOrWindow0.isNameVisible();
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      assertNotNull(bigDecimal0);
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 2147032366, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(2.14703232E9F, sash0.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash0;
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt((-2.7356167F), (-1323.0F), 3.4028235E38F);
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      assertTrue(temporaryURLContent1.equals((Object)temporaryURLContent0));
      assertNotNull(temporaryURLContent1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent1.isJAREntry());
      
      homeDoorOrWindow0.setElevation(2.0F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      boolean boolean1 = homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2.0F, 0.3926991F);
      assertFalse(boolean1 == boolean0);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      float float1 = homeDoorOrWindow0.getHeight();
      assertNotEquals(float1, float0, 0.01F);
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertEquals(0.5F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTaxPercentage();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)46, bigDecimal1.byteValue());
      assertEquals((short)7470, bigDecimal1.shortValue());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      Integer integer0 = homeDoorOrWindow0.getColor();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertNull(integer0);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      boolean boolean2 = homeDoorOrWindow0.isTexturable();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      
      Integer integer1 = homeDoorOrWindow0.getColor();
      assertTrue(temporaryURLContent0.equals((Object)temporaryURLContent1));
      assertNull(integer1);
      assertEquals(4, sashArray0.length);
      assertNotSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      homeDoorOrWindow0.setAngle(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short) (-21719), bigDecimal1.shortValue());
      
      float float0 = homeDoorOrWindow0.getNameXOffset();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomRightPointAt(0.0F, 8.0F, 3507);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      float float1 = homeDoorOrWindow0.getNameXOffset();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      homeDoorOrWindow0.setAngle(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((short) (-21719), bigDecimal1.shortValue());
      assertEquals((byte)41, bigDecimal1.byteValue());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(3507.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      
      float float0 = homeDoorOrWindow0.getNameXOffset();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(8, 0.0F, 2.074022F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setNameXOffset(1.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("0?", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(1.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(56.175873F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("0?", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow1.getDescription());
      assertEquals(28.087936F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow1.getX(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow1.isPointAt(0.0F, (-4757.639F), 0.0F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("0?", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(1.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(56.175873F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("0?", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(56.175873F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow1.getDescription());
      assertEquals(28.087936F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow1.getX(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      
      boolean boolean2 = homeDoorOrWindow0.isNameVisible();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      boolean boolean3 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      
      float float0 = homeDoorOrWindow0.getNameAngle();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isMovable());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 20.42091F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(20.42091F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(0.0F, 2.0F, 0.5F, 0.0F, 0.5F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(0.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(0.5F, sash1.getEndAngle(), 0.01F);
      
      Sash sash2 = new Sash(0.0F, 0.0F, (-4757.639F), (-4757.639F), (-4757.639F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(0.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 0.3926991F, 0.0F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isNameCenterPointAt(8, 8, 1693.32F);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      homeDoorOrWindow0.setNameAngle(2.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      
      boolean boolean2 = homeDoorOrWindow0.isBottomRightPointAt(1.0F, 0.0F, 5020.809F);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.4840019F, 0.5F, 0.5F, 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(2.4840019F, sash2.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.5F, sash2.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 2.0F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash2));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertNotNull(sash3);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(2.0F, sash3.getWidth(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      Integer integer0 = Integer.valueOf(17);
      assertNotNull(integer0);
      assertEquals(17, (int)integer0);
      
      homeDoorOrWindow0.setColor((Integer) null);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash((-1881.2F), 0.0F, (-1881.2F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals((-1881.2F), sash0.getWidth(), 0.01F);
      assertEquals((-1881.2F), sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.6398F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(956.6398F, sash1.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.0F, 956.6398F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-24.0F), sash2.getYAxis(), 0.01F);
      assertEquals(4372.147F, sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(956.6398F, sash2.getEndAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setWidth(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(0.5F, 1.0F, (-1.0F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      HomeTexture homeTexture0 = homeDoorOrWindow0.getTexture();
      assertNull(homeTexture0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      homeDoorOrWindow0.setMovable(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      homeDoorOrWindow0.setDepth(0.5F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      homeDoorOrWindow0.setAngle(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((short) (-21719), bigDecimal1.shortValue());
      assertEquals((byte)41, bigDecimal1.byteValue());
      
      homeDoorOrWindow0.setNameXOffset(134.04085F);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(134.04085F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(134.04085F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(134.04085F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(3507.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.5F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      
      float float0 = homeDoorOrWindow0.getNameXOffset();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(134.04085F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(134.04085F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      
      System.setCurrentTimeMillis(0L);
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ANGLE;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
      
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-1881.2F), sash1.getYAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "2", "2", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setWidth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1436.0173F), 0.5F, (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setNameVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      boolean boolean1 = homeDoorOrWindow0.isBottomLeftPointAt(5020.809F, 1372.5F, 2479.8267F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      String string0 = homeDoorOrWindow0.getName();
      assertNotNull(string0);
      assertEquals("2", string0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setElevation((-1.0F));
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setY((-1436.0173F));
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1436.0173F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setHeight(3089.4956F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3089.4956F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1436.0173F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      boolean boolean2 = homeDoorOrWindow0.isTexturable();
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("2", catalogDoorOrWindow0.getName());
      assertEquals("2", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3089.4956F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1436.0173F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("2", homeDoorOrWindow0.getDescription());
      assertEquals((-1.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("2", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(10);
      assertNotNull(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 10, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(10.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, true, 0.0F, 10, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setAngle((-2711.4663F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float2 = homeDoorOrWindow0.getHeight();
      assertNotEquals(float2, float1, 0.01F);
      assertNotEquals(float2, float0, 0.01F);
      assertEquals(0.5F, float2, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(10.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(10.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-4757.639F), 8, 0.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      homeDoorOrWindow0.setHeight((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-4757.639F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(0.5F, 0.0F, 0.5F, 0.0F, 0.5F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(3.4028235E38F, 3.4028235E38F, (-914.49023F));
      assertFalse(boolean0);
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean1 = homeDoorOrWindow0.isBottomLeftPointAt(737.913F, 0.0F, (-914.49023F));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      homeDoorOrWindow0.setName("");
      assertEquals(9, sashArray0.length);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      
      sashArray0[2] = sash1;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      Integer integer0 = new Integer(8);
      assertNotNull(integer0);
      assertEquals(8, (int)integer0);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setModelMirrored(false);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash(2.0F, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F));
      assertNotNull(sash0);
      assertEquals((-0.1846034F), sash0.getWidth(), 0.01F);
      assertEquals((-0.1846034F), sash0.getEndAngle(), 0.01F);
      assertEquals((-0.1846034F), sash0.getStartAngle(), 0.01F);
      assertEquals((-0.1846034F), sash0.getYAxis(), 0.01F);
      assertEquals(2.0F, sash0.getXAxis(), 0.01F);
      
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomRightPointAt((-0.1846034F), (-0.1846034F), 2.0F);
      assertFalse(boolean0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals((-0.1846034F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals((-0.1846034F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals((-0.1846034F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals((-0.1846034F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.0923017F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals((-0.0923017F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals((-0.1846034F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1291.9F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(1291.9F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals((-1970.32F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setX(0.0F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float1 = homeDoorOrWindow0.getDepth();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals((-4757.639F), float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isResizable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.5F, 0.5F, 0.5F, 0.5F, 0.5F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getXAxis(), 0.01F);
      assertEquals(0.5F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setDescription("");
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setShininess((Float) null);
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      float[][] floatArray0 = homeDoorOrWindow0.getModelRotation();
      assertNotNull(floatArray0);
      assertEquals(4, sashArray0.length);
      assertEquals(3, floatArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal2);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((byte)72, bigDecimal2.byteValue());
      assertEquals((short)72, bigDecimal2.shortValue());
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt((-1.0F), 8, (-1.0F));
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      
      homeDoorOrWindow0.setTexture((HomeTexture) null);
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(0);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, (-2165.195F), 1114.4989F, (-2649.017F));
      assertNotNull(sash0);
      assertEquals((-2165.195F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals((-2649.017F), sash0.getEndAngle(), 0.01F);
      assertEquals(1114.4989F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2165.0F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(524.914F, sash1.getWidth(), 0.01F);
      assertEquals(4396.095F, sash1.getYAxis(), 0.01F);
      assertEquals(2165.0F, sash1.getXAxis(), 0.01F);
      assertEquals((-2265.547F), sash1.getStartAngle(), 0.01F);
      
      Sash sash2 = new Sash((-1881.2405F), 0.0F, (-3571.9F), 2165.0F, 0.5F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-3571.9F), sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.5F, sash2.getEndAngle(), 0.01F);
      assertEquals((-1881.2405F), sash2.getXAxis(), 0.01F);
      assertEquals(2165.0F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.5F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      homeDoorOrWindow0.setMovable(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(0.5F, 125.12F, (-1881.2405F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      TemporaryURLContent temporaryURLContent1 = (TemporaryURLContent)homeDoorOrWindow0.getIcon();
      assertNotNull(temporaryURLContent1);
      assertEquals(4, sashArray0.length);
      assertSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(temporaryURLContent1, temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(temporaryURLContent1.isJAREntry());
      
      boolean boolean1 = homeDoorOrWindow0.containsPoint(1249.6337F, 2.0F, (-1797.8F));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, (-1881.2F), (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals((-1881.2F), sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      sashArray0[3] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      homeDoorOrWindow0.setWidth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      boolean boolean1 = homeDoorOrWindow0.isBottomLeftPointAt(2.0F, 1372.5F, 2479.8267F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      boolean boolean2 = homeDoorOrWindow0.isPointAt(0.0F, (-4757.639F), 2.0F);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      boolean boolean3 = homeDoorOrWindow0.isNameVisible();
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      homeDoorOrWindow0.setNameAngle(1372.5F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.765603F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((byte)5, bigDecimal1.byteValue());
      assertEquals((short)5, bigDecimal1.shortValue());
      
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "6s<yDTy0;au", "6s<yDTy0;au", temporaryURLContent0, temporaryURLContent0, 3.4028235E38F, 3.4028235E38F, 3.4028235E38F, 3.4028235E38F, true, 3.4028235E38F, (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal2);
      assertEquals(3, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((byte)20, bigDecimal2.byteValue());
      assertEquals((short)20, bigDecimal2.shortValue());
      
      Float float0 = new Float(3.4028235E38F);
      assertNotNull(float0);
      assertEquals(3.4028235E38F, (float)float0, 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(2.0F, 2.0F, 3.4028235E38F);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertTrue(boolean0);
      assertEquals(3, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("6s<yDTy0;au", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(1.7014117E38F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("6s<yDTy0;au", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      assertNotNull(bigDecimal0);
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      long long0 = bigDecimal0.longValue();
      assertEquals(2147032366L, long0);
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      Integer integer0 = new Integer(2147032366);
      assertNotNull(integer0);
      assertEquals(2147032366, (int)integer0);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      Content content0 = homeDoorOrWindow0.getPlanIcon();
      assertNull(content0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setElevation(2.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      
      boolean boolean2 = homeDoorOrWindow0.containsPoint(841.5F, (-1323.0F), 0.5F);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(2.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow1.getX(), 0.01F);
      assertTrue(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(0.3926991F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(2.14703232E9F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(0.5F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      
      homeDoorOrWindow0.setHeight(2147032366L);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(2.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(2.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(0);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(0.0F, 0.0F, 0.0F, 1114.4989F, (-2649.017F));
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals((-2649.017F), sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getWidth(), 0.01F);
      assertEquals(1114.4989F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sashArray0[0];
      Sash sash1 = new Sash(2163.9346F, 4396.095F, 524.914F, (-2265.547F), 0.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(524.914F, sash1.getWidth(), 0.01F);
      assertEquals(4396.095F, sash1.getYAxis(), 0.01F);
      assertEquals((-2265.547F), sash1.getStartAngle(), 0.01F);
      assertEquals(2163.9346F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash((-1881.2405F), 0.0F, (-3571.9F), 2163.9346F, 0.5F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2163.9346F, sash2.getStartAngle(), 0.01F);
      assertEquals((-3571.9F), sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.5F, sash2.getEndAngle(), 0.01F);
      assertEquals((-1881.2405F), sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, (-1881.2405F), 0.0F, 0.5F, false, (-1881.2405F), 8, sashArray0, (float[][]) null, "a?", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      TextStyle textStyle0 = new TextStyle(524.914F);
      assertNotNull(textStyle0);
      assertFalse(textStyle0.isBold());
      assertEquals(524.914F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isItalic());
      
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(false);
      assertNotNull(textStyle1);
      assertSame(textStyle0, textStyle1);
      assertSame(textStyle1, textStyle0);
      assertFalse(textStyle0.isBold());
      assertEquals(524.914F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isItalic());
      assertEquals(524.914F, textStyle1.getFontSize(), 0.01F);
      assertFalse(textStyle1.isBold());
      assertFalse(textStyle1.isItalic());
      
      homeDoorOrWindow0.setNameStyle(textStyle0);
      assertEquals(4, sashArray0.length);
      assertSame(textStyle0, textStyle1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(textStyle0.isBold());
      assertEquals(524.914F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isItalic());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(809.2477F, 0, 6.8187866F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      float float0 = homeDoorOrWindow0.getY();
      assertEquals((-940.62024F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      TextStyle textStyle2 = homeDoorOrWindow0.getNameStyle();
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(textStyle2);
      assertEquals(4, sashArray0.length);
      assertSame(textStyle2, textStyle1);
      assertSame(textStyle2, textStyle0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertFalse(textStyle2.isBold());
      assertEquals(524.914F, textStyle2.getFontSize(), 0.01F);
      assertFalse(textStyle2.isItalic());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("a?", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-940.62024F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1881.2405F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1881.2405F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[11];
      Sash sash0 = new Sash(0.5F, 0.5F, 0.5F, 0, 0);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(11, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(11, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setDepth((-1250.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 5020.809F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-1.7591685F), 0.0F, 2.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(2.0F, sash1.getEndAngle(), 0.01F);
      assertEquals((-1.7591685F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 1.0F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals(1.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1.7591685F), (-1.7591685F), (-1.7591685F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setNameYOffset(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      Integer integer0 = new Integer(8);
      assertNotNull(integer0);
      assertEquals(8, (int)integer0);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setModelMirrored(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt((-2898.0F), 1.0F, 0.0F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      float float1 = homeDoorOrWindow0.getY();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals((-0.87958425F), float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      homeDoorOrWindow0.setVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      
      boolean boolean1 = homeDoorOrWindow0.isPointAt((-0.4136889F), 0.0F, 2397.3948F);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[18];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(18, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(18, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTaxPercentage();
      assertNotNull(bigDecimal1);
      assertEquals(18, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals((short)3507, bigDecimal1.shortValue());
      assertEquals((byte) (-77), bigDecimal1.byteValue());
      
      boolean boolean0 = homeDoorOrWindow0.isBackFaceShown();
      assertFalse(boolean0);
      assertEquals(18, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getColor());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 0.0F, (-4757.639F), (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      float float1 = homeDoorOrWindow0.getElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash((-21.116367F), 0.5F, 0.5F, 0.5F, 0.5F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      assertEquals((-21.116367F), sash0.getXAxis(), 0.01F);
      
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt(0.5F, 8, (-933.7812F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      
      Float float0 = new Float(0.5F);
      assertNotNull(float0);
      assertEquals(0.5F, (float)float0, 0.01F);
      
      homeDoorOrWindow0.setName("");
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setDepth((-2.981651F));
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      Integer integer0 = new Integer(3507);
      assertNotNull(integer0);
      assertEquals(3507, (int)integer0);
      
      homeDoorOrWindow0.setElevation(0.5F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(0.0F, 2976.279F, 3507);
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setX(2016.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-77), bigDecimal0.byteValue());
      assertEquals((short)3507, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(3507.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.5F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(2016.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(3507.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setNameVisible(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1.0F), 0.5F, (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)64, bigDecimal1.shortValue());
      assertEquals((byte)64, bigDecimal1.byteValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isNameVisible());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal((-5));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((byte)5, bigDecimal1.byteValue());
      assertEquals((short)5, bigDecimal1.shortValue());
      
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "E", "E", temporaryURLContent0, temporaryURLContent0, (-0.1846034F), (-0.1846034F), (-0.1846034F), (-0.1846034F), true, (-0.1846034F), (-5), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal2);
      assertEquals(3, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((byte)20, bigDecimal2.byteValue());
      assertEquals((short)20, bigDecimal2.shortValue());
      
      homeDoorOrWindow0.setMovable(true);
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(3, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
      
      Float float0 = new Float((-0.1846034F));
      assertNotNull(float0);
      assertEquals((-0.1846034F), (float)float0, 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(2.0F, 2.0F, (-0.1846034F));
      assertFalse(bigDecimal0.equals((Object)bigDecimal2));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean0);
      assertEquals(3, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte) (-5), bigDecimal0.byteValue());
      assertEquals((short) (-5), bigDecimal0.shortValue());
      assertEquals((-5.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("E", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals((-0.1846034F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("E", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("E", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("E", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-5.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getX(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-0.0923017F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals((-0.1846034F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-0.1846034F), homeDoorOrWindow0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal((-24));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, 0.5F, 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.6398F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.6398F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      double double0 = bigDecimal0.doubleValue();
      assertEquals((-24.0), double0, 0.01);
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      
      Sash sash2 = new Sash(2.0F, (-24), 4372.147F, 0.0F, 956.6398F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(4372.147F, sash2.getWidth(), 0.01F);
      assertEquals((-24.0F), sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(956.6398F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, (-24), sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setWidth(0.3926991F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt(0.5F, 2.869744F, (-1.0F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPrice();
      assertNotNull(bigDecimal1);
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((short) (-24), bigDecimal1.shortValue());
      assertEquals((byte) (-24), bigDecimal1.byteValue());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      
      homeDoorOrWindow0.setVisible(false);
      assertEquals(4, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short) (-24), bigDecimal0.shortValue());
      assertEquals((byte) (-24), bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-24.0F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-24.0F), homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      sashArray0[3] = sash0;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      Integer integer0 = new Integer(8);
      assertNotNull(integer0);
      assertEquals(8, (int)integer0);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      boolean boolean1 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      
      float float1 = homeDoorOrWindow0.getAngle();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, (-1.1010097F), true, (-1.1010097F), 8, sashArray0, (float[][]) null, "0?", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals((-1.1010097F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean0 = homeDoorOrWindow0.isTexturable();
      assertTrue(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      
      boolean boolean1 = homeDoorOrWindow0.isTexturable();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1.1010097F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-1.1010097F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, (-0.34696424F), 0.5F, (-0.34696424F), 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals((-0.34696424F), sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals((-0.34696424F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash2.getWidth(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(8.0F, sash2.getYAxis(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, (-0.34696424F), true, (-0.34696424F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals((-0.34696424F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = homeDoorOrWindow0.isBottomLeftPointAt((-1881.2F), 5020.809F, (-933.7812F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setAngle((-2711.4663F));
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float1 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals((-0.34696424F), float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setName("");
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean1 = homeDoorOrWindow0.isVisible();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      TextStyle textStyle0 = new TextStyle((-1881.2F));
      assertNotNull(textStyle0);
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      assertEquals((-1881.2F), textStyle0.getFontSize(), 0.01F);
      
      homeDoorOrWindow0.setNameStyle(textStyle0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      assertEquals((-1881.2F), textStyle0.getFontSize(), 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean2 = homeDoorOrWindow0.isDeformable();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.34696424F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(2.869744F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-0.34696424F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals((-0.34696424F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      assertNotNull(bigDecimal0);
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      long long0 = bigDecimal0.longValue();
      assertEquals(2147032366L, long0);
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.3926991F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow0.setModelMirrored(true);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      homeDoorOrWindow0.setAngle((-2308.462F));
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.750279F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.750279F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      TemporaryURLContent temporaryURLContent1 = (TemporaryURLContent)homeDoorOrWindow0.getModel();
      assertNotNull(temporaryURLContent1);
      assertEquals(4, sashArray0.length);
      assertSame(temporaryURLContent0, temporaryURLContent1);
      assertSame(temporaryURLContent1, temporaryURLContent0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertFalse(temporaryURLContent1.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.750279F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow0.isTopRightPointAt(2.0F, 587.5333F, (-2308.462F));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertSame(temporaryURLContent0, temporaryURLContent1);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)7470, bigDecimal0.shortValue());
      assertEquals((byte)46, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(2.14703232E9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.3926991F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14703232E9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.3926991F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(3.750279F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      
      sashArray0[2] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 1.0F, (-4757.639F), 3.4028235E38F, (-1970.32F), true, (-1970.32F), 5020.809F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals((-1970.32F), float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      homeDoorOrWindow0.setX(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
      
      Content content0 = homeDoorOrWindow0.getPlanIcon();
      assertNull(content0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1970.32F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-4757.639F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(5020.809F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals((-1970.32F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(1.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(5020.809F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(3.4028235E38F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-2378.8196F), homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1970.32F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-1970.32F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isVisible());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(4);
      assertNotNull(bigDecimal0);
      assertEquals((short)4, bigDecimal0.shortValue());
      assertEquals((byte)4, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("0?", "0?", "0?", temporaryURLContent0, temporaryURLContent0, 56.175873F, 56.175873F, 56.175873F, 0.0F, true, 0.0F, 4, sashArray0, (float[][]) null, "0?", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)4, bigDecimal0.shortValue());
      assertEquals((byte)4, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)4, bigDecimal0.shortValue());
      assertEquals((byte)4, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(56.175873F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("0?", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(56.175873F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(56.175873F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("0?", catalogDoorOrWindow0.getDescription());
      assertEquals("0?", catalogDoorOrWindow0.getCreator());
      assertEquals(4.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(56.175873F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(56.175873F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals("0?", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(28.087936F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("0?", homeDoorOrWindow0.getName());
      assertEquals(56.175873F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals("0?", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setWidth((-4757.639F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(32);
      assertNotNull(bigDecimal0);
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 32, 5020.809F);
      assertNotNull(sash0);
      assertEquals(32.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 32, 32, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(0.0F, 2.0F, 32);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(32.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(32.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeDoorOrWindow1.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(32.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(32.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      
      boolean boolean2 = homeDoorOrWindow1.isBackFaceShown();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)32, bigDecimal0.shortValue());
      assertEquals((byte)32, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(32.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(32.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(32.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals(32.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getName());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.abs();
      assertNotNull(bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((short)8, bigDecimal1.shortValue());
      assertEquals((byte)8, bigDecimal1.byteValue());
      
      Sash[] sashArray0 = new Sash[3];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-0.1846F), (-0.1846F), (-0.1846F), (-0.1846F), true, (-0.1846F), 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(3, sashArray0.length);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt(56.175873F, 8, 56.175873F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(boolean0);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      homeDoorOrWindow1.setNameVisible(false);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow2 = homeDoorOrWindow0.clone();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertNotNull(homeDoorOrWindow2);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getCatalogId());
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow2.getX(), 0.01F);
      assertTrue(homeDoorOrWindow2.isResizable());
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertEquals("", homeDoorOrWindow2.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow2.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getName());
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertFalse(homeDoorOrWindow2.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow2.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow2.getCurrency());
      
      homeDoorOrWindow2.setTexture((HomeTexture) null);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow2));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getCatalogId());
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow2.getX(), 0.01F);
      assertTrue(homeDoorOrWindow2.isResizable());
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertEquals("", homeDoorOrWindow2.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow2.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getName());
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertFalse(homeDoorOrWindow2.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow2.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow2.getCurrency());
      
      float float0 = homeDoorOrWindow0.getNameAngle();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow2));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      float[][] floatArray0 = homeDoorOrWindow1.getModelRotation();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow2));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow2));
      assertNotNull(floatArray0);
      assertEquals(3, sashArray0.length);
      assertEquals(3, floatArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow2);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow1.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals((-0.1846F), homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals((-0.1846F), homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isResizable());
      assertEquals("", homeDoorOrWindow1.getName());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow1.getX(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow1.getWallThickness(), 0.01F);
      
      Level level0 = new Level("", 0.0F, (-0.1846F), 0.0F);
      assertNotNull(level0);
      assertEquals((-0.1846F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      
      homeDoorOrWindow2.setName((String) null);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow2));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow0));
      assertFalse(homeDoorOrWindow2.equals((Object)homeDoorOrWindow1));
      assertEquals(3, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow2);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow2, homeDoorOrWindow1);
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.1846F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-0.1846F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-0.1846F), homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow2.getShininess());
      assertTrue(homeDoorOrWindow2.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow2.getWallDistance(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow2.getCatalogId());
      assertTrue(homeDoorOrWindow2.isMovable());
      assertEquals(0.0F, homeDoorOrWindow2.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow2.getStaircaseCutOutShape());
      assertEquals((-0.0923F), homeDoorOrWindow2.getY(), 0.01F);
      assertEquals((-0.0923F), homeDoorOrWindow2.getX(), 0.01F);
      assertTrue(homeDoorOrWindow2.isResizable());
      assertTrue(homeDoorOrWindow2.isVisible());
      assertTrue(homeDoorOrWindow2.isDeformable());
      assertEquals("", homeDoorOrWindow2.getDescription());
      assertEquals((-0.1846F), homeDoorOrWindow2.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow2.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow2.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow2.getName());
      assertFalse(homeDoorOrWindow2.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow2.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow2.isTexturable());
      assertFalse(homeDoorOrWindow2.isModelMirrored());
      assertFalse(homeDoorOrWindow2.isBackFaceShown());
      assertEquals((-0.1846F), homeDoorOrWindow2.getDepth(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow2.getColor());
      assertEquals((-0.1846F), homeDoorOrWindow2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow2.getNameYOffset(), 0.01F);
      assertEquals((-0.1846F), homeDoorOrWindow2.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow2.getCurrency());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(8.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(5020.809F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.5F, sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-4757.639F), sash1.getWidth(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals(3089.4956F, sash1.getXAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(2.0F, sash2.getYAxis(), 0.01F);
      assertEquals(0.5F, sash2.getWidth(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(0.0F, sash2.getStartAngle(), 0.01F);
      assertEquals(956.21326F, sash2.getEndAngle(), 0.01F);
      
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(2.0F, 0.0F, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash3.equals((Object)sash0));
      assertFalse(sash3.equals((Object)sash1));
      assertFalse(sash3.equals((Object)sash2));
      assertNotNull(sash3);
      assertEquals(2.0F, sash3.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash3.getStartAngle(), 0.01F);
      assertEquals(4396.095F, sash3.getWidth(), 0.01F);
      assertEquals(0.0F, sash3.getYAxis(), 0.01F);
      assertEquals(956.21326F, sash3.getEndAngle(), 0.01F);
      
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean0 = homeDoorOrWindow0.isPointAt((-1331.5F), 0.0F, (-3607.371F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean1 = homeDoorOrWindow0.isTopRightPointAt(0.0F, 2.0F, 8);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      boolean boolean2 = homeDoorOrWindow1.isTexturable();
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertTrue(boolean2);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals((-1881.2F), homeDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow1.isMovable());
      assertEquals((-940.6F), homeDoorOrWindow1.getX(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals((-1881.2F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-940.6F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String string0 = "*I:fl$bd:McFU[/\\ng=";
      String string1 = ".tmp";
      String string2 = "";
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      float float0 = 0.5F;
      float float1 = 0.0F;
      boolean boolean0 = false;
      Sash[] sashArray0 = null;
      float[][] floatArrayArray0 = null;
      int int0 = 8;
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", ".tmp", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.0F, 0.0F, 0.0F, false, (-1881.2405F), 0.5F, (Sash[]) null, (float[][]) null, "", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(".tmp", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1881.2405F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = null;
      try {
        homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogDoorOrWindow", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      Sash sash1 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(8.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      assertEquals(4396.095F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash1.getStartAngle(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      homeDoorOrWindow0.setWidth(4396.095F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(homeDoorOrWindow0);
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals(4, sashArray0.length);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      
      homeDoorOrWindow0.setNameAngle((-4435.56F));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.36876827F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      boolean boolean1 = homeDoorOrWindow0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertTrue(boolean1);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.36876827F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      
      float float2 = homeDoorOrWindow1.getGroundElevation();
      assertEquals(float2, float0, 0.01F);
      assertEquals(float2, float1, 0.01F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertEquals(0.0F, float2, 0.01F);
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.36876827F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(0.0F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow1.getDescription());
      assertTrue(homeDoorOrWindow1.isMovable());
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertTrue(homeDoorOrWindow1.isResizable());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(0.25F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertEquals(0.5F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(4396.095F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertTrue(homeDoorOrWindow1.isTexturable());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals(0.0F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals("", homeDoorOrWindow1.getName());
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      
      homeDoorOrWindow0.setHeight(0.0F);
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertEquals(4, sashArray0.length);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.36876827F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 5020.809F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getYAxis(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, (-1.7591685F), 0.0F, 2.0F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-1.7591685F), sash1.getWidth(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getEndAngle(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      Sash sash2 = new Sash(2.0F, 1.0F, (-4757.639F), (-4757.639F), 1.0F);
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-4757.639F), sash2.getWidth(), 0.01F);
      assertEquals(1.0F, sash2.getEndAngle(), 0.01F);
      assertEquals((-4757.639F), sash2.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash2.getXAxis(), 0.01F);
      assertEquals(1.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1.7591685F), (-1.7591685F), (-1.7591685F), 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setWidth((-4757.639F));
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setNameYOffset(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      Integer integer0 = new Integer(8);
      assertNotNull(integer0);
      assertEquals(8, (int)integer0);
      
      homeDoorOrWindow0.setAngle(2.0F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      float float1 = homeDoorOrWindow0.getNameYOffset();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      
      boolean boolean0 = homeDoorOrWindow0.isNameCenterPointAt((-4757.639F), (-4757.639F), (-1881.2F));
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((-1.7591685F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(2.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-0.87958425F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals((-0.87958425F), homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1.7591685F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals((-4757.639F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      assertNotNull(temporaryURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = new BigDecimal(8);
      assertNotNull(bigDecimal0);
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      assertNotNull(sash0);
      assertEquals(1.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals((-4757.639F), sash0.getWidth(), 0.01F);
      assertEquals(5020.809F, sash0.getXAxis(), 0.01F);
      
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(0.5F, sash1.getWidth(), 0.01F);
      assertEquals(956.21326F, sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getStartAngle(), 0.01F);
      assertEquals(2.0F, sash1.getYAxis(), 0.01F);
      assertEquals(2.0F, sash1.getXAxis(), 0.01F);
      
      sashArray0[2] = sash1;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setDepth(0.0F);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      Integer integer0 = new Integer(8);
      assertNotNull(integer0);
      assertEquals(8, (int)integer0);
      
      homeDoorOrWindow0.setMovable(true);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertFalse(boolean0);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      
      homeDoorOrWindow0.setNameVisible(false);
      assertEquals(4, sashArray0.length);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertEquals((short)8, bigDecimal0.shortValue());
      assertEquals((byte)8, bigDecimal0.byteValue());
      assertEquals(8.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.25F, homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(8.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.5F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Sash[] sashArray0 = new Sash[11];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("bwv", "bwv", "bwv", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, false, 0.5F, 0, sashArray0, (float[][]) null, "bwv", false, bigDecimal0, bigDecimal0);
      bigDecimal0.equals(temporaryURLContent0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      boolean boolean0 = homeDoorOrWindow0.isTopRightPointAt(0.5F, 0, 0);
      assertTrue(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      float float0 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(0.5F, float0, 0.01F);
      
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.getNameStyle();
      homeDoorOrWindow0.getShininess();
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.5F, 1.0F, 8, 5020.809F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(3089.4956F, 0.0F, 5020.809F, 0.0F, 1.0F);
      sashArray0[1] = sash1;
      sashArray0[2] = sash0;
      Sash sash2 = new Sash(2.0F, 0.0F, 4396.095F, 5020.809F, 956.21326F);
      sashArray0[3] = sash2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, (-1881.2F), 0.5F, 0.5F, 0.0F, false, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.setDescription("");
      homeDoorOrWindow0.getDescription();
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      HomePieceOfFurniture.SortableProperty.values();
      homeDoorOrWindow0.getNameStyle();
      Integer integer0 = new Integer(1294);
      homeDoorOrWindow0.setColor(integer0);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 2.0F, 0.5F, 0.0F, 956.21326F);
      sashArray0[2] = sash1;
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      float float0 = homeDoorOrWindow0.getElevation();
      assertEquals(0.0F, float0, 0.01F);
      
      Integer integer0 = new Integer(8);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setModelMirrored(false);
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(2.0F, (-1323.0F), 3.4028235E38F);
      assertFalse(boolean0);
      
      float float1 = homeDoorOrWindow0.getGroundElevation();
      assertEquals(0.0F, float1, 0.01F);
      
      homeDoorOrWindow0.isNameVisible();
      float float2 = homeDoorOrWindow0.getX();
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.25F, float2, 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.25F, homeDoorOrWindow0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      BigDecimal bigDecimal0 = new BigDecimal(3507);
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.5F, true, 0.5F, 3507, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setDepth((-2.981651F));
      Integer integer0 = new Integer(3507);
      boolean boolean0 = homeDoorOrWindow0.isTopLeftPointAt(0.0F, 0.0F, 3.4028235E38F);
      assertEquals((-2.981651F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(2147032366);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(5020.809F, 0.0F, (-4757.639F), 0.0F, 1.0F);
      sashArray0[1] = sash0;
      Sash sash1 = new Sash(2.0F, 0.3926991F, 0.5F, 0.3926991F, 956.21326F);
      sashArray0[2] = sash1;
      bigDecimal0.longValue();
      sashArray0[3] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.5F, 0.5F, 0.5F, 0.3926991F, true, 0.3926991F, 2147032366, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("", "", (String) null, temporaryURLContent0, temporaryURLContent0, 0.3926991F, (-518.588F), (-4757.639F), 0.3926991F, true, (-518.588F), 0.0F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow1);
      homeDoorOrWindow1.setWidth((-1823.315F));
      homeDoorOrWindow1.getElevation();
      homeDoorOrWindow1.setDescription("");
      homeDoorOrWindow0.getDescription();
      homeDoorOrWindow1.getPriceValueAddedTaxIncluded();
      assertEquals((-1823.315F), homeDoorOrWindow1.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = new BigDecimal(8);
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash(2.0F, 8, 4396.095F, (-4757.639F), 956.21326F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.5F, 0.5F, 0.0F, true, 0.0F, 8, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setWidth(4396.095F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getNameYOffset();
      homeDoorOrWindow0.isNameCenterPointAt(0.5F, 2.0F, 1.75F);
      homeDoorOrWindow0.setNameXOffset(0.0F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getName();
      homePieceOfFurniture0.setElevation((-4757.639F));
      homeDoorOrWindow0.setNameStyle((TextStyle) null);
      assertEquals(4396.095F, homeDoorOrWindow0.getWidth(), 0.01F);
  }
}
