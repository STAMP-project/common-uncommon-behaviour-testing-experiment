/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 07 12:20:00 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.SortFilterModel;
import java.awt.AWTKeyStroke;
import java.awt.Frame;
import java.awt.GraphicsConfiguration;
import java.awt.HeadlessException;
import java.awt.MenuComponent;
import java.awt.event.MouseEvent;
import java.time.chrono.ThaiBuddhistEra;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.Action;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JToolBar;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SortFilterModel_ESTest extends SortFilterModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[][] objectArray0 = new Object[2][2];
      Object[] objectArray1 = new Object[7];
      StringContent stringContent0 = new StringContent((-3466));
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      objectArray1[0] = (Object) jTextPane0;
      Object object0 = new Object();
      objectArray1[1] = object0;
      Object object1 = new Object();
      objectArray1[2] = object1;
      objectArray1[3] = (Object) "";
      Object object2 = new Object();
      objectArray1[4] = object2;
      JTextPane jTextPane1 = new JTextPane();
      objectArray1[5] = (Object) jTextPane1;
      ThaiBuddhistEra thaiBuddhistEra0 = ThaiBuddhistEra.BE;
      objectArray1[6] = (Object) thaiBuddhistEra0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[5];
      objectArray2[0] = object1;
      objectArray2[1] = (Object) defaultStyledDocument0;
      objectArray2[2] = (Object) "F(J";
      objectArray2[3] = object1;
      objectArray2[4] = object2;
      objectArray0[1] = objectArray2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray2);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mousePressed((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.getColumnCount();
      sortFilterModel0.getColumnClass(1423);
      JTable jTable0 = new JTable(1694, 1694);
      sortFilterModel0.setTable(jTable0);
      int int0 = 0;
      sortFilterModel0.updateTable();
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(2536);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][7];
      Object[] objectArray1 = new Object[3];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = object2;
      objectArray2[1] = object0;
      objectArray2[2] = object0;
      objectArray2[3] = object2;
      objectArray2[4] = object1;
      objectArray2[5] = object1;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[0];
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = object2;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[8];
      objectArray5[0] = object0;
      objectArray5[1] = object1;
      objectArray5[2] = object0;
      objectArray5[3] = object0;
      objectArray5[4] = object2;
      objectArray5[5] = object2;
      objectArray5[6] = object2;
      objectArray5[7] = object1;
      objectArray0[4] = objectArray5;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      defaultTableModel0.isCellEditable((-2683), (-2683));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][7];
      Object[] objectArray1 = new Object[3];
      Object object0 = new Object();
      objectArray1[0] = object0;
      Object object1 = new Object();
      objectArray1[1] = object1;
      Object object2 = new Object();
      objectArray1[2] = object2;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = object2;
      objectArray2[1] = object0;
      objectArray2[2] = object0;
      objectArray2[3] = object2;
      objectArray2[4] = object1;
      objectArray2[5] = object1;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[0];
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[1];
      objectArray4[0] = object2;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[8];
      objectArray5[0] = object0;
      objectArray5[1] = object1;
      objectArray5[2] = object0;
      objectArray5[3] = object0;
      objectArray5[4] = object2;
      objectArray5[5] = object2;
      objectArray5[6] = object2;
      objectArray5[7] = object1;
      objectArray0[4] = objectArray5;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      defaultTableModel0.isCellEditable((-2683), (-2683));
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Object object3 = sortFilterModel0.getValueAt((-2683), (-1625));
      assertNull(object3);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Object object0 = sortFilterModel0.getValueAt((-1), (-1));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 35;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(35, 35);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.setTable((JTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 726;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2661, 726);
      int int1 = 1732;
      defaultTableModel0.getColumnName(1732);
      Stack<AWTKeyStroke> stack0 = new Stack<AWTKeyStroke>();
      AWTKeyStroke aWTKeyStroke0 = AWTKeyStroke.getAWTKeyStroke('I');
      stack0.add(aWTKeyStroke0);
      defaultTableModel0.insertRow(1732, (Vector) stack0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.getColumnCount();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int2 = 3;
      sortFilterModel0.setValueAt("BNQ", 3, 3);
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("{f>w/j/qV8");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn((-1784)).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel(tableModel0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(15, 15);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(true);
      sortFilterModel0.sort(11);
      String string0 = sortFilterModel0.getColumnName(15);
      assertEquals("P", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = sortFilterModel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<JTextPane> vector0 = new Vector<JTextPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 352);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.fireTableStructureChanged();
      sortFilterModel0.getRowCount();
      JToolBar jToolBar0 = new JToolBar();
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("Newzgrabber.SortFilterModel$Row", 352);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JButton jButton0 = jToolBar0.add((Action) styledEditorKit_FontSizeAction0);
      MouseEvent mouseEvent0 = null;
      try {
        mouseEvent0 = new MouseEvent(jButton0, (-1749), 0L, (-880), 710, 0, 323, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(false);
      int int0 = 20;
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 0, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.getColumnCount();
      JTable jTable0 = new JTable(0, 0);
      sortFilterModel0.setTable(jTable0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sortTable(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.awt.event.MouseEvent
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(15, 15);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort(11);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 2558;
      int int1 = 0;
      Vector<String> vector0 = new Vector<String>(2558, 0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 2558);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.findColumn((String) null);
      TableModelEvent tableModelEvent0 = new TableModelEvent(defaultTableModel0, 1442, (-1), 0);
      sortFilterModel0.fireTableChanged(tableModelEvent0);
      defaultTableModel0.getColumnClass(1754);
      defaultTableModel0.setColumnIdentifiers(vector0);
      defaultTableModel0.getColumnName((-1));
      vector0.add((String) null);
      MouseEvent mouseEvent0 = null;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(object0, 1341, 2558);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2558 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      sortFilterModel0.getValueAt((-136), 2686);
      Stack<JTextPane> stack0 = new Stack<JTextPane>();
      defaultTableModel0.addColumn((Object) sortFilterModel0, (Vector) stack0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel0, 3, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Stack<SortFilterModel> stack1 = new Stack<SortFilterModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack1, 309);
      Integer integer0 = new Integer(30);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Object object0 = sortFilterModel0.getValueAt(20, 1409);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SortFilterModel sortFilterModel0 = null;
      try {
        sortFilterModel0 = new SortFilterModel((TableModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      int int0 = 20;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 20);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Frame frame0 = mock(Frame.class, new ViolatedAssumptionAnswer());
      doReturn((GraphicsConfiguration) null).when(frame0).getGraphicsConfiguration();
      sortFilterModel0.getRowCount();
      JDialog jDialog0 = null;
      try {
        jDialog0 = new JDialog(frame0, "lES8f");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<JTextPane> vector0 = new Vector<JTextPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.fireTableStructureChanged();
      defaultTableModel0.getTableModelListeners();
      sortFilterModel0.sortTable(0);
      sortFilterModel0.getValueAt(539, 39);
      sortFilterModel0.mouseEntered((MouseEvent) null);
      sortFilterModel0.sortTable(39);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      sortFilterModel0.fireTableRowsInserted(2531, 2531);
      Object object3 = new Object();
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel1.getValueAt(2649, (-1));
      defaultTableModel0.addColumn((Object) null, objectArray0);
      Stack<Object> stack0 = new Stack<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      int int0 = (-2607);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable((-2607), 2531);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2607
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseClicked((MouseEvent) null);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      assertFalse(sortFilterModel1.equals((Object)sortFilterModel0));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) defaultTableModel0;
      objectArray0[1] = (Object) defaultTableModel0;
      objectArray0[2] = (Object) defaultTableModel0;
      defaultTableModel0.insertRow(0, objectArray0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = 2062;
      JTable jTable0 = new JTable(defaultTableModel0);
      jTable0.remove((MenuComponent) null);
      defaultTableModel0.addTableModelListener(jTable0);
      sortFilterModel0.sortTable((-1));
      int int1 = 30;
      sortFilterModel0.getColumnName(30);
      boolean boolean0 = true;
      sortFilterModel0.setSort(true);
      sortFilterModel0.getColumnName(2062);
      sortFilterModel0.fireTableDataChanged();
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(2062, 2062);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2062
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sortTable((-258));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableModel tableModel0 = mock(TableModel.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(tableModel0).getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(tableModel0);
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      int int0 = (-1168);
      int int1 = 0;
      // Undeclared exception!
      try { 
        jSlider0.getBaseline((-1168), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be >= 0
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<JTextPane> vector0 = new Vector<JTextPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 336);
      Integer integer0 = new Integer(336);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.updateTable();
      boolean boolean0 = sortFilterModel0.isCellEditable(9, 1362);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = sortFilterModel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(15, 15);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort(15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15 >= 15
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      Class class0 = sortFilterModel0.getColumnClass(55);
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      defaultTableModel0.getColumnCount();
      sortFilterModel0.getColumnName((-10));
      sortFilterModel0.getColumnClass((-1604));
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Object[][] objectArray0 = new Object[7][9];
      Object[] objectArray1 = new Object[0];
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      JTable jTable0 = new JTable();
      jTable0.getSelectionModel();
      JTable jTable1 = new JTable();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        jTable1.getColumn(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Identifier not found
         //
         verifyException("javax.swing.table.DefaultTableColumnModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      JTable jTable0 = new JTable();
      sortFilterModel0.setTable(jTable0);
      assertFalse(jTable0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(2661, 726);
      defaultTableModel1.getColumnName(1732);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel1);
      sortFilterModel0.mouseExited((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.fireTableRowsDeleted(203, 3255);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(20, 1423);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel2 = new SortFilterModel(defaultTableModel1);
      sortFilterModel2.sort(20);
      sortFilterModel2.mousePressed((MouseEvent) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        sortFilterModel2.setValueAt(object0, 1423, 3255);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1423
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      int int0 = 3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 3);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      defaultTableModel0.isCellEditable(3, 0);
      stack0.add("W\u0006Js2[U^g");
      boolean boolean0 = true;
      sortFilterModel0.setSort(true);
      sortFilterModel0.fireTableRowsDeleted(3, 3);
      stack0.add("");
      sortFilterModel0.getColumnCount();
      int int1 = (-3091);
      // Undeclared exception!
      try { 
        sortFilterModel0.sort((-3091));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      SortFilterModel sortFilterModel1 = new SortFilterModel(sortFilterModel0);
      sortFilterModel0.sort(1572);
      sortFilterModel1.mousePressed((MouseEvent) null);
      Object object0 = new Object();
      sortFilterModel0.sortTable(1207);
      sortFilterModel0.updateTable();
      assertNotSame(sortFilterModel0, sortFilterModel1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>(2558, 0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 2558);
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.mouseReleased((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(15, 15);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.setSort(false);
      sortFilterModel0.sort(11);
      String string0 = sortFilterModel0.getColumnName(15);
      assertEquals("P", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int0 = 203;
      sortFilterModel0.fireTableRowsDeleted(203, 3255);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(20, 1423);
      SortFilterModel sortFilterModel1 = new SortFilterModel(defaultTableModel1);
      SortFilterModel sortFilterModel2 = new SortFilterModel(sortFilterModel1);
      sortFilterModel2.sort(20);
      sortFilterModel1.mousePressed((MouseEvent) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt(defaultTableModel1, 23, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 23
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      Stack<JTextPane> stack1 = new Stack<JTextPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, stack1);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.getColumnCount();
      int int0 = 1;
      sortFilterModel0.fireTableRowsInserted(0, 0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) stack1;
      objectArray0[1] = (Object) stack1;
      objectArray0[2] = (Object) consumer0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      defaultTableModel0.addColumn((Object) stack0, objectArray0);
      stack0.forEach(consumer0);
      // Undeclared exception!
      try { 
        sortFilterModel0.isCellEditable(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.sort(23);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Vector<JTextPane> vector0 = new Vector<JTextPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getRowCount();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      sortFilterModel0.fireTableStructureChanged();
      defaultTableModel0.getTableModelListeners();
      TableModelEvent tableModelEvent0 = new TableModelEvent(sortFilterModel0, 4249, 539, 39);
      sortFilterModel0.fireTableChanged(tableModelEvent0);
      sortFilterModel0.sortTable(0);
      sortFilterModel0.getValueAt(539, 39);
      sortFilterModel0.mouseEntered((MouseEvent) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      String string0 = sortFilterModel0.getColumnName(7);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      int int0 = 0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      SortFilterModel sortFilterModel0 = new SortFilterModel(defaultTableModel0);
      int int1 = 300;
      sortFilterModel0.sort(300);
      // Undeclared exception!
      try { 
        sortFilterModel0.setValueAt("", 300, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 300
         //
         verifyException("Newzgrabber.SortFilterModel", e);
      }
  }
}
