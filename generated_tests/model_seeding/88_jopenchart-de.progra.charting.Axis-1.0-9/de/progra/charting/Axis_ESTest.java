/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 17:24:24 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Axis.VERTICAL;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ObjectChartDataModel objectChartDataModel1 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = mock(ChartDataModelConstraints.class, new ViolatedAssumptionAnswer());
      doReturn((double)2).when(chartDataModelConstraints0).getMaximumColumnValue();
      doReturn(2492.51148, 0.0).when(chartDataModelConstraints0).getMinimumColumnValue();
      objectChartDataModel1.setChartDataModelConstraints((-2347), chartDataModelConstraints0);
      ChartDataModelConstraints chartDataModelConstraints1 = objectChartDataModel1.getChartDataModelConstraints(4299);
      Axis axis0 = new Axis(4299, chartDataModelConstraints1);
      double double0 = axis0.getPixelForValue(2492.51148);
      assertEquals(0.0, double0, 0.01);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = mock(ChartDataModelConstraints.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(chartDataModelConstraints0).getMaximumColumnValue();
      doReturn(0.0).when(chartDataModelConstraints0).getMinimumColumnValue();
      objectChartDataModel0.setChartDataModelConstraints((-2347), chartDataModelConstraints0);
      ChartDataModelConstraints chartDataModelConstraints1 = objectChartDataModel0.getChartDataModelConstraints(4299);
      Axis axis0 = new Axis(4299, chartDataModelConstraints1);
      double double0 = axis0.getPointToPixelRatio();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-600));
      Axis axis0 = new Axis(1368, stackedChartDataModelConstraints0);
      axis0.setLength((-600));
      double double0 = axis0.getPointToPixelRatio();
      assertEquals((-600), axis0.getLength());
      assertEquals((-0.0016666666666666668), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(0);
      Axis axis0 = new Axis(654, chartDataModelConstraints0);
      double double0 = axis0.getPixelForValue((-1188.585));
      assertEquals(1, axis0.getAlignment());
      assertEquals((-2.552466850569495E12), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints(0);
      Axis axis0 = new Axis(64, chartDataModelConstraints0);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      
      axis0.setLength(0);
      int int0 = axis0.getLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-600));
      Axis axis0 = new Axis(1368, stackedChartDataModelConstraints0);
      axis0.setLength((-600));
      int int0 = axis0.getLength();
      assertEquals((-600), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 2);
      Axis axis0 = new Axis(2, stackedChartDataModelConstraints0);
      // Undeclared exception!
      axis0.getPointToPixelRatio();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = editableChartDataModel0.getChartDataModelConstraints(Integer.MAX_VALUE);
      Axis axis0 = new Axis(Integer.MAX_VALUE, chartDataModelConstraints0);
      // Undeclared exception!
      try { 
        axis0.getPointToPixelRatio();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Axis axis0 = new Axis(2, (ChartDataModelConstraints) null);
      // Undeclared exception!
      try { 
        axis0.getPointToPixelRatio();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 2);
      Axis axis0 = new Axis(2, stackedChartDataModelConstraints0);
      // Undeclared exception!
      axis0.getPixelForValue(2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = editableChartDataModel0.getChartDataModelConstraints(Integer.MAX_VALUE);
      Axis axis0 = new Axis(Integer.MAX_VALUE, chartDataModelConstraints0);
      // Undeclared exception!
      try { 
        axis0.getPixelForValue(Integer.MAX_VALUE);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Axis axis0 = new Axis(0, (ChartDataModelConstraints) null);
      // Undeclared exception!
      try { 
        axis0.getPixelForValue(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-600));
      Axis axis0 = new Axis(1368, stackedChartDataModelConstraints0);
      double double0 = axis0.getPointToPixelRatio();
      assertEquals(1, axis0.getAlignment());
      assertEquals(4.656612875245797E-10, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-600));
      Axis axis0 = new Axis(1368, stackedChartDataModelConstraints0);
      int int0 = axis0.getAlignment();
      assertEquals(1, int0);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints((-743));
      Axis axis0 = new Axis(2, chartDataModelConstraints0);
      double double0 = axis0.getPixelForValue(860);
      assertEquals(2, axis0.getAlignment());
      assertEquals(1.84683593642E12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      ChartDataModelConstraints chartDataModelConstraints0 = objectChartDataModel0.getChartDataModelConstraints((-942));
      Axis axis0 = new Axis(1, chartDataModelConstraints0);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(1, axis0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, (-600));
      Axis axis0 = new Axis(1368, stackedChartDataModelConstraints0);
      int int0 = axis0.getLength();
      assertEquals(1, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, int0);
  }
}
