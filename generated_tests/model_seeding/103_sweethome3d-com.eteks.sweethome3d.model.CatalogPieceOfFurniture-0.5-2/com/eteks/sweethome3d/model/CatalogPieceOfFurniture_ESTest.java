/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 17:09:22 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.math.BigDecimal;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CatalogPieceOfFurniture_ESTest extends CatalogPieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("os.version", (Content) null, (Content) null, 870L, (-820.0F), (-820.0F), true, false);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(870.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("yAr", (Content) null, (Content) null, 1861.687F, 0.0F, 1861.687F, false, false);
      assertNull(catalogPieceOfFurniture1.getCreationDate());
      assertFalse(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(1861.687F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertTrue(catalogPieceOfFurniture1.isProportional());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertEquals("yAr", catalogPieceOfFurniture1.getName());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertEquals(1861.687F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertNotNull(catalogPieceOfFurniture1);
      
      int int0 = catalogPieceOfFurniture0.compareTo(catalogPieceOfFurniture1);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(catalogPieceOfFurniture1, catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(870.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getCreationDate());
      assertFalse(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(1861.687F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertTrue(catalogPieceOfFurniture1.isProportional());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertEquals("yAr", catalogPieceOfFurniture1.getName());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertEquals(1861.687F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<CatalogPieceOfFurniture> class0 = CatalogPieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertNotNull(resourceURLContent0);
      
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (String) null, "", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, (float[][]) null, (String) null, true, bigDecimal0, bigDecimal0);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("", catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNotNull(catalogPieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = Integer.valueOf(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 2087, 1570.5F, 2087, 1570.5F, true, integer0, (float[][]) null, false, 0, true);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1570.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2087.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1570.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(2087.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNotNull(uRL0);
      
      URLContent uRLContent0 = new URLContent(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(uRLContent0.isJAREntry());
      assertNotNull(uRLContent0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("5=5H", uRLContent0, uRLContent0, 0.0F, 0.0F, 0.0F, true, true);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(uRLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("5=5H", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isTexturable();
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(uRLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("5=5H", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertNotNull(resourceURLContent0);
      
      Long long0 = Long.valueOf(1725L);
      assertEquals(1725L, (long)long0);
      assertNotNull(long0);
      
      BigDecimal bigDecimal0 = new BigDecimal(0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("\"?{Y", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "v!/", "", (String[]) null, long0, (Float) (-1.0F), resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.0F, 1725L, 3298.539F, 855.7F, true, "7YwK@)\u0006Z8xpub6Z<G", (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0, "6JR1oh{kBv#IS");
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getDescription());
      assertEquals("7YwK@)\u0006Z8xpub6Z<G", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), catalogPieceOfFurniture0.getGrade(), 0.01F);
      assertEquals("\"?{Y", catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getInformation());
      assertEquals(1725.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isDeformable());
      assertEquals(855.7F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("6JR1oh{kBv#IS", catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1725L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isResizable();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getDescription());
      assertEquals("7YwK@)\u0006Z8xpub6Z<G", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), catalogPieceOfFurniture0.getGrade(), 0.01F);
      assertEquals("\"?{Y", catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getInformation());
      assertEquals(1725.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isDeformable());
      assertEquals(855.7F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("6JR1oh{kBv#IS", catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1725L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      URLContent uRLContent0 = new URLContent(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(uRLContent0.isJAREntry());
      assertNotNull(uRLContent0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("5=5H", uRLContent0, uRLContent0, 0.0F, 0.0F, 0.0F, false, true);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(uRLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("5=5H", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isProportional();
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertFalse(uRLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("5=5H", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertNotNull(resourceURLContent0);
      
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, resourceURLContent0, resourceURLContent0, 2033.4678F, 0.0F, 1, (-2262.1328F), true, "3700-", integer0, (float[][]) null, false, 0, false);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals(2033.4678F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1, (int)catalogPieceOfFurniture0.getColor());
      assertEquals("3700-", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-2262.1328F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isMovable();
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals(2033.4678F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1, (int)catalogPieceOfFurniture0.getColor());
      assertEquals("3700-", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-2262.1328F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertNotNull(resourceURLContent0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("v!/", resourceURLContent0, resourceURLContent0, 2799.9F, (-3855.4065F), 0.0F, (-3855.4065F), false, (String) null, integer0, (float[][]) null, true, 1.0F, true);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isModifiable();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<CatalogPieceOfFurniture> class0 = CatalogPieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertNotNull(resourceURLContent0);
      
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNotNull(temporaryURLContent0);
      
      Integer integer0 = Integer.valueOf(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("RAxy~", temporaryURLContent0, resourceURLContent0, 3298.539F, 3298.539F, 870L, 0.0F, false, "", integer0, (float[][]) null, false, 0, false);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(3298.539F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("RAxy~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(870.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isDeformable();
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(3298.539F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("RAxy~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(870.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertNotNull(resourceURLContent0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, (-2591.5056F), 0.0F, 0.0F, false, "v!/", integer0, (float[][]) null, false, (-1.0F), true);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-2591.5056F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("v!/", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNotNull(catalogPieceOfFurniture0);
      
      boolean boolean0 = catalogPieceOfFurniture0.isBackFaceShown();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-2591.5056F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("v!/", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertNotNull(resourceURLContent0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, resourceURLContent0, resourceURLContent0, 0, 0.0F, (-721.2237F), false, false);
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-721.2237F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNotNull(catalogPieceOfFurniture0);
      
      float float0 = catalogPieceOfFurniture0.getWidth();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-721.2237F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertNotNull(resourceURLContent0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("z;Z!(;>uK", resourceURLContent0, resourceURLContent0, 2799.9F, (-3855.4065F), 0.0F, 3298.539F, false, (String) null, integer0, (float[][]) null, true, 1.0F, true);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals("z;Z!(;>uK", catalogPieceOfFurniture0.getName());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNotNull(catalogPieceOfFurniture0);
      
      float float0 = catalogPieceOfFurniture0.getWidth();
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals("z;Z!(;>uK", catalogPieceOfFurniture0.getName());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(2799.9F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("/b>4;!HF!Nr^tir#s`", (Content) null, (Content) null, (-1.0F), (-1.0F), (-1.0F), false, false);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("/b>4;!HF!Nr^tir#s`", catalogPieceOfFurniture0.getName());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      BigDecimal bigDecimal0 = catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("/b>4;!HF!Nr^tir#s`", catalogPieceOfFurniture0.getName());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      assertNotNull(uRLContent0);
      
      float[][] floatArray0 = new float[6][4];
      BigDecimal bigDecimal0 = new BigDecimal((-2988));
      assertEquals((byte)84, bigDecimal0.byteValue());
      assertEquals((short) (-2988), bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("%,/<m@\"sepj7ijz", "os.version", "%,/<m@\"sepj7ijz", uRLContent0, uRLContent0, uRLContent0, 1535.5637F, 0, 1535.5637F, 0, true, floatArray0, "os.version", true, bigDecimal0, bigDecimal0);
      assertEquals(6, floatArray0.length);
      assertEquals((byte)84, bigDecimal0.byteValue());
      assertEquals((short) (-2988), bigDecimal0.shortValue());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1535.5637F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertEquals("os.version", catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("%,/<m@\"sepj7ijz", catalogPieceOfFurniture0.getId());
      assertEquals("%,/<m@\"sepj7ijz", catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1535.5637F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      BigDecimal bigDecimal1 = catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertEquals(6, floatArray0.length);
      assertEquals((byte)84, bigDecimal0.byteValue());
      assertEquals((short) (-2988), bigDecimal0.shortValue());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1535.5637F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertEquals("os.version", catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("%,/<m@\"sepj7ijz", catalogPieceOfFurniture0.getId());
      assertEquals("%,/<m@\"sepj7ijz", catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1535.5637F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((byte)84, bigDecimal1.byteValue());
      assertEquals((short) (-2988), bigDecimal1.shortValue());
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Long long0 = new Long(3438L);
      assertEquals(3438L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((double) 0.0F);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      float[][] floatArray0 = new float[8][2];
      float[] floatArray1 = new float[8];
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      BigDecimal bigDecimal0 = new BigDecimal(33);
      assertEquals((short)33, bigDecimal0.shortValue());
      assertEquals((byte)33, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.io.HomeURLContent", "6'y'", "6'y'", "6'y'", stringArray0, long0, float0, (Content) null, (Content) null, (Content) null, (-16.667269F), 704, 33, 2494.874F, false, "com.eteks.sweethome3d.io.HomeURLContent", floatArray0, "com.eteks.sweethome3d.io.HomeURLContent", true, true, false, bigDecimal0, bigDecimal0, "tc\"v^|4X.");
      assertEquals(1, stringArray0.length);
      assertEquals(8, floatArray0.length);
      assertEquals((short)33, bigDecimal0.shortValue());
      assertEquals((byte)33, bigDecimal0.byteValue());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(704.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2494.874F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("6'y'", catalogPieceOfFurniture0.getName());
      assertEquals("6'y'", catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-16.667269F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("6'y'", catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, catalogPieceOfFurniture0.getGrade(), 0.01F);
      assertEquals("tc\"v^|4X.", catalogPieceOfFurniture0.getCurrency());
      assertEquals(3438L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(33.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      String[] stringArray1 = catalogPieceOfFurniture0.getTags();
      assertSame(stringArray0, stringArray1);
      assertSame(stringArray1, stringArray0);
      assertEquals(1, stringArray0.length);
      assertEquals(8, floatArray0.length);
      assertEquals(1, stringArray1.length);
      assertEquals((short)33, bigDecimal0.shortValue());
      assertEquals((byte)33, bigDecimal0.byteValue());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(704.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2494.874F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("6'y'", catalogPieceOfFurniture0.getName());
      assertEquals("6'y'", catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-16.667269F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.io.HomeURLContent", catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("6'y'", catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, catalogPieceOfFurniture0.getGrade(), 0.01F);
      assertEquals("tc\"v^|4X.", catalogPieceOfFurniture0.getCurrency());
      assertEquals(3438L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(33.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNotNull(stringArray1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("os.version", (Content) null, (Content) null, 870L, (-820.0F), (-820.0F), true, false);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(870.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNotNull(catalogPieceOfFurniture0);
      
      String string0 = catalogPieceOfFurniture0.getStaircaseCutOutShape();
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(870.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals((-820.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("os.version", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<CatalogPieceOfFurniture> class0 = CatalogPieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertNotNull(resourceURLContent0);
      
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNotNull(temporaryURLContent0);
      
      Integer integer0 = Integer.valueOf(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("RAxy~", temporaryURLContent0, resourceURLContent0, 3298.539F, 3298.539F, 870L, 0.0F, false, "", integer0, (float[][]) null, false, 0, false);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(870.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("RAxy~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNotNull(catalogPieceOfFurniture0);
      
      String string0 = catalogPieceOfFurniture0.getStaircaseCutOutShape();
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(temporaryURLContent0.isJAREntry());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(3298.539F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(870.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("RAxy~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNotNull(uRL0);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertNotNull(resourceURLContent0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("v!/", resourceURLContent0, resourceURLContent0, 2799.9F, (-3855.4065F), 0.0F, 3298.539F, false, "v!/", integer0, (float[][]) null, true, (-18.14516F), true);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(3298.539F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-18.14516F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("v!/", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNotNull(catalogPieceOfFurniture0);
      
      BigDecimal bigDecimal0 = catalogPieceOfFurniture0.getPrice();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(resourceURLContent0.isJAREntry());
      assertEquals(2799.9F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(3298.539F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-3855.4065F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-18.14516F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("v!/", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("v!/", catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(bigDecimal0);
  }
}
