/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 16:25:48 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import javax.swing.JLayeredPane;
import jigl.image.ColorModel;
import jigl.image.Image;
import jigl.image.InterpolationMethod;
import jigl.image.ROI;
import jigl.image.types.ColorImage;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedColorImage;
import jigl.image.types.InterpolatedGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GrayImage_ESTest extends GrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      short[][] shortArray0 = new short[1][8];
      short[] shortArray1 = new short[0];
      shortArray0[0] = shortArray1;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      short[][] shortArray0 = new short[0][9];
      GrayImage grayImage0 = new GrayImage(shortArray0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.multiply(730, 0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 2298);
      interpolatedGrayImage0.min();
      interpolatedGrayImage0.toString();
      interpolatedGrayImage0.addSum();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.toString();
      // Undeclared exception!
      interpolatedGrayImage0.addbuffer(731, 1524, 256, 6, 4);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      interpolatedGrayImage0.copy(rOI0);
      interpolatedGrayImage0.toString();
      interpolatedGrayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      ROI rOI1 = new ROI((-1338), 1629, 757, 0);
      rOI1.X();
      rOI0.Y();
      rOI1.X();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      interpolatedGrayImage1.copy(rOI0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.divide(8, 2096, 3259);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2096
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = new GrayImage(interpolatedGrayImage0);
      interpolatedGrayImage0.min();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      ROI rOI1 = new ROI((-1338), 1629, 757, 0);
      rOI1.X();
      rOI0.Y();
      rOI1.X();
      rOI1.setROI(0, 3301, 3301, 1629);
      ROI rOI2 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.divide(1, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1629
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      grayImage0.addbuffer(759, 0, 759);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      grayImage0.addSum();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      GrayImage grayImage1 = grayImage0.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      Integer integer0 = new Integer((-1387));
      ROI rOI1 = new ROI();
      ROI rOI2 = new ROI();
      grayImage1.absSum();
      grayImage1.addSum();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      grayImage0.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      GrayImage grayImage2 = grayImage0.add((Image<Integer>) grayImage1);
      // Undeclared exception!
      try { 
        grayImage2.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      grayImage0.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      rOI0.lx();
      rOI0.ly();
      Integer integer0 = new Integer((-1387));
      ROI rOI1 = new ROI(728, 0, 0, 728);
      ROI rOI2 = new ROI();
      GrayImage grayImage1 = grayImage0.addbuffer(0, 0, 0, 84, (-4831));
      grayImage1.sqrSum();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      // Undeclared exception!
      interpolatedGrayImage0.addbuffer(654, 654, (-1), (-484), 256);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.median(1);
      GrayImage grayImage1 = new GrayImage(grayImage0);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage1);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      interpolatedGrayImage1.min();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      interpolatedGrayImage0.clear(integer0);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractArrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      grayImage1.addSum();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      // Undeclared exception!
      try { 
        grayImage0.multiply(0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        GrayImage.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      ROI rOI0 = new ROI(2694, (-1338), 1050, (-1338));
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.clip(2663, 2663, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1338
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      grayImage0.toString();
      rOI0.setROI(1565, (-399), 6, 0);
      rOI0.setROI((-362), 1555, (-674), 0);
      grayImage0.toString();
      rOI0.lx();
      // Undeclared exception!
      try { 
        grayImage0.multiply((-362), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(745, 745);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage0.divide(745, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.median(0);
      GrayImage grayImage1 = new GrayImage(grayImage0);
      grayImage1.min();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      grayImage0.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      GrayImage grayImage2 = grayImage0.add((Image<Integer>) grayImage1);
      // Undeclared exception!
      try { 
        grayImage2.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      // Undeclared exception!
      try { 
        grayImage0.divide(608, 2, 4606);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage2 = grayImage0.copy();
      grayImage2.absSum();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short)91;
      GrayImage grayImage1 = new GrayImage(4, 0, shortArray0);
      grayImage1.divide((-306));
      int int0 = new Integer((short)91);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      grayImage1.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      int int0 = (-1387);
      Integer integer0 = new Integer((-1387));
      int int1 = 3319;
      GrayImage grayImage2 = new GrayImage(3319, 0);
      GrayImage grayImage3 = grayImage2.divide(0);
      // Undeclared exception!
      try { 
        grayImage3.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 262;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(262, 262);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage0.subtract(0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      GrayImage grayImage1 = grayImage0.addbuffer(0, 3603, 651);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      ROI rOI1 = new ROI();
      grayImage1.sqrSum();
      GrayImage grayImage2 = grayImage0.diff(grayImage0);
      grayImage1.add((Image<Integer>) grayImage0);
      // Undeclared exception!
      try { 
        grayImage0.multiply((Image<Integer>) grayImage2, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-1508);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-1508), (-1508));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      short[][] shortArray0 = new short[0][9];
      GrayImage grayImage0 = new GrayImage(shortArray0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage1.absSum();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      short[][] shortArray0 = new short[6][4];
      short[] shortArray1 = new short[1];
      shortArray1[0] = (short) (-1);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[5];
      shortArray2[0] = (short) (-1);
      shortArray2[1] = (short)2;
      shortArray2[2] = (short) (-1);
      shortArray2[3] = (short) (-1);
      shortArray2[4] = (short) (-1);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[3];
      shortArray3[0] = (short)2;
      shortArray3[1] = (short)2;
      shortArray3[2] = (short) (-1);
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[2];
      shortArray4[0] = (short) (-1);
      shortArray4[1] = (short) (-1);
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[0];
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[7];
      shortArray6[0] = (short)274;
      shortArray6[1] = (short) (-1);
      shortArray6[2] = (short) (-1);
      shortArray6[3] = (short)2161;
      shortArray6[4] = (short) (-1);
      shortArray6[5] = (short) (-1);
      shortArray6[6] = (short)2;
      shortArray0[5] = shortArray6;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(1, 0, 748, 0);
      // Undeclared exception!
      try { 
        grayImage0.multiply(16, 3273, 16, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3273
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 949;
      int int1 = (-804);
      int int2 = 128;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      grayImage0.toString();
      grayImage0.copy();
      int int0 = 1050;
      ROI rOI0 = new ROI(1984, 1050, (-1338), (-1338));
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1338
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      int int1 = new Integer(0);
      // Undeclared exception!
      try { 
        grayImage1.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 2298);
      interpolatedGrayImage0.min();
      GrayImage grayImage0 = interpolatedGrayImage0.addbuffer(1, 1, 0, 715, (-2112));
      interpolatedGrayImage0.diff(grayImage0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      interpolatedGrayImage0.toString(rOI0);
      rOI0.ly();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply(244, (-2695), (-4465));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2695
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.set(1595, 1595, integer0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 2;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      ROI rOI1 = new ROI();
      rOI1.uy();
      rOI1.ly();
      rOI1.ux();
      rOI1.lx();
      rOI1.ux();
      rOI1.ly();
      rOI1.lx();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((-481), rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      rOI0.ux();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      // Undeclared exception!
      try { 
        grayImage0.set(732, (-916), integer2, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1832
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      int int0 = 3026;
      Integer integer0 = Integer.valueOf(3026);
      // Undeclared exception!
      interpolatedGrayImage0.clear(integer0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.median((-790));
      GrayImage grayImage0 = new GrayImage(interpolatedGrayImage0);
      int int0 = 4301;
      float[] floatArray0 = new float[0];
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(4301, 4301, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 18498601
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      Integer integer0 = Integer.valueOf(2);
      interpolatedGrayImage0.clear(integer0);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int[] intArray0 = new int[0];
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-591), (-1273), intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[0] = (short)0;
      shortArray0[1] = (short)3;
      shortArray0[2] = (short)0;
      short short0 = (short)2773;
      shortArray0[3] = (short)2773;
      short short1 = (short) (-3078);
      shortArray0[4] = (short) (-3078);
      short short2 = (short)2;
      shortArray0[5] = (short)2;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(1121, 1121, shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      int int0 = 155;
      ROI rOI0 = new ROI(874, 199, 2, 155);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract(199, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 155
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      // Undeclared exception!
      try { 
        grayImage0.subtract((Image<Integer>) interpolatedGrayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      ROI rOI0 = new ROI();
      rOI0.setROI(2, 2, 888, 740);
      rOI0.uy();
      rOI0.ly();
      rOI0.setROI(740, 740, 3371, (-1678));
      int int0 = new Integer(740);
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.add((Image<Integer>) interpolatedGrayImage0, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 740
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      colorImage0.plane(0);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 759);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      interpolatedGrayImage0.subtract((Image<Integer>) grayImage0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      ROI rOI0 = new ROI(759, 3221, 759, 3221);
      rOI0.lx();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[5];
      intArray1[0] = 759;
      intArray1[1] = 0;
      intArray1[2] = 3221;
      intArray1[3] = 3221;
      intArray1[4] = 759;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 737;
      intArray2[1] = 759;
      intArray2[2] = 759;
      intArray2[3] = 3221;
      intArray2[4] = 3221;
      intArray0[1] = intArray2;
      GrayImage grayImage0 = new GrayImage(intArray0);
      // Undeclared exception!
      try { 
        grayImage0.multiply(1294, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3221
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(0, 0, 769, 0);
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      // Undeclared exception!
      try { 
        grayImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 0;
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-1276);
      GrayImage grayImage0 = new GrayImage(0, 0, shortArray0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-605);
      intArray0[1] = (int) (short) (-1276);
      intArray0[2] = 255;
      intArray0[3] = (int) (short) (-1276);
      intArray0[4] = (int) (short) (-1276);
      intArray0[5] = (int) (short) (-1276);
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      grayImage0.multiply((Image<Integer>) grayImage1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      int int1 = 1254;
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      GrayImage grayImage1 = grayImage0.addbuffer(0, 0, 0, 0, 728);
      grayImage1.addbuffer(0, 728, 248);
      int int0 = new Integer(248);
      rOI0.ux();
      rOI0.lx();
      rOI0.lx();
      GrayImage grayImage2 = new GrayImage(grayImage1);
      // Undeclared exception!
      try { 
        grayImage0.divide((Image<Integer>) grayImage1, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      ColorModel colorModel0 = ColorModel.HLS;
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage1.byteSize(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(745, 745);
      ROI rOI0 = new ROI();
      rOI0.setROI(745, 8, 745, 1080);
      // Undeclared exception!
      try { 
        grayImage0.divide(745, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 745
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = 2313;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      ROI rOI0 = new ROI(1865, (-3945), (-966), 1865);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add(2313, 746, 746, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3199
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      grayImage0.addbuffer(0, 0, 2163);
      ROI rOI0 = new ROI();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 1579);
      interpolatedGrayImage0.addbuffer(0, 488, 98);
      interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      interpolatedGrayImage0.addSum();
      // Undeclared exception!
      try { 
        grayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.max(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 3;
      intArray0[1] = 3;
      intArray0[2] = 3;
      intArray0[3] = 3;
      intArray0[4] = 3;
      intArray0[5] = 3;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(3, 3, intArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      colorImage0.min();
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage2 = grayImage0.copy();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      grayImage1.addbuffer(731, 1, 1, (-638), (-4361));
      grayImage2.diff(grayImage1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      Integer integer0 = Integer.valueOf(0);
      integer0.floatValue();
      Integer integer1 = Integer.valueOf(1436);
      GrayImage grayImage2 = grayImage1.clear(integer1);
      Integer integer2 = new Integer(2257);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      integer3.intValue();
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer.remainderUnsigned(2, (-3630));
      // Undeclared exception!
      try { 
        grayImage2.set((-1), 2, integer4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      rOI0.ux();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      ROI rOI1 = new ROI();
      GrayImage grayImage1 = grayImage0.addbuffer(2400, 2, 2400, (-916), (-916));
      grayImage1.sqrSum();
      grayImage1.diff(grayImage0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      interpolatedGrayImage0.addbuffer(2, 2, 128, 737, 128);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add(746, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      GrayImage grayImage1 = new GrayImage(0, 3319);
      grayImage0.divide(3319);
      // Undeclared exception!
      try { 
        grayImage1.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      grayImage1.addbuffer(0, 0, 0, 0, 728);
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.subtract((Image<Integer>) grayImage1, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(723, 723);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply(723);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      ROI rOI1 = new ROI((-1338), 1629, 757, 0);
      rOI1.X();
      rOI0.Y();
      rOI1.X();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      interpolatedGrayImage1.min();
      interpolatedGrayImage1.copy(rOI0);
      Integer.remainderUnsigned((-2667), 1629);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.set((-2667), 244, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(745, 745);
      ROI rOI0 = new ROI();
      rOI0.setROI(1, 1, 745, 2379);
      rOI0.setROI(2379, 2379, 11, 2379);
      // Undeclared exception!
      try { 
        grayImage0.divide(745, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2379
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.lx();
      // Undeclared exception!
      try { 
        grayImage0.multiply(738, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 759;
      ColorImage colorImage0 = new ColorImage(0, 759);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage0);
      GrayImage grayImage0 = new GrayImage(759, 759);
      // Undeclared exception!
      grayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      short[][] shortArray0 = new short[2][7];
      short[] shortArray1 = new short[2];
      shortArray1[0] = (short)737;
      shortArray1[1] = (short)735;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[8];
      shortArray2[0] = (short)737;
      shortArray2[1] = (short)735;
      shortArray2[2] = (short)737;
      shortArray2[3] = (short)731;
      shortArray2[4] = (short)737;
      shortArray2[5] = (short)757;
      shortArray2[6] = (short)737;
      shortArray2[7] = (short)737;
      shortArray0[1] = shortArray2;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      interpolatedGrayImage0.divide(3319);
      interpolatedGrayImage0.addSum();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage0.subtract(3, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.toString();
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      int int0 = (-1338);
      // Undeclared exception!
      try { 
        grayImage0.divide((-1338));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 713;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(713, 711);
      ROI rOI0 = new ROI();
      int int1 = 509;
      interpolatedGrayImage0.copy(rOI0);
      int int2 = 198;
      rOI0.setROI(711, (-2089), 198, 693);
      int int3 = 731;
      int int4 = 16;
      rOI0.setROI(713, 509, 731, 16);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 713
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.ly();
      rOI0.setROI(712, 5057, 5057, 5057);
      // Undeclared exception!
      try { 
        grayImage0.max(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5057
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.median((-790));
      GrayImage grayImage0 = new GrayImage(interpolatedGrayImage0);
      grayImage0.max();
      int int0 = 4301;
      float[] floatArray0 = new float[0];
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(4301, 4301, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 18498601
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      short[][] shortArray0 = new short[0][4];
      GrayImage grayImage0 = new GrayImage(shortArray0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[][] intArray0 = new int[5][6];
      int[] intArray1 = new int[3];
      intArray1[0] = (-1066);
      intArray1[1] = 128;
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[4];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 6;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[9];
      intArray4[0] = 128;
      intArray4[1] = 128;
      intArray4[2] = 128;
      intArray4[3] = 0;
      intArray4[4] = 0;
      intArray4[5] = 128;
      intArray4[6] = 128;
      intArray4[7] = 6;
      intArray4[8] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 6;
      intArray0[4] = intArray5;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.util.ArrayUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      colorImage0.min();
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      grayImage0.copy();
      int int0 = (-4361);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      int int1 = 1;
      int int2 = 1;
      GrayImage grayImage2 = grayImage1.addbuffer(759, 1, 1, (-638), (-4361));
      // Undeclared exception!
      grayImage2.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.subtract((Image<Integer>) grayImage0, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.util.ArrayUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      // Undeclared exception!
      try { 
        grayImage1.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.max();
      // Undeclared exception!
      try { 
        grayImage0.multiply(0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.lx();
      // Undeclared exception!
      try { 
        grayImage0.multiply(0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      ROI rOI0 = new ROI(746, 746, (-2218), (-2218));
      Integer integer0 = new Integer(746);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2218
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.median(0);
      // Undeclared exception!
      grayImage0.addbuffer(315, 315, 315, (-1616), (-1616));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      GrayImage grayImage2 = grayImage0.multiply((Image<Integer>) grayImage1);
      ROI rOI0 = new ROI(2694, (-1338), 1050, (-1338));
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      ROI rOI1 = new ROI();
      rOI1.uy();
      rOI1.ly();
      rOI1.ux();
      rOI1.lx();
      rOI1.ux();
      rOI1.ly();
      // Undeclared exception!
      try { 
        grayImage1.add((Image<Integer>) grayImage2, rOI0, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      grayImage0.copy();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = new Integer(0);
      integer1.intValue();
      // Undeclared exception!
      try { 
        grayImage1.set(1500, (-4361), (Integer) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4361
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = (-15);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-15), (-15), (short[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      interpolatedGrayImage0.clear(integer0);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage1.toString();
      grayImage0.absSum();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0:759\n";
      stringArray0[1] = "0:759\n";
      stringArray0[2] = "0:759\n";
      stringArray0[3] = "U0bUj";
      // Undeclared exception!
      try { 
        GrayImage.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      float float0 = (-3045.0F);
      float float1 = (-1559.0F);
      // Undeclared exception!
      interpolatedGrayImage0.addbuffer(1550, 1562, 1550);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      String[] stringArray0 = new String[5];
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(5, 0, (short[]) null);
      GrayImage grayImage1 = new GrayImage(grayImage0);
      ROI rOI0 = new ROI();
      rOI0.lx();
      GrayImage grayImage2 = null;
      try {
        grayImage2 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      rOI0.ly();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add((Image<Integer>) grayImage0, rOI0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 15;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(15, 15, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      Integer.valueOf((-2053));
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integer0.intValue();
      integer0.intValue();
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integer1.floatValue();
      grayImage0.clear(integer1);
      grayImage0.copy();
      // Undeclared exception!
      try { 
        grayImage0.addbuffer(105, (-2053), (-763), 1, 16);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(0, 0, 0, (-916));
      rOI0.ux();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      ROI rOI1 = new ROI();
      GrayImage grayImage1 = grayImage0.addbuffer(2400, 0, 2400, (-916), (-916));
      grayImage1.sqrSum();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      rOI0.ux();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      grayImage0.diff(grayImage0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(3035, 3035);
      GrayImage grayImage1 = new GrayImage(grayImage0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      int int0 = 745;
      GrayImage grayImage0 = new GrayImage(745, 745);
      // Undeclared exception!
      grayImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(1, 1);
      GrayImage grayImage1 = grayImage0.copy();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.min(1, 455);
      integer0.intValue();
      grayImage1.copy();
      // Undeclared exception!
      try { 
        grayImage1.divide(8, (-30000), (-3849));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -30000
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.median((-790));
      GrayImage grayImage0 = new GrayImage(interpolatedGrayImage0);
      float[] floatArray0 = new float[0];
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(4301, 4301, floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 0 and should be 18498601
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      ROI rOI1 = new ROI((-1338), 1629, 0, 0);
      rOI0.Y();
      rOI1.X();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      interpolatedGrayImage1.min();
      interpolatedGrayImage1.copy(rOI0);
      int int0 = 8;
      int int1 = 3259;
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.divide(2912, 2, 4, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      grayImage0.copy();
      GrayImage grayImage1 = new GrayImage(grayImage0);
      grayImage0.min();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.lx();
      ColorImage colorImage0 = new ColorImage();
      // Undeclared exception!
      try { 
        grayImage0.get(0, 4557);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4557
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 2313;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      ROI rOI0 = new ROI(1865, (-3945), (-966), 1865);
      rOI0.setROI((-1066), 746, (-918), 6);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add(2313, 746, 746, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      GrayImage grayImage2 = grayImage0.multiply((Image<Integer>) grayImage1);
      short[] shortArray0 = new short[4];
      shortArray0[1] = (short)1201;
      shortArray0[2] = (short)2394;
      shortArray0[3] = (short)2386;
      GrayImage grayImage3 = new GrayImage(2381, 0, shortArray0);
      grayImage2.divide((-16777216));
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      grayImage3.addSum();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      colorImage0.min();
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      grayImage0.copy();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      GrayImage grayImage2 = grayImage1.addbuffer(731, 1, 1, (-638), (-4361));
      grayImage1.subtract((Image<Integer>) grayImage2);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      // Undeclared exception!
      try { 
        grayImage0.multiply(1254, 0, 3409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.subtract((Image<Integer>) grayImage1, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      grayImage0.addSum();
      grayImage0.clear();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((java.awt.Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.copy();
      GrayImage grayImage1 = null;
      try {
        grayImage1 = new GrayImage((short[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(710, 710);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.divide(1395);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.addbuffer(0, 3603, 651);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      ROI rOI1 = new ROI();
      GrayImage grayImage1 = grayImage0.addbuffer(2400, 2, 2400, (-916), (-916));
      grayImage1.sqrSum();
      // Undeclared exception!
      try { 
        grayImage1.diff(grayImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(Integer.MAX_VALUE, 2, (-2894), (-649));
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      ROI rOI1 = new ROI();
      GrayImage grayImage1 = grayImage0.addbuffer(4, 2, (-2894), (-881), Integer.MAX_VALUE);
      grayImage1.sqrSum();
      grayImage0.diff(grayImage1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.toString();
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      // Undeclared exception!
      try { 
        grayImage0.absSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      // Undeclared exception!
      try { 
        grayImage0.copy((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[0];
      int int0 = 16;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(16, 16, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      Integer integer0 = new Integer(1629);
      ROI rOI1 = new ROI(2, (-1387), 753, 32767);
      ROI rOI2 = new ROI();
      interpolatedGrayImage0.addbuffer(2, 1085, (-1387), 740, 2);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.sqrSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      colorImage1.maxComponent();
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      GrayImage grayImage2 = grayImage0.multiply((Image<Integer>) grayImage1);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)1784;
      grayImage0.toString();
      grayImage2.median((int) (short)1784);
      GrayImage grayImage3 = new GrayImage(grayImage1);
      grayImage3.min();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = (-4355);
      intArray2[1] = 717;
      intArray2[2] = (-1805);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[3];
      intArray4[0] = (-4355);
      intArray4[1] = 717;
      intArray4[2] = 717;
      intArray0[3] = intArray4;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.util.ArrayUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(2563, 2563);
      // Undeclared exception!
      grayImage0.min();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      grayImage0.copy();
      Integer integer0 = new Integer((-2582));
      int int0 = 8;
      Integer.min(0, 8);
      integer0.intValue();
      GrayImage grayImage1 = grayImage0.copy();
      integer0.floatValue();
      GrayImage grayImage2 = grayImage0.clear((Integer) (-2582));
      grayImage1.copy();
      // Undeclared exception!
      try { 
        grayImage2.addbuffer((-2582), 971, 2145, 162, 162);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      interpolatedGrayImage1.subtract((Image<Integer>) interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      interpolatedGrayImage0.toString();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract(0, 0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 2;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.toString();
      interpolatedGrayImage0.copy();
      int int1 = 2694;
      Integer integer0 = Integer.valueOf(0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.set((-1837), 1, integer0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1837
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-3), 6);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(2298, 0);
      ROI rOI0 = new ROI((-33), 0, 0, (-694));
      // Undeclared exception!
      try { 
        grayImage0.multiply((-1), 0, 748, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -694
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[][] intArray0 = new int[5][3];
      int[] intArray1 = new int[4];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = (-1737);
      intArray2[5] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = 32767;
      intArray3[1] = 0;
      intArray3[2] = (-1737);
      intArray3[3] = 0;
      intArray3[4] = 0;
      intArray3[5] = 0;
      intArray3[6] = 0;
      intArray3[7] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      GrayImage grayImage1 = null;
      try {
        grayImage1 = new GrayImage(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.util.ArrayUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      Integer integer0 = new Integer(1629);
      ROI rOI1 = new ROI(2, (-1387), 753, 32767);
      ROI rOI2 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.addSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.min();
      grayImage0.toString();
      GrayImage grayImage1 = grayImage0.copy();
      grayImage1.min();
      grayImage1.absSum();
      // Undeclared exception!
      try { 
        grayImage0.subtract(16, 0, (-2096));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int int0 = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      int int1 = 1254;
      ROI rOI0 = new ROI();
      rOI0.uy();
      rOI0.ly();
      rOI0.ux();
      rOI0.setROI((-1), 8, 0, 1254);
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        grayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      Integer integer0 = Integer.valueOf(2);
      interpolatedGrayImage0.clear(integer0);
      GrayImage grayImage0 = interpolatedGrayImage0.copy();
      // Undeclared exception!
      try { 
        grayImage0.addbuffer((-763), (-763), 945, 1346, 1595);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      int int0 = 3;
      // Undeclared exception!
      try { 
        interpolatedColorImage0.plane(3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      short[][] shortArray0 = new short[1][9];
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      int int0 = 1865;
      ROI rOI0 = new ROI(1865, (-3945), (-966), 1865);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add(2313, 746, 746, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3199
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      ROI rOI0 = new ROI();
      Integer integer0 = new Integer(0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      short[][] shortArray0 = new short[0][9];
      GrayImage grayImage0 = new GrayImage(shortArray0);
      ROI rOI0 = new ROI();
      rOI0.uy();
      Integer integer0 = new Integer(0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage1.absSum();
      // Undeclared exception!
      try { 
        grayImage1.add((-2683), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      // Undeclared exception!
      try { 
        grayImage0.divide(0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      interpolatedGrayImage0.copy();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.remainderUnsigned(744, 2);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.set((-3630), 728, integer1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 728
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage1.toString();
      grayImage0.min();
      grayImage1.multiply((Image<Integer>) grayImage0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(2563, 2563);
      // Undeclared exception!
      try { 
        grayImage0.addSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      grayImage0.median(0);
      GrayImage grayImage1 = new GrayImage(grayImage0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      ColorImage colorImage1 = new ColorImage(colorImage0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage1);
      GrayImage grayImage1 = grayImage0.copy();
      int int0 = 1050;
      ROI rOI0 = new ROI(2694, (-1340), 1050, (-1340));
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      // Undeclared exception!
      try { 
        grayImage1.add((-1), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1340
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      ROI rOI0 = new ROI();
      rOI0.ly();
      ROI rOI1 = new ROI((-1338), 1629, 757, 0);
      rOI1.X();
      rOI0.Y();
      rOI1.X();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
      interpolatedGrayImage1.min();
      interpolatedGrayImage1.copy(rOI0);
      int int0 = 8;
      int int1 = 3259;
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.divide(2912, 2, 4, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      grayImage0.addSum();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage0);
      grayImage0.absSum();
      // Undeclared exception!
      try { 
        grayImage0.addbuffer((-5670), 0, (-3565));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      GrayImage grayImage0 = colorImage0.plane(0);
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.absSum();
      grayImage0.min();
      GrayImage grayImage2 = grayImage0.multiply((Image<Integer>) grayImage1);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)1784;
      shortArray0[1] = (short)1201;
      shortArray0[2] = (short)2394;
      shortArray0[3] = (short)2386;
      GrayImage grayImage3 = new GrayImage(2381, 0, shortArray0);
      grayImage2.divide((-16777216));
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      grayImage3.addSum();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 732);
      interpolatedGrayImage0.copy();
      interpolatedGrayImage0.absSum();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI();
      rOI0.lx();
      // Undeclared exception!
      try { 
        grayImage0.get(0, 4557);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4557
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        grayImage0.subtract(239, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -916
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0, (short[]) null);
      assertNotNull(grayImage0);
      assertEquals(0, grayImage0.X());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0, grayImage0.absSum());
      
      ROI rOI0 = new ROI(2, 0, 2, (-916));
      assertNotNull(rOI0);
      assertEquals(917, rOI0.Y());
      assertEquals(2, rOI0.lx());
      assertEquals((-916), rOI0.uy());
      assertEquals(2, rOI0.ux());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.ly());
      
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      assertEquals(300, (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      assertEquals(400, (int)integer1);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      
      ROI rOI1 = new ROI();
      assertNotNull(rOI1);
      assertEquals(0, rOI1.ux());
      assertEquals(0, rOI1.uy());
      assertEquals(1, rOI1.X());
      assertEquals(1, rOI1.Y());
      assertEquals(0, rOI1.lx());
      assertEquals(0, rOI1.ly());
      assertFalse(rOI1.equals((Object)rOI0));
      
      GrayImage grayImage1 = grayImage0.addbuffer(2400, 2, 2400, (-916), (-916));
      grayImage1.sqrSum();
      grayImage1.diff(grayImage0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      assertNotNull(grayImage0);
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      int int0 = rOI0.uy();
      assertEquals(0, int0);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      
      GrayImage grayImage1 = grayImage0.addbuffer(0, 0, 0, 0, 728);
      assertNotNull(grayImage1);
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage1.absSum());
      assertEquals(0L, grayImage1.sqrSum());
      assertEquals(0, grayImage1.Y());
      assertEquals(0, grayImage1.X());
      assertEquals(0, grayImage1.addSum());
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage1, grayImage0);
      assertFalse(grayImage1.equals((Object)grayImage0));
      
      GrayImage grayImage2 = grayImage1.addbuffer(0, 728, 248);
      assertNotNull(grayImage2);
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage1.absSum());
      assertEquals(0L, grayImage1.sqrSum());
      assertEquals(0, grayImage1.Y());
      assertEquals(0, grayImage1.X());
      assertEquals(0, grayImage1.addSum());
      assertEquals(0L, grayImage2.sqrSum());
      assertEquals(0, grayImage2.addSum());
      assertEquals(0, grayImage2.X());
      assertEquals(0, grayImage2.absSum());
      assertEquals(728, grayImage2.Y());
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage0, grayImage2);
      assertNotSame(grayImage1, grayImage2);
      assertNotSame(grayImage1, grayImage0);
      assertNotSame(grayImage2, grayImage0);
      assertNotSame(grayImage2, grayImage1);
      assertFalse(grayImage0.equals((Object)grayImage1));
      assertFalse(grayImage1.equals((Object)grayImage0));
      assertFalse(grayImage2.equals((Object)grayImage0));
      assertFalse(grayImage2.equals((Object)grayImage1));
      
      int int1 = rOI0.ly();
      assertEquals(0, int1);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertTrue(int1 == int0);
      
      int int2 = rOI0.ux();
      assertEquals(0, int2);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      
      int int3 = rOI0.lx();
      assertEquals(0, int3);
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.uy());
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      
      int int4 = new Integer(0);
      assertEquals(0, int4);
      assertTrue(int4 == int1);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      
      int int5 = new Integer(0);
      assertEquals(0, int5);
      assertTrue(int5 == int2);
      assertTrue(int5 == int1);
      assertTrue(int5 == int0);
      assertTrue(int5 == int4);
      assertTrue(int5 == int3);
      
      Integer integer0 = new Integer((-1387));
      assertEquals((-1387), (int)integer0);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int5));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int3));
      assertFalse(integer0.equals((Object)int4));
      
      ROI rOI1 = new ROI();
      assertNotNull(rOI1);
      assertEquals(1, rOI1.Y());
      assertEquals(1, rOI1.X());
      assertEquals(0, rOI1.lx());
      assertEquals(0, rOI1.ly());
      assertEquals(0, rOI1.uy());
      assertEquals(0, rOI1.ux());
      assertFalse(rOI1.equals((Object)rOI0));
      
      ROI rOI2 = new ROI();
      assertNotNull(rOI2);
      assertEquals(0, rOI2.lx());
      assertEquals(1, rOI2.Y());
      assertEquals(1, rOI2.X());
      assertEquals(0, rOI2.ly());
      assertEquals(0, rOI2.uy());
      assertEquals(0, rOI2.ux());
      assertFalse(rOI2.equals((Object)rOI1));
      assertFalse(rOI2.equals((Object)rOI0));
      
      // Undeclared exception!
      try { 
        grayImage0.subtract((-1387), rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      assertNotNull(grayImage0);
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      
      GrayImage grayImage1 = grayImage0.copy();
      assertNotNull(grayImage1);
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage1.X());
      assertEquals(0, grayImage1.addSum());
      assertEquals(0L, grayImage1.sqrSum());
      assertEquals(0, grayImage1.Y());
      assertEquals(0, grayImage1.absSum());
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage1, grayImage0);
      assertFalse(grayImage1.equals((Object)grayImage0));
      
      String string0 = grayImage0.toString();
      assertEquals("0:0\n", string0);
      assertNotNull(string0);
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertNotSame(grayImage0, grayImage1);
      assertFalse(grayImage0.equals((Object)grayImage1));
      
      Integer integer0 = grayImage1.max();
      assertNull(integer0);
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage1.X());
      assertEquals(0, grayImage1.addSum());
      assertEquals(0L, grayImage1.sqrSum());
      assertEquals(0, grayImage1.Y());
      assertEquals(0, grayImage1.absSum());
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage1, grayImage0);
      assertFalse(grayImage0.equals((Object)grayImage1));
      assertFalse(grayImage1.equals((Object)grayImage0));
      
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      assertEquals((-30000), (int)integer1);
      assertNotNull(integer1);
      
      int int0 = Integer.min(0, 8);
      assertEquals(0, int0);
      
      int int1 = integer1.intValue();
      assertEquals((-30000), int1);
      assertFalse(integer1.equals((Object)int0));
      assertFalse(int1 == int0);
      
      GrayImage grayImage2 = grayImage0.copy();
      assertNotNull(grayImage2);
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage0.addSum());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.Y());
      assertEquals(0, grayImage2.absSum());
      assertEquals(0L, grayImage2.sqrSum());
      assertEquals(0, grayImage2.Y());
      assertEquals(0, grayImage2.X());
      assertEquals(0, grayImage2.addSum());
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage0, grayImage2);
      assertNotSame(grayImage2, grayImage1);
      assertNotSame(grayImage2, grayImage0);
      assertFalse(grayImage0.equals((Object)grayImage1));
      assertFalse(grayImage2.equals((Object)grayImage1));
      assertFalse(grayImage2.equals((Object)grayImage0));
      
      // Undeclared exception!
      try { 
        grayImage1.divide(0, 0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 1595);
      assertNotNull(interpolatedGrayImage0);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(1595, interpolatedGrayImage0.Y());
      
      Integer integer0 = Integer.valueOf(2);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.clear(integer0);
      assertNotNull(interpolatedGrayImage1);
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(6380, interpolatedGrayImage0.absSum());
      assertEquals(6380, interpolatedGrayImage0.addSum());
      assertEquals(1595, interpolatedGrayImage0.Y());
      assertEquals(12760L, interpolatedGrayImage0.sqrSum());
      assertEquals(2, interpolatedGrayImage1.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage1.getInterpolationMethod());
      assertEquals(6380, interpolatedGrayImage1.absSum());
      assertEquals(12760L, interpolatedGrayImage1.sqrSum());
      assertEquals(1595, interpolatedGrayImage1.Y());
      assertSame(interpolatedGrayImage0, interpolatedGrayImage1);
      assertSame(interpolatedGrayImage1, interpolatedGrayImage0);
      
      short[] shortArray0 = new short[8];
      shortArray0[0] = (short)1857;
      shortArray0[2] = (short)717;
      shortArray0[3] = (short)255;
      shortArray0[4] = (short)2897;
      shortArray0[5] = (short)0;
      shortArray0[6] = (short) (-1);
      shortArray0[7] = (short)2066;
      ROI rOI0 = new ROI();
      interpolatedGrayImage0.subtract((int) (short)1612, rOI0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      assertNotNull(interpolatedGrayImage0);
      assertEquals(2, interpolatedGrayImage0.Y());
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      
      String string0 = interpolatedGrayImage0.toString();
      assertEquals("2:2\nnull null \nnull null \n", string0);
      assertNotNull(string0);
      assertEquals(2, interpolatedGrayImage0.Y());
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.diff(interpolatedGrayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2, 2);
      assertNotNull(interpolatedGrayImage0);
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(2, interpolatedGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      
      InterpolatedGrayImage interpolatedGrayImage1 = (InterpolatedGrayImage)interpolatedGrayImage0.copy();
      assertNotNull(interpolatedGrayImage1);
      assertEquals(2, interpolatedGrayImage0.X());
      assertEquals(2, interpolatedGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage1.getInterpolationMethod());
      assertEquals(2, interpolatedGrayImage1.Y());
      assertEquals(2, interpolatedGrayImage1.X());
      assertNotSame(interpolatedGrayImage0, interpolatedGrayImage1);
      assertNotSame(interpolatedGrayImage1, interpolatedGrayImage0);
      assertFalse(interpolatedGrayImage1.equals((Object)interpolatedGrayImage0));
      
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.absSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(2313, 754);
      assertNotNull(interpolatedGrayImage0);
      assertEquals(754, interpolatedGrayImage0.Y());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedGrayImage0.getInterpolationMethod());
      assertEquals(2313, interpolatedGrayImage0.X());
      
      Integer integer0 = Integer.valueOf(3026);
      assertEquals(3026, (int)integer0);
      assertNotNull(integer0);
      
      // Undeclared exception!
      interpolatedGrayImage0.clear(integer0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      short[] shortArray0 = new short[0];
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(11, 11, shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 759);
      assertNotNull(colorImage0);
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      
      GrayImage grayImage0 = colorImage0.plane(0);
      assertNotNull(grayImage0);
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.addSum());
      assertEquals(759, grayImage0.Y());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.X());
      
      ColorImage colorImage1 = new ColorImage(colorImage0);
      assertNotNull(colorImage1);
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      assertEquals(0, colorImage1.X());
      assertEquals(759, colorImage1.Y());
      assertEquals(ColorModel.RGB, colorImage1.getColorModel());
      assertFalse(colorImage1.equals((Object)colorImage0));
      
      GrayImage grayImage1 = grayImage0.addbuffer(759, 0, 759);
      assertNotNull(grayImage1);
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.addSum());
      assertEquals(759, grayImage0.Y());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.X());
      assertEquals(0, grayImage1.absSum());
      assertEquals(759, grayImage1.X());
      assertEquals(0L, grayImage1.sqrSum());
      assertEquals(0, grayImage1.addSum());
      assertEquals(0, grayImage1.Y());
      assertNotSame(colorImage0, colorImage1);
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage1, grayImage0);
      assertFalse(colorImage0.equals((Object)colorImage1));
      assertFalse(grayImage1.equals((Object)grayImage0));
      
      ColorModel colorModel0 = ColorModel.RGB;
      colorImage1.colorModel = colorModel0;
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      assertEquals(0, colorImage1.X());
      assertEquals(759, colorImage1.Y());
      assertEquals(ColorModel.RGB, colorImage1.getColorModel());
      
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      assertNotNull(interpolatedColorImage0);
      assertEquals(ColorModel.RGB, interpolatedColorImage0.getColorModel());
      assertEquals(InterpolationMethod.NEIGHBOR, interpolatedColorImage0.getInterpolationMethod());
      assertEquals(0, interpolatedColorImage0.Y());
      assertEquals(0, interpolatedColorImage0.X());
      
      GrayImage grayImage2 = grayImage0.copy();
      assertNotNull(grayImage2);
      assertEquals(0, colorImage0.X());
      assertEquals(759, colorImage0.Y());
      assertEquals(ColorModel.RGB, colorImage0.getColorModel());
      assertEquals(0L, grayImage0.sqrSum());
      assertEquals(0, grayImage0.addSum());
      assertEquals(759, grayImage0.Y());
      assertEquals(0, grayImage0.absSum());
      assertEquals(0, grayImage0.X());
      assertEquals(759, grayImage2.Y());
      assertEquals(0, grayImage2.absSum());
      assertEquals(0, grayImage2.addSum());
      assertEquals(0, grayImage2.X());
      assertEquals(0L, grayImage2.sqrSum());
      assertNotSame(colorImage0, colorImage1);
      assertNotSame(grayImage0, grayImage2);
      assertNotSame(grayImage0, grayImage1);
      assertNotSame(grayImage2, grayImage1);
      assertNotSame(grayImage2, grayImage0);
      assertFalse(colorImage0.equals((Object)colorImage1));
      assertFalse(grayImage0.equals((Object)grayImage1));
      assertFalse(grayImage2.equals((Object)grayImage1));
      assertFalse(grayImage2.equals((Object)grayImage0));
      
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      assertEquals((-30000), (int)integer1);
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      
      // Undeclared exception!
      try { 
        grayImage1.set(5, (-4361), integer1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4361
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 0);
      int[] intArray0 = new int[0];
      GrayImage grayImage1 = new GrayImage(0, 0, intArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      integer0.intValue();
      grayImage0.copy();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integer1.intValue();
      integer1.intValue();
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      integer2.floatValue();
      integer2.floatValue();
      GrayImage grayImage2 = grayImage1.clear(integer2);
      GrayImage grayImage3 = grayImage2.copy();
      assertEquals(0, grayImage3.Y());
      assertEquals(0, grayImage3.X());
      
      GrayImage grayImage4 = grayImage1.addbuffer(0, 971, (-1), 148, 32767);
      assertEquals(971, grayImage4.Y());
      assertNotSame(grayImage1, grayImage3);
      assertEquals(0, grayImage4.X());
  }
}
