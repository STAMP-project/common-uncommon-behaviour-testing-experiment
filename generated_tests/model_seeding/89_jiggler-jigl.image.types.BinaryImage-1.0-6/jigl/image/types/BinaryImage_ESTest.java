/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 05 15:45:07 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.ComplexImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.MagnitudeImage;
import jigl.image.types.PhaseImage;
import jigl.image.types.PowerImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte) (-20);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      BinaryImage binaryImage0 = new BinaryImage(0, 16, byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)110;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((byte) (-1), (byte)77, byteArray1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = null;
      // Undeclared exception!
      try { 
        binaryImage0.copy((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)1;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(255, 140, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = new BinaryImage(2164, 0, byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.clear((Byte) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      binaryImage0.copy();
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((-220), (-220), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[4];
      byte byte0 = (byte)95;
      byteArray1[0] = (byte)95;
      byteArray1[1] = (byte)69;
      byteArray1[2] = (byte) (-48);
      byteArray1[3] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)45;
      byteArray2[1] = (byte)69;
      byteArray2[2] = (byte)69;
      byteArray2[3] = (byte)69;
      byteArray2[4] = (byte) (-48);
      byteArray2[5] = (byte)69;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-48);
      byteArray4[1] = (byte) (-48);
      byteArray4[2] = (byte)0;
      byteArray4[3] = (byte)45;
      byteArray4[4] = (byte)69;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)45;
      byteArray5[1] = (byte)95;
      byteArray0[4] = byteArray5;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage3 = binaryImage1.shift(373, 5);
      BinaryImage binaryImage4 = binaryImage3.difference(binaryImage0);
      binaryImage4.getJavaImage();
      KernelType kernelType0 = KernelType.PREWITT_Y;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      RealGrayImage realGrayImage0 = imageKernel0.add(9.0F);
      realGrayImage0.add(0.0F);
      realGrayImage0.add(1027.2885F);
      RealGrayImage realGrayImage1 = imageKernel0.add((-1.0F));
      BinaryImage binaryImage5 = new BinaryImage(realGrayImage1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-48);
      byte byte0 = (byte)107;
      byteArray0[1] = (byte)107;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte) (-80);
      BinaryImage binaryImage6 = null;
      try {
        binaryImage6 = new BinaryImage(373, 5, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(2136, 2136, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)29;
      BinaryImage binaryImage0 = new BinaryImage(255, 0, byteArray0);
      binaryImage0.toString();
      binaryImage0.Y();
      binaryImage0.getData();
      byte[][] byteArray1 = new byte[4][2];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      BinaryImage binaryImage1 = new BinaryImage(byteArray1);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      PowerImage powerImage0 = new PowerImage(0, 0);
      RealGrayImage realGrayImage0 = powerImage0.divide(1250.7F);
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 675;
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(81, 16);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage0.shift(255, 54);
      binaryImage1.difference(binaryImage0);
      BinaryImage binaryImage3 = new BinaryImage(54, 210);
      // Undeclared exception!
      try { 
        binaryImage3.get(0, 727);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 727
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      int int0 = (-1784);
      int int1 = 2370;
      PowerImage powerImage0 = null;
      try {
        powerImage0 = new PowerImage(2370, (-1784));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage3 = binaryImage2.shift(682, (-16777216));
      binaryImage0.difference(binaryImage3);
      binaryImage0.union(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(470, 470);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.shift((-879), 8);
      BinaryImage binaryImage2 = binaryImage0.difference(binaryImage1);
      Byte byte0 = new Byte((byte) (-75));
      Byte byte1 = new Byte((byte) (-20));
      Byte.toUnsignedInt((byte) (-75));
      byte1.byteValue();
      ((Byte)(byte) (-20)).byteValue();
      // Undeclared exception!
      try { 
        binaryImage2.set((-2034), (-220), byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      binaryImage0.count();
      ROI rOI0 = new ROI();
      rOI0.uy();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-4);
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      BinaryImage binaryImage2 = binaryImage0.shift((-13), 15);
      BinaryImage binaryImage3 = binaryImage2.difference(binaryImage0);
      binaryImage3.getJavaImage();
      // Undeclared exception!
      try { 
        binaryImage1.union(binaryImage2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(81, 16);
      PowerImage powerImage0 = new PowerImage(210, 210);
      PhaseImage phaseImage0 = new PhaseImage(210, 210);
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(phaseImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage3 = binaryImage1.shift(373, 5);
      BinaryImage binaryImage4 = binaryImage3.difference(binaryImage0);
      binaryImage4.getJavaImage();
      binaryImage0.union(binaryImage2);
      binaryImage3.intersection(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)59;
      BinaryImage binaryImage0 = new BinaryImage((byte)0, (byte)62, byteArray0);
      binaryImage0.toString();
      binaryImage0.Y();
      BinaryImage binaryImage1 = new BinaryImage((byte)0, (byte)0, byteArray0);
      binaryImage1.getData();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.difference(binaryImage0);
      Byte byte0 = new Byte((byte)16);
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set((-1047), 2059, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage2.shift(14, 13);
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-7);
      byteArray1[1] = (byte) (-24);
      byteArray1[2] = (byte)7;
      byteArray1[3] = (byte)71;
      byteArray1[4] = (byte)50;
      byteArray1[5] = (byte)3;
      byteArray1[6] = (byte)5;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage3 = null;
      try {
        binaryImage3 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.getJavaImage();
      // Undeclared exception!
      try { 
        binaryImage0.get(669, 669);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 669
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 1203;
      int int1 = 2254;
      BinaryImage binaryImage0 = new BinaryImage(1203, 2254);
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(713, 713);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      Byte byte0 = new Byte((byte) (-2));
      Byte byte1 = Byte.valueOf((byte) (-7));
      byte1.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set(713, 62, byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 713
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)29;
      Byte byte0 = new Byte((byte)3);
      ((Byte)(byte)0).byteValue();
      byte[][] byteArray1 = new byte[4][7];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      BinaryImage binaryImage0 = new BinaryImage(byteArray1);
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)38, (int) (byte)0, (Byte) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 38
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      PowerImage powerImage0 = new PowerImage(22, 22);
      // Undeclared exception!
      try { 
        binaryImage0.get(2370, 2203);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      BinaryImage binaryImage1 = binaryImage0.shift(81, 16);
      binaryImage1.getJavaImage();
      Byte byte0 = new Byte((byte)57);
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)57, 81, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 81
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(210, 2254);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.getJavaImage();
      BinaryImage binaryImage2 = binaryImage1.difference(binaryImage0);
      binaryImage1.max();
      binaryImage1.getJavaImage();
      binaryImage2.getJavaImage();
      binaryImage1.union(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PowerImage powerImage0 = mock(PowerImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(powerImage0).X();
      doReturn(0).when(powerImage0).Y();
      PowerImage powerImage1 = new PowerImage(powerImage0);
      powerImage1.addSum();
      powerImage1.addSum();
      ComplexImage complexImage0 = mock(ComplexImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(complexImage0).X();
      doReturn(0).when(complexImage0).Y();
      MagnitudeImage magnitudeImage0 = new MagnitudeImage(complexImage0);
      magnitudeImage0.addSum();
      magnitudeImage0.addSum();
      powerImage1.addSum();
      powerImage1.addSum();
      BinaryImage binaryImage0 = new BinaryImage(magnitudeImage0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(16, 16);
      binaryImage0.shift(81, 16);
      binaryImage0.shift((-3992), (-3992));
      PowerImage powerImage0 = null;
      try {
        powerImage0 = new PowerImage((-3992), (-3992));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          BinaryImage binaryImage0 = new BinaryImage(713, 713);
          // Undeclared exception!
          binaryImage0.shift(713, 713);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift((-879), 8);
      binaryImage0.copy();
      Byte byte0 = new Byte((byte)99);
      byte0.byteValue();
      ((Byte)(byte)99).byteValue();
      Byte.valueOf((byte)99);
      Byte byte1 = Byte.valueOf((byte)99);
      // Undeclared exception!
      try { 
        binaryImage0.set(2, 589, byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 210;
      BinaryImage binaryImage0 = new BinaryImage(210, 2254);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.getJavaImage();
      BinaryImage binaryImage2 = binaryImage1.difference(binaryImage0);
      binaryImage1.max();
      binaryImage1.getJavaImage();
      int int1 = 1209;
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)78;
      byteArray0[0] = byte0;
      byte byte1 = (byte)81;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-34);
      byteArray0[2] = byte2;
      byte byte3 = (byte)117;
      byteArray0[3] = byte3;
      byte byte4 = (byte)59;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-108);
      byteArray0[5] = byte5;
      byte byte6 = (byte)9;
      byteArray0[6] = byte6;
      byte byte7 = (byte)38;
      byteArray0[7] = byte7;
      BinaryImage binaryImage3 = new BinaryImage(int1, int0, byteArray0);
      binaryImage1.toString();
      binaryImage0.Y();
      binaryImage0.getData();
      byte byte8 = (byte)23;
      Byte byte9 = Byte.valueOf(byte8);
      binaryImage2.set((int) byteArray0[6], (int) byte3, byte9);
  }
}
