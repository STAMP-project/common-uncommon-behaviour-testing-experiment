/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 17:20:28 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.EClientErrors;
import com.ib.client.EReader;
import com.ib.client.EWrapper;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EReader_ESTest extends EReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 36);
      try { 
        eReader0.processMsg(36);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 504);
      eReader0.readLong();
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-518), "Bt_kKi");
      eReader0.createEException(16, eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        eReader0.readBoolFromInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\uFFF2\uFFE9F\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 2317);
      eReader0.run();
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-2404), (String) null);
      eReader0.createEException(19, eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 38);
      eReader0.readBoolFromInt();
      eReader0.readIntMax();
      eReader0.readDoubleMax();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      int int0 = 1896;
      Enumeration<DataInputStream> enumeration0 = (Enumeration<DataInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader1 = new EReader(dataInputStream1, eWrapper1, 18);
      try { 
        eReader1.readDouble();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 14);
      // Undeclared exception!
      try { 
        eReader0.processMsg(13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      int int0 = 47;
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 47);
      String string0 = "w3s\\I{^$";
      // Undeclared exception!
      try { 
        eReader0.processMsg(47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)0);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      int int0 = 6;
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 6);
      String string0 = "w3s\\I{^$";
      // Undeclared exception!
      try { 
        eReader0.processMsg(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)5);
      // Undeclared exception!
      try { 
        eReader0.readInt();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0005\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 50);
      try { 
        eReader0.processMsg(41);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F 0yT\"");
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, (EWrapper) null, 109);
      // Undeclared exception!
      try { 
        eReader0.readDouble();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = 23;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 23);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 23);
      try { 
        eReader0.processMsg(23);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 57);
      // Undeclared exception!
      try { 
        eReader0.processMsg(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      try { 
        eReader0.processMsg(44);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      int int0 = 523;
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 523);
      String string0 = "";
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(11, "");
      String string1 = "Fatal Error: Unknown message id.";
      eClientErrors_CodeMsgPair0.m_errorMsg = "Fatal Error: Unknown message id.";
      // Undeclared exception!
      try { 
        eReader0.readDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 7);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(1259, "\"iK");
      eClientErrors_CodeMsgPair0.m_errorMsg = "\"iK";
      eReader0.createEException(7, eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        EReader.readStr((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 47);
      // Undeclared exception!
      try { 
        eReader0.processMsg(47);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 6);
      // Undeclared exception!
      try { 
        eReader0.processMsg(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, (-1919));
      // Undeclared exception!
      try { 
        EReader.readInt((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-14);
      byteArray0[5] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte) (-58));
      eReader0.readDoubleMax();
      try { 
        eReader0.processMsg(36);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 53);
      eReader0.stop();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.readStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 290);
      // Undeclared exception!
      try { 
        eReader0.readLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 109);
      eReader0.run();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 27);
      try { 
        eReader0.processMsg(29);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 1896);
      try { 
        eReader0.processMsg(31);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-1859));
      // Undeclared exception!
      try { 
        eReader0.processMsg((byte)8);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\b\b\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EReader eReader0 = new EReader(dataInputStream0, (EWrapper) null, 36);
      eReader0.stop();
      try { 
        eReader0.processMsg((byte)40);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper1, 56);
      eReader0.stop();
      eReader0.run();
      try { 
        eReader0.processMsg(30);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)5);
      EReader.readStr(dataInputStream0);
      try { 
        eReader0.processMsg(1925);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 27);
      int int0 = 29;
      try { 
        eReader0.processMsg(29);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 51);
      // Undeclared exception!
      try { 
        eReader0.processMsg(51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)89);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      try { 
        EReader.readStr(dataInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1875, 0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      try { 
        EReader.readInt(dataInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)5);
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0005\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)8);
      // Undeclared exception!
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      int int0 = 27;
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 27);
      try { 
        eReader0.processMsg(27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      int int0 = EReader.EXECUTION_DATA_END;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 55);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 450);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream0);
      try { 
        EReader.readInt(dataInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-29);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F 0yT\"");
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 1267);
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\uFFE3\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 532);
      eReader0.stop();
      eReader0.run();
      try { 
        eReader0.processMsg((-2527));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 13);
      try { 
        eReader0.processMsg(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      int int0 = 27;
      DataInputStream dataInputStream2 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper2 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream2, eWrapper2, 1052);
      eReader0.run();
      eReader0.stop();
      try { 
        eReader0.processMsg(27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(836);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      sequenceInputStream0.mark(836);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 836);
      try { 
        eReader0.readInt();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 0);
      // Undeclared exception!
      try { 
        eReader0.readBoolFromInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 0);
      // Undeclared exception!
      try { 
        eReader0.processMsg(49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 57);
      try { 
        eReader0.processMsg(37);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 50);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-896), "C( A=L&gV<Pa[U`l@");
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F 0yT\"");
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 1267);
      eReader0.readIntMax();
      EReader eReader1 = new EReader(dataInputStream1, (EWrapper) null, 109);
      eReader0.readLong();
      eReader1.readDouble();
      eReader0.readStr();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, (-2812));
      int int0 = 20;
      // Undeclared exception!
      try { 
        eReader0.processMsg(20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(38, 38, 38, 38, 38).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 51);
      // Undeclared exception!
      eReader0.processMsg(56);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 44);
      int int0 = 26;
      try { 
        eReader0.processMsg(26);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte)5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream2, eWrapper0, 895);
      eReader0.stop();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg((byte)5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 194);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(609, "");
      eReader0.createEException(194, eClientErrors_CodeMsgPair0);
      // Undeclared exception!
      try { 
        EReader.readStr((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 57);
      // Undeclared exception!
      try { 
        eReader0.processMsg(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(38, 38, 38, 38, 38).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 1458);
      // Undeclared exception!
      eReader0.processMsg(21);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      int int0 = 27;
      int int1 = 0;
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      // Undeclared exception!
      try { 
        eReader0.processMsg(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eWrapper1).toString();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream2, eWrapper1, 27);
      eReader0.processMsg(16);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 56);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eWrapper0).toString();
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 56);
      eReader0.stop();
      eReader0.run();
      eReader0.processMsg(1);
      try { 
        eReader0.processMsg((byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn("").when(eWrapper0).toString();
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 14);
      eReader0.processMsg(14);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-1896), "ecvD_sq");
      eReader0.run();
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 33);
      eReader0.readDoubleMax();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        EReader.readInt(dataInputStream0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\b\b\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-14);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-5840));
      try { 
        eReader0.readBoolFromInt();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 42);
      eReader0.stop();
      eReader0.run();
      try { 
        eReader0.processMsg(42);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 2317);
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)40;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      int int0 = 38;
      EReader eReader0 = new EReader(dataInputStream0, (EWrapper) null, 38);
      int int1 = 46;
      // Undeclared exception!
      try { 
        eReader0.readLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"((\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 50);
      // Undeclared exception!
      try { 
        eReader0.processMsg(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 57);
      try { 
        eReader0.processMsg(39);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-3879));
      // Undeclared exception!
      try { 
        eReader0.readBoolFromInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 11);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)44;
      byteArray0[1] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-2223));
      // Undeclared exception!
      try { 
        eReader0.processMsg(50);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"C,\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte) (-14);
      byteArray0[3] = (byte) (-14);
      byteArray0[5] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((-916));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eWrapper0).toString();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 504);
      eReader0.readLong();
      FileSystemHandling.shouldAllThrowIOExceptions();
      eReader0.processMsg(52);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      int int0 = 52;
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 52);
      int int1 = 46;
      try { 
        eReader0.processMsg(43);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.createEException(6, (EClientErrors.CodeMsgPair) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EException", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-2100));
      try { 
        eReader0.readDouble();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(58, 58, 58, 58, 58).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 51);
      // Undeclared exception!
      eReader0.readDoubleMax();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-26);
      byteArray0[3] = (byte)43;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte) (-26));
      try { 
        eReader0.processMsg(42);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(38, 38, 38, 38, 38).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 51);
      // Undeclared exception!
      eReader0.processMsg(2);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 55);
      // Undeclared exception!
      try { 
        eReader0.processMsg(46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      int int0 = 12;
      // Undeclared exception!
      try { 
        eReader0.processMsg(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 14);
      eReader0.stop();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      int int0 = 2319;
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 2319);
      try { 
        eReader0.processMsg(48);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 27);
      int int0 = 55;
      // Undeclared exception!
      try { 
        eReader0.processMsg(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 57);
      // Undeclared exception!
      try { 
        eReader0.processMsg(57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-14);
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream1, eWrapper1, 21);
      eReader0.stop();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 895);
      eReader0.run();
      int int0 = 16;
      // Undeclared exception!
      try { 
        eReader0.processMsg(16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 0);
      eReader0.run();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = EReader.TICK_EFP;
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 50);
      try { 
        eReader0.processMsg(50);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper1, 14);
      // Undeclared exception!
      try { 
        eReader0.processMsg(14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-14);
      byteArray0[3] = (byte) (-14);
      byteArray0[5] = (byte) (-58);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 504);
      eReader0.readLong();
      dataInputStream0.readByte();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair((-518), "Bt_kKi");
      eReader0.createEException(16, eClientErrors_CodeMsgPair0);
      eReader0.readBoolFromInt();
      // Undeclared exception!
      try { 
        eReader0.readDouble();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 33);
      dataInputStream1.close();
      eReader0.readIntMax();
      try { 
        eReader0.processMsg(33);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-14);
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 50);
      // Undeclared exception!
      try { 
        eReader0.processMsg(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-14);
      byteArray0[7] = (byte) (-14);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EReader eReader0 = new EReader((DataInputStream) null, (EWrapper) null, 116);
      try { 
        eReader0.processMsg(37);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 44);
      eReader0.run();
      eReader0.run();
      eReader0.run();
      try { 
        eReader0.processMsg(38);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      try { 
        EReader.readStr(dataInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 27);
      // Undeclared exception!
      try { 
        eReader0.processMsg(45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-23);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 50);
      try { 
        eReader0.processMsg(30);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(38, 38, 38, 38, 38).when(dataInputStream0).read();
      doReturn(0L).when(dataInputStream0).skip(anyLong());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      dataInputStream1.skipBytes(51);
      dataInputStream1.reset();
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 51);
      // Undeclared exception!
      eReader0.readBoolFromInt();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EReader eReader0 = new EReader(dataInputStream0, (EWrapper) null, 36);
      // Undeclared exception!
      try { 
        eReader0.processMsg(46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 13);
      // Undeclared exception!
      try { 
        eReader0.processMsg(13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      int int0 = 2322;
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 2322);
      // Undeclared exception!
      try { 
        eReader0.processMsg(9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 450);
      eReader0.run();
      // Undeclared exception!
      try { 
        eReader0.processMsg(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, (-1455));
      EClientErrors.CodeMsgPair eClientErrors_CodeMsgPair0 = new EClientErrors.CodeMsgPair(330, "+2T0pr#\"B +");
      eReader0.createEException((-1455), eClientErrors_CodeMsgPair0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DataInputStream dataInputStream0 = null;
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      int int0 = 121;
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 121);
      // Undeclared exception!
      try { 
        EReader.readInt((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 44);
      int int0 = 8;
      // Undeclared exception!
      try { 
        eReader0.processMsg(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(dataInputStream0).read();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader.readStr(dataInputStream1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)0);
      eReader0.readIntMax();
      EWrapper eWrapper1 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader1 = new EReader(dataInputStream1, eWrapper1, (byte)0);
      // Undeclared exception!
      try { 
        eReader1.readLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\uFFF2\uFFE9F\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, (-1919));
      // Undeclared exception!
      try { 
        eReader0.readDoubleMax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DataInputStream dataInputStream0 = mock(DataInputStream.class, new ViolatedAssumptionAnswer());
      doReturn((-1738)).when(dataInputStream0).read();
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      EReader eReader0 = new EReader(dataInputStream1, eWrapper0, 33);
      dataInputStream1.close();
      try { 
        eReader0.processMsg(11);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }
}
