/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 06 16:43:32 GMT 2019
 */

package dsachat.gm.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dsachat.gm.gui.MultiHeroTreeModel;
import dsachat.gm.gui.ValueHolder;
import dsachat.share.hero.FightValue;
import dsachat.share.hero.Hero;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.ScrollPane;
import java.util.ArrayList;
import java.util.Stack;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.RowSorterEvent;
import javax.swing.event.TreeModelListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.VariableHeightLayoutCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiHeroTreeModel_ESTest extends MultiHeroTreeModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "java.lang.Object@0000000002";
      Object object0 = new Object();
      Object object1 = new Object();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002");
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged((Vector<Hero>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("", stack0);
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("");
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      multiHeroTreeModel1.getChildCount(multiHeroTreeModel0);
      multiHeroTreeModel1.getRoot();
      String string0 = "Weapons";
      ValueHolder valueHolder0 = new ValueHolder("Weapons", (Hero) null);
      String string1 = "Palejts";
      ValueHolder valueHolder1 = new ValueHolder("Weapons", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel1.getIndexOfChild(valueHolder1, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000008");
      FightValue fightValue0 = new FightValue("JnHwX#et`@^4%>^j", (-9), (-9));
      int int0 = multiHeroTreeModel0.getChildCount(fightValue0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      multiHeroTreeModel0.isLeaf(vector0);
      multiHeroTreeModel0.getChildCount(vector0);
      Vector<TreeModelListener> vector1 = new Vector<TreeModelListener>();
      Object object0 = new Object();
      FightValue fightValue0 = new FightValue("mZ v <pjZ", 0, 0);
      int int0 = multiHeroTreeModel0.getIndexOfChild(fightValue0, fightValue0);
      Integer integer0 = new Integer((-1));
      assertTrue(integer0.equals((Object)int0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      String string0 = "Weapons";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Weapons", vector0);
      multiHeroTreeModel0.isLeaf(vector0);
      multiHeroTreeModel0.getChildCount(vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("Weapons", (Hero) null);
      ValueHolder valueHolder1 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("4^|Ne4l<#/Wgl&1");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Barbarenstreitaxt", stack0);
      multiHeroTreeModel0.addTreeModelListener((TreeModelListener) null);
      boolean boolean0 = multiHeroTreeModel0.isLeaf(stack0);
      assertTrue(boolean0);
      assertTrue(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("1W6+6");
      int int0 = multiHeroTreeModel0.getIndexOfChild("1W6+6", "1W6+6");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("");
      multiHeroTreeModel0.getChild("", 3183);
      FightValue fightValue0 = new FightValue("(?~", 3183, 3183);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(fightValue0, 3183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3183 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("u 4<Pv8RqE,$2.gcVQ}");
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChildCount((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null, stack0);
      multiHeroTreeModel0.getChild(stack0, 1);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.isLeaf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002");
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      vector0.add((Hero) null);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = basicTreeUI0.new TreeModelHandler();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("dIOV8(9&{c, ;u8H.rW", vector0);
      multiHeroTreeModel1.addTreeModelListener(basicTreeUI_TreeModelHandler2);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "java.lang.Object@0000000002";
      objectArray0[1] = (Object) "dIOV8(9&{c, ;u8H.rW";
      objectArray0[2] = (Object) vector0;
      objectArray0[3] = (Object) "java.lang.Object@0000000002";
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 2);
      multiHeroTreeModel1.getChildCount(objectArray0[2]);
      MultiHeroTreeModel multiHeroTreeModel2 = new MultiHeroTreeModel((String) null);
      multiHeroTreeModel2.getRoot();
      MultiHeroTreeModel multiHeroTreeModel3 = new MultiHeroTreeModel("URWM[<7q;/B[N)YBo");
      multiHeroTreeModel1.getRoot();
      multiHeroTreeModel1.getChild(multiHeroTreeModel2, 2);
      Vector<ScrollPane> vector1 = new Vector<ScrollPane>();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(vector0, vector1);
      multiHeroTreeModel1.getIndexOfChild(defaultTableModel0, defaultTableModel1);
      ValueHolder valueHolder0 = new ValueHolder((String) null, (Hero) null);
      MultiHeroTreeModel multiHeroTreeModel4 = new MultiHeroTreeModel("`/H.Eh6-", vector0);
      ValueHolder valueHolder1 = new ValueHolder("K]sU#a51Q\"(@k", (Hero) null);
      multiHeroTreeModel2.isLeaf(objectArray0[3]);
      multiHeroTreeModel4.fireTreeStructureChanged(vector0);
      assertEquals(1, vector0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<Hero> arrayList0 = new ArrayList<Hero>();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = synthTreeUI0.new TreeModelHandler();
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("em.MaE/x>oJ", vector0);
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      FightValue fightValue0 = new FightValue("|GHv`oKv", (-2445), (-2445));
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(fightValue0, (-2445));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("47`>:", stack0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      multiHeroTreeModel0.removeTreeModelListener((TreeModelListener) null);
      assertTrue(stack0.empty());
      assertEquals(0, stack0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.getChildCount("dsachat.gm.gui.MultiHeroTreeModel");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("rzhLowwtLKs`5~2v\"D", (Hero) null);
      Object object0 = multiHeroTreeModel0.getChild(valueHolder0, 0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("");
      Object object0 = multiHeroTreeModel0.getRoot();
      assertNotNull(object0);
      
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      Object object1 = new Object();
      multiHeroTreeModel0.getIndexOfChild(basicTreeUI_TreeModelHandler0, object1);
      FightValue fightValue0 = new FightValue("", 5, (-1));
      boolean boolean0 = multiHeroTreeModel0.isLeaf(fightValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("AEh");
      int int0 = multiHeroTreeModel0.getChildCount("AEh");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("attack", (Hero) null);
      valueHolder0.name = "";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null);
      Object object0 = new Object();
      int int0 = multiHeroTreeModel0.getIndexOfChild(valueHolder0, object0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("", stack0);
      Integer.compare((-2071752343), (-2071752343));
      multiHeroTreeModel0.getRoot();
      ValueHolder valueHolder0 = new ValueHolder("", (Hero) null);
      valueHolder0.name = "Talents";
      ValueHolder valueHolder1 = new ValueHolder("Talents", (Hero) null);
      ValueHolder valueHolder2 = new ValueHolder("Talents", (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder2, 1821);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("9Z%]&.:Ilkhx6&}Dr9");
      multiHeroTreeModel0.getIndexOfChild("9Z%]&.:Ilkhx6&}Dr9", "9Z%]&.:Ilkhx6&}Dr9");
      multiHeroTreeModel0.getChild("9Z%]&.:Ilkhx6&}Dr9", (-2054863926));
      Vector<Hero> vector0 = new Vector<Hero>();
      FightValue fightValue0 = new FightValue("9Z%]&.:Ilkhx6&}Dr9", (-1691), (-2045878366));
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.getIndexOfChild(fightValue0, basicTreeUI_TreeModelHandler0);
      boolean boolean0 = multiHeroTreeModel0.isLeaf(vector0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("");
      TreeModelListener treeModelListener0 = null;
      multiHeroTreeModel0.removeTreeModelListener((TreeModelListener) null);
      multiHeroTreeModel0.getRoot();
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("1W6+6");
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = synthTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      Object object0 = multiHeroTreeModel0.getChild("1W6+6", (-1529));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "dsachat.gm.gui.MultiHeroTreeModel";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.isLeaf("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.getChildCount("dsachat.gm.gui.MultiHeroTreeModel");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ImageIcon imageIcon0 = new ImageIcon();
      basicTreeUI0.setExpandedIcon(imageIcon0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      multiHeroTreeModel0.getChild(basicTreeUI_TreeModelHandler0, 0);
      multiHeroTreeModel0.getIndexOfChild("dsachat.gm.gui.MultiHeroTreeModel", (Object) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.isLeaf((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("9;)4m2H.V/Wi[r/*$m");
      Object[][] objectArray0 = new Object[9][7];
      Object[] objectArray1 = new Object[6];
      objectArray1[0] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray1[1] = (Object) multiHeroTreeModel0;
      objectArray1[2] = (Object) multiHeroTreeModel0;
      objectArray1[3] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray1[4] = (Object) multiHeroTreeModel0;
      objectArray1[5] = (Object) multiHeroTreeModel0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[5];
      multiHeroTreeModel0.getChild(objectArray1[2], 2519);
      objectArray2[0] = null;
      objectArray2[1] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray2[2] = (Object) multiHeroTreeModel0;
      objectArray2[3] = (Object) "9;)4m2H.V/Wi[r/*$m";
      multiHeroTreeModel0.getRoot();
      multiHeroTreeModel0.getChild("9;)4m2H.V/Wi[r/*$m", 2519);
      objectArray2[4] = null;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[1];
      objectArray3[0] = null;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[0];
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[7];
      objectArray5[0] = (Object) multiHeroTreeModel0;
      objectArray5[1] = (Object) multiHeroTreeModel0;
      objectArray5[2] = (Object) "9;)4m2H.V/Wi[r/*$m";
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("9;)4m2H.V/Wi[r/*$m");
      Object object0 = multiHeroTreeModel1.getRoot();
      assertNotNull(object0);
      
      objectArray5[3] = (Object) "9;)4m2H.V/Wi[r/*$m";
      Object object1 = new Object();
      multiHeroTreeModel1.getChild(object1, 32);
      objectArray5[4] = null;
      objectArray5[5] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray5[6] = null;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[5];
      objectArray6[0] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray6[1] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray6[2] = null;
      objectArray6[3] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray6[4] = (Object) multiHeroTreeModel0;
      objectArray0[5] = objectArray6;
      Object[] objectArray7 = new Object[0];
      objectArray0[6] = objectArray7;
      Object[] objectArray8 = new Object[6];
      Object object2 = new Object();
      objectArray8[0] = object2;
      objectArray8[1] = object1;
      objectArray8[2] = null;
      objectArray8[3] = (Object) multiHeroTreeModel1;
      Object object3 = new Object();
      objectArray8[4] = object3;
      objectArray8[5] = (Object) multiHeroTreeModel1;
      objectArray0[7] = objectArray8;
      Object[] objectArray9 = new Object[5];
      objectArray9[0] = (Object) multiHeroTreeModel0;
      objectArray9[1] = (Object) "9;)4m2H.V/Wi[r/*$m";
      objectArray9[2] = null;
      objectArray9[3] = null;
      objectArray9[4] = object1;
      objectArray0[8] = objectArray9;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray7);
      boolean boolean0 = multiHeroTreeModel0.isLeaf(defaultTableModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("kF");
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("kF");
      Object object0 = multiHeroTreeModel0.getRoot();
      assertEquals("kF", object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("1W6+6");
      Object object0 = multiHeroTreeModel0.getChild("1W6+6", 2867);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("");
      Vector<TreeModelListener> vector0 = new Vector<TreeModelListener>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      vector0.add((TreeModelListener) basicTreeUI_TreeModelHandler0);
      multiHeroTreeModel0.list = vector0;
      Stack<Hero> stack0 = new Stack<Hero>();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(stack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      vector0.add((Hero) null);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler1);
      multiHeroTreeModel0.getChildCount(vector0);
      multiHeroTreeModel0.getRoot();
      multiHeroTreeModel0.getIndexOfChild("java.lang.Object@0000000002", "java.lang.Object@0000000002");
      ValueHolder valueHolder0 = new ValueHolder("attack", (Hero) null);
      multiHeroTreeModel0.isLeaf(valueHolder0);
      multiHeroTreeModel0.getChild(valueHolder0, 252);
      assertEquals(1, vector0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<Hero> vector0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.MultiHeroTreeModel");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel((String) null, vector0);
      multiHeroTreeModel1.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      Hero hero0 = null;
      vector0.add((Hero) null);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      FightValue fightValue0 = new FightValue("dsachat.gm.gui.MultiHeroTreeModel", (-578), (-578));
      multiHeroTreeModel1.getChildCount(fightValue0);
      multiHeroTreeModel0.getRoot();
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null, vector0);
      Object[] objectArray0 = new Object[5];
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) vector0;
      objectArray0[3] = (Object) vector0;
      objectArray0[4] = (Object) vector0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 808);
      multiHeroTreeModel0.getIndexOfChild(vector0, defaultTableModel0);
      Object object0 = new Object();
      multiHeroTreeModel0.isLeaf(object0);
      Object object1 = multiHeroTreeModel0.getRoot();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Barbarenstreitaxt", stack0);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild((Object) null, (-894));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("I1|qu uD?mlY_M~", stack0);
      int int0 = multiHeroTreeModel0.getChildCount(stack0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel1.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer.compare((-2071752343), 3889);
      multiHeroTreeModel0.getChildCount(integer0);
      multiHeroTreeModel1.getRoot();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler2 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel1.getIndexOfChild(basicTreeUI_TreeModelHandler2, basicTreeUI1);
      ValueHolder valueHolder0 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      multiHeroTreeModel0.getIndexOfChild(valueHolder0, integer0);
      ValueHolder valueHolder1 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      multiHeroTreeModel0.isLeaf("attack");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Barbarenstreitaxt", stack0);
      Object object0 = multiHeroTreeModel0.getChild(stack0, (-321));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("", vector0);
      multiHeroTreeModel0.removeTreeModelListener((TreeModelListener) null);
      Object object0 = new Object();
      multiHeroTreeModel0.getChildCount(object0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane((Component) null, 0, 3675);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild((Object) null, "`jr:SW@k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Talents", (Vector<Hero>) null);
      FightValue fightValue0 = new FightValue((String) null, 2901, 1415);
      boolean boolean0 = multiHeroTreeModel0.isLeaf(fightValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000006", stack0);
      FightValue fightValue0 = new FightValue("Talents", 596, 596);
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("java.lang.String@0000000006");
      multiHeroTreeModel1.getChild("java.lang.String@0000000006", 656);
      Object object0 = new Object();
      multiHeroTreeModel0.getIndexOfChild(multiHeroTreeModel1, fightValue0);
      multiHeroTreeModel0.isLeaf(fightValue0);
      multiHeroTreeModel1.getChild(multiHeroTreeModel0, 656);
      multiHeroTreeModel0.getChild(basicTreeUI0, (-6254807));
      multiHeroTreeModel1.getRoot();
      MultiHeroTreeModel multiHeroTreeModel2 = new MultiHeroTreeModel("java.lang.String@0000000006");
      multiHeroTreeModel2.heros = (Vector<Hero>) stack0;
      // Undeclared exception!
      try { 
        multiHeroTreeModel2.getChild("Talents", 1170);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1170 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "java.lang.Object@0000000002";
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel((String) null, vector0);
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel1.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      Hero hero0 = null;
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      multiHeroTreeModel0.getChildCount(integer0);
      multiHeroTreeModel1.getRoot();
      ValueHolder valueHolder0 = new ValueHolder((String) null, (Hero) null);
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("");
      Vector<TreeModelListener> vector0 = null;
      multiHeroTreeModel0.list = null;
      multiHeroTreeModel0.heros = null;
      TreeModelListener treeModelListener0 = null;
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.addTreeModelListener((TreeModelListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("Enteresser");
      vector0.add((Hero) null);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("dIOV8(9&{c, ;8H.rW");
      multiHeroTreeModel1.addTreeModelListener(basicTreeUI_TreeModelHandler1);
      Object[] objectArray0 = new Object[10];
      objectArray0[0] = (Object) "Enteresser";
      objectArray0[3] = (Object) "Enteresser";
      MultiHeroTreeModel multiHeroTreeModel2 = new MultiHeroTreeModel("dIOV8(9&{c, ;8H.rW");
      multiHeroTreeModel0.getRoot();
      MultiHeroTreeModel multiHeroTreeModel3 = new MultiHeroTreeModel("URWM[z<7q;/B[N)YBo");
      multiHeroTreeModel1.getRoot();
      Vector<ScrollPane> vector1 = new Vector<ScrollPane>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector1);
      multiHeroTreeModel0.fireTreeStructureChanged(vector0);
      assertFalse(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.isLeaf("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.getChildCount("dsachat.gm.gui.MultiHeroTreeModel");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ImageIcon imageIcon0 = new ImageIcon();
      basicTreeUI0.setExpandedIcon(imageIcon0);
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      multiHeroTreeModel0.removeTreeModelListener(basicTreeUI_TreeModelHandler0);
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
      defaultTreeSelectionModel0.getSelectionPath();
      Object object0 = new Object();
      multiHeroTreeModel0.valueForPathChanged((TreePath) null, object0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002");
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      int int0 = multiHeroTreeModel0.getChildCount(valueHolder0);
      assertEquals(0, int0);
      
      Object object0 = multiHeroTreeModel0.getRoot();
      assertNotNull(object0);
      
      Integer integer0 = new Integer(0);
      assertTrue(integer0.equals((Object)int0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "java.lang.Object@0000000002";
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      MultiHeroTreeModel multiHeroTreeModel1 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      Hero hero0 = null;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      int int0 = (-2071752343);
      Integer.compare((-2071752343), 3899);
      multiHeroTreeModel0.getChildCount(integer0);
      multiHeroTreeModel1.getRoot();
      ValueHolder valueHolder0 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      valueHolder0.name = "Talents";
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      vector0.add((Hero) null);
      multiHeroTreeModel0.addTreeModelListener(basicTreeUI_TreeModelHandler0);
      ValueHolder valueHolder0 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      multiHeroTreeModel0.getChildCount(valueHolder0);
      multiHeroTreeModel0.getRoot();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler1 = basicTreeUI0.new TreeModelHandler();
      multiHeroTreeModel0.getIndexOfChild(basicTreeUI_TreeModelHandler1, vector0);
      ValueHolder valueHolder1 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      Vector<Integer> vector1 = new Vector<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector1, vector0);
      multiHeroTreeModel0.isLeaf(defaultTableModel0);
      int int0 = 252;
      // Undeclared exception!
      try { 
        RowSorterEvent.Type.valueOf("java.lang.Object@0000000002");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant javax.swing.event.RowSorterEvent.Type.java.lang.Object@0000000002
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.String@0000000006", stack0);
      FightValue fightValue0 = new FightValue("Talents", (-246), (-246));
      multiHeroTreeModel0.getChildCount("Talents");
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("Talents", (Hero) null);
      ValueHolder valueHolder1 = new ValueHolder("Talents", (Hero) null);
      multiHeroTreeModel0.getRoot();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getChild(valueHolder0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("dsachat.gm.gui.MultiHeroTreeModel");
      multiHeroTreeModel0.isLeaf("dsachat.gm.gui.MultiHeroTreeModel");
      int int0 = multiHeroTreeModel0.getIndexOfChild("dsachat.gm.gui.MultiHeroTreeModel", "dsachat.gm.gui.MultiHeroTreeModel");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "";
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("", stack0);
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      BasicTreeUI.TreeModelHandler basicTreeUI_TreeModelHandler0 = metalTreeUI0.new TreeModelHandler();
      Vector<TreeModelListener> vector0 = new Vector<TreeModelListener>();
      multiHeroTreeModel0.list = vector0;
      int int0 = (-2298);
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane((-2298));
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("9Z%]&.:Ilkhx6&}Dr9");
      Vector<Hero> vector0 = new Vector<Hero>();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("9Z%]&.:Ilkhx6&}Dr9");
      multiHeroTreeModel0.getIndexOfChild("9Z%]&.:Ilkhx6&}Dr9", "9Z%]&.:Ilkhx6&}Dr9");
      Vector<Hero> vector0 = new Vector<Hero>();
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.fireTreeStructureChanged(vector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path in TreePath must be non null and not empty.
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Stack<Hero> stack0 = new Stack<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002");
      Hero hero0 = null;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      multiHeroTreeModel0.getChildCount(integer0);
      multiHeroTreeModel0.getRoot();
      ValueHolder valueHolder0 = new ValueHolder("java.lang.Object@0000000002", (Hero) null);
      String string0 = "Talents";
      valueHolder0.name = "Talents";
      // Undeclared exception!
      try { 
        multiHeroTreeModel0.getIndexOfChild(valueHolder0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dsachat.gm.gui.MultiHeroTreeModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      ValueHolder valueHolder0 = new ValueHolder("attack", (Hero) null);
      valueHolder0.name = "";
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel((String) null);
      Object object0 = new Object();
      int int0 = multiHeroTreeModel0.getIndexOfChild(valueHolder0, object0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Vector<Hero> vector0 = new Vector<Hero>();
      MultiHeroTreeModel multiHeroTreeModel0 = new MultiHeroTreeModel("java.lang.Object@0000000002", vector0);
      Object object0 = new Object();
      boolean boolean0 = multiHeroTreeModel0.isLeaf(object0);
      assertFalse(boolean0);
  }
}
